[
    {
        "Text": "#G02# As a Data user, I want to have the 12-19-2017 deletions processed.",
        "Persona": [
            " Data user"
        ],
        "Action": [
            "want",
            "have"
        ],
        "Entity": [
            "deletions"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to redesign the Resources page, so that it matches the new Broker design styles.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "redesign",
            "page",
            "matches",
            "broker",
            "design",
            "styles"
        ],
        "Entity": [
            "resources",
            "page",
            "matches",
            "broker",
            "design",
            "styles"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to report to the Agencies about user testing, so that they are aware of their contributions to making Broker a better UX.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "report",
            "are",
            "broker",
            "better"
        ],
        "Entity": [
            "report",
            "agencies",
            "user",
            "testing",
            "contributions",
            "making",
            "broker",
            "better"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to move on to round 2 of DABS or FABS landing page edits, so that I can get approvals from leadership.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "move",
            "round",
            "dabs",
            "page",
            "edits",
            "can",
            "get"
        ],
        "Entity": [
            "move",
            "round",
            "dabs",
            "landing",
            "page",
            "edits",
            "can",
            "approvals",
            "leadership"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to move on to round 3 of the Help page edits, so that I can get approvals from leadership.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "move",
            "round",
            "help",
            "page",
            "edits",
            "can",
            "get"
        ],
        "Entity": [
            "move",
            "round",
            "help",
            "page",
            "edits",
            "can",
            "approvals",
            "leadership"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to be able to log better, so that I can troubleshoot issues with particular submissions and functions.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "log",
            "better",
            "can",
            "troubleshoot",
            "issues",
            "functions"
        ],
        "Entity": [
            "able",
            "log",
            "better",
            "can",
            "issues",
            "particular",
            "submissions",
            "functions"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to add the updates on a FABS submission to be modified when the publishStatus changes, so that I know when the status of the submission has changed.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "add",
            "updates",
            "modified",
            "changes",
            "know",
            "has",
            "changed"
        ],
        "Entity": [
            "updates",
            "submission",
            "changes",
            "know",
            "status",
            "submission"
        ]
    },
    {
        "Text": "#G02# As a DevOps engineer, I want New Relic to provide useful data across all applications.",
        "Persona": [
            " DevOps engineer"
        ],
        "Action": [
            "want",
            "provide"
        ],
        "Entity": [
            "relic",
            "useful",
            "data",
            "all",
            "applications"
        ]
    },
    {
        "Text": "#G02# As a UI designer,  I want to move on to round 2 of the Help page edits, so that I can get approvals from leadership.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "move",
            "round",
            "help",
            "page",
            "edits",
            "can",
            "get"
        ],
        "Entity": [
            "move",
            "round",
            "help",
            "page",
            "edits",
            "can",
            "approvals",
            "leadership"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to move on to round 2 of Homepage edits, so that I can get approvals from leadership.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "move",
            "round",
            "edits",
            "can",
            "get"
        ],
        "Entity": [
            "move",
            "round",
            "edits",
            "can",
            "approvals",
            "leadership"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to Upload and Validate the error message to have accurate text.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "upload",
            "validate",
            "message",
            "have"
        ],
        "Entity": [
            "error",
            "message",
            "text"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want the D1 file generation to be synced with the FPDS data load, so that I don't have to regenerate a file if no data has been updated.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "file",
            "load",
            "don't",
            "have",
            "regenerate",
            "file",
            "has",
            "been",
            "updated"
        ],
        "Entity": [
            "file",
            "generation",
            "data",
            "load",
            "don't",
            "file",
            "data"
        ]
    },
    {
        "Text": "#G02# As a Website user, I want to access published FABS files, so that I can see the new files as they come in.",
        "Persona": [
            " Website user"
        ],
        "Action": [
            "want",
            "access",
            "files",
            "can",
            "see",
            "files",
            "come"
        ],
        "Entity": [
            "access",
            "files",
            "can",
            "see",
            "files"
        ]
    },
    {
        "Text": "#G02# As an owner, I want to be sure that USAspending only send grant records to my system.",
        "Persona": [
            " owner"
        ],
        "Action": [
            "want",
            "send",
            "grant",
            "records"
        ],
        "Entity": [
            "send",
            "grant",
            "records",
            "system"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to update the Broker validation rule table to account for the rule updates in DB-2213.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "update",
            "broker",
            "rule",
            "table",
            "account",
            "rule",
            "updates"
        ],
        "Entity": [
            "update",
            "broker",
            "validation",
            "rule",
            "table",
            "account",
            "rule",
            "updates"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to add the GTAS window data to the database, so that I can ensure the site is locked down during the GTAS submission period.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "add",
            "window",
            "can",
            "ensure",
            "site",
            "down"
        ],
        "Entity": [
            "window",
            "data",
            "database",
            "can",
            "ensure",
            "site",
            "down",
            "submission",
            "period"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want D Files generation requests to be managed and cached, so that duplicate requests do not cause performance issues.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "files",
            "requests",
            "managed",
            "cached",
            "duplicate",
            "requests",
            "cause",
            "issues"
        ],
        "Entity": [
            "files",
            "generation",
            "requests",
            "duplicate",
            "requests",
            "cause",
            "performance",
            "issues"
        ]
    },
    {
        "Text": "#G02# As a user, I want to access the raw agency published files from FABS via USAspending.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "access",
            "files"
        ],
        "Entity": [
            "access",
            "raw",
            "agency",
            "files"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to be able to include a large number of flexfields without performance impact.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "include",
            "number",
            "impact"
        ],
        "Entity": [
            "able",
            "large",
            "number",
            "performance",
            "impact"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want  to help create content mockups, so that I can submit my data efficiently.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "help",
            "create",
            "content",
            "can",
            "submit"
        ],
        "Entity": [
            "help",
            "content",
            "can",
            "data"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to track the issues that come up in Tech Thursday, so that I know what to test and what want s to be fixed.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "track",
            "issues",
            "come",
            "know",
            "test",
            "want"
        ],
        "Entity": [
            "track",
            "issues",
            "tech",
            "know",
            "test"
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to create a user testing summary from the UI SME, so that I can know what UI improvements we will follow through on.",
        "Persona": [
            " Owner"
        ],
        "Action": [
            "want",
            "create",
            "can",
            "know",
            "will",
            "follow"
        ],
        "Entity": [
            "user",
            "testing",
            "summary",
            "can",
            "know",
            "improvements",
            "will",
            "follow"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to begin user testing, so that I can validate stakeholder UI improvement requests.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "begin",
            "can",
            "validate",
            "requests"
        ],
        "Entity": [
            "user",
            "testing",
            "can",
            "stakeholder",
            "improvement",
            "requests"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to schedule user testing, so that I can give the testers advanced notice to ensure buy-in.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "schedule",
            "can",
            "give",
            "notice",
            "ensure",
            "buy-in"
        ],
        "Entity": [
            "schedule",
            "user",
            "testing",
            "can",
            "give",
            "testers",
            "notice",
            "ensure"
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to design a schedule from the UI SME, so that I know the potential timeline of the UI improvements wanted.",
        "Persona": [
            " Owner"
        ],
        "Action": [
            "want",
            "design",
            "schedule",
            "know"
        ],
        "Entity": [
            "design",
            "schedule",
            "know",
            "potential",
            "improvements"
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to design an audit from the UI SME, so that I know the potential scope of the UI improvements want ed.",
        "Persona": [
            " Owner"
        ],
        "Action": [
            "want",
            "design",
            "audit",
            "know",
            "want"
        ],
        "Entity": [
            "design",
            "audit",
            "know",
            "potential",
            "scope",
            "improvements"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to prevent users from double publishing FABS submissions after refreshing, so that there are no duplicates.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "prevent",
            "double",
            "are",
            "duplicates"
        ],
        "Entity": [
            "users",
            "double",
            "publishing",
            "submissions",
            "there",
            "duplicates"
        ]
    },
    {
        "Text": "#G02# As an data user, I want to receive updates to FABS records.",
        "Persona": [
            " data user"
        ],
        "Action": [
            "want",
            "receive",
            "updates",
            "records"
        ],
        "Entity": [
            "updates",
            "records"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to update the FABS sample file to remove FundingAgencyCode after FABS is updated to no longer require the header.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "update",
            "sample",
            "file",
            "remove",
            "updated",
            "require"
        ],
        "Entity": [
            "update",
            "sample",
            "file",
            "remove",
            "header"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to ensure that deleted FSRS records are not included in submissions.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "ensure",
            "deleted",
            "records",
            "are"
        ],
        "Entity": [
            "ensure",
            "records",
            "submissions"
        ]
    },
    {
        "Text": "#G02# As a website user, I want to see updated financial assistance data daily.",
        "Persona": [
            " website user"
        ],
        "Action": [
            "want",
            "see",
            "updated"
        ],
        "Entity": [
            "see",
            "assistance",
            "data",
            "daily"
        ]
    },
    {
        "Text": "#G02# As a user, I want the publish button in FABS to deactivate after I click it while the derivations are happening, so that I cannot click it multiple times for the same submission.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "publish",
            "button",
            "deactivate",
            "click",
            "while",
            "are",
            "cannot",
            "click",
            "times"
        ],
        "Entity": [
            "button",
            "click",
            "while",
            "derivations",
            "happening",
            "click",
            "multiple",
            "times",
            "submission"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to ensure that attempts to correct or delete non-existent records don't create new published data.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "ensure",
            "attempts",
            "correct",
            "delete",
            "records",
            "don't",
            "create"
        ],
        "Entity": [
            "ensure",
            "attempts",
            "records",
            "don't",
            "data"
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to reset the environment to only take Staging MAX permissions, so that I can ensure that the FABS testers no longer have access.",
        "Persona": [
            " Owner"
        ],
        "Action": [
            "want",
            "reset",
            "take",
            "can",
            "ensure",
            "have",
            "access"
        ],
        "Entity": [
            "reset",
            "environment",
            "take",
            "staging",
            "max",
            "permissions",
            "can",
            "ensure",
            "testers",
            "access"
        ]
    },
    {
        "Text": "#G02# As a user, I want the flexfields in my submission file to appear in the warning and error files when the only error is a missing required element.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "file",
            "appear",
            "files",
            "required"
        ],
        "Entity": [
            "submission",
            "file",
            "warning",
            "error",
            "files",
            "error",
            "element"
        ]
    },
    {
        "Text": "#G02# As a user, I want to have accurate and complete data related to PPoPCode and PPoPCongressionalDistrict.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "complete"
        ],
        "Entity": [
            "data"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want the FABS validation rules to accept zero and blank for loan records.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "rules",
            "accept",
            "zero",
            "blank",
            "loan",
            "records"
        ],
        "Entity": [
            "validation",
            "rules",
            "zero",
            "blank",
            "loan",
            "records"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want FABS deployed into production, so I can submit my Financial Assistance data.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "can",
            "submit"
        ],
        "Entity": [
            "production",
            "can",
            "assistance",
            "data"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to clarify to users what exactly is triggering the CFDA error code in each case.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "clarify",
            "code",
            "case"
        ],
        "Entity": [
            "users",
            "error",
            "code",
            "case"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to be confident that the data coming from SAM is complete.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "complete"
        ],
        "Entity": [
            "confident",
            "data",
            "coming",
            "sam"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want my domain models to be indexed properly, so that I can get validation results back in a reasonable amount of time.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "models",
            "can",
            "get",
            "results",
            "back",
            "amount",
            "time"
        ],
        "Entity": [
            "domain",
            "models",
            "can",
            "validation",
            "results",
            "back",
            "amount",
            "time"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want the FABS validation rules to accept zero and blank for non-loan records.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "rules",
            "accept",
            "zero",
            "blank",
            "records"
        ],
        "Entity": [
            "validation",
            "rules",
            "zero",
            "blank",
            "records"
        ]
    },
    {
        "Text": "#G02# As a broker team member, I want to make some updates to the SQL codes for clarity.",
        "Persona": [
            " broker team member"
        ],
        "Action": [
            "want",
            "make",
            "updates",
            "codes"
        ],
        "Entity": [
            "make",
            "updates",
            "codes",
            "clarity"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to have all derived data elements derived properly.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "have",
            "derived",
            "derived"
        ],
        "Entity": [
            "all",
            "data",
            "elements"
        ]
    },
    {
        "Text": "#G02# As a broker team member, I want to add the 00***** and 00FORGN PPoPCode cases to the derivation logic.",
        "Persona": [
            " broker team member"
        ],
        "Action": [
            "want",
            "add",
            "cases"
        ],
        "Entity": [
            "cases",
            "derivation",
            "logic"
        ]
    },
    {
        "Text": "#G02# As a data user, I want to see the office names derived from office codes, so that I can have appropriate context for understanding them.",
        "Persona": [
            " data user"
        ],
        "Action": [
            "want",
            "see",
            "names",
            "derived",
            "codes",
            "can",
            "have",
            "appropriate"
        ],
        "Entity": [
            "see",
            "office",
            "names",
            "office",
            "codes",
            "can",
            "context",
            "understanding"
        ]
    },
    {
        "Text": "#G02# As a broker user, I want the historical FABS loader to derive fields, so that my agency codes are correct in the PublishedAwardFinancialAssistance table.",
        "Persona": [
            " broker user"
        ],
        "Action": [
            "want",
            "derive",
            "fields",
            "codes",
            "are",
            "correct",
            "table"
        ],
        "Entity": [
            "loader",
            "fields",
            "agency",
            "codes",
            "table"
        ]
    },
    {
        "Text": "#G02# As a broker team member, I want to ensure the Broker resources, validations, and P&P pages are updated appropriately for the launch of FABS and DAIMS v1.1.",
        "Persona": [
            " broker team member"
        ],
        "Action": [
            "want",
            "ensure",
            "broker",
            "pages",
            "are",
            "updated",
            "launch"
        ],
        "Entity": [
            "ensure",
            "broker",
            "resources",
            "validations",
            "pages",
            "launch"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want the data loaded from historical FABS to include the FREC derivations, so that I can have consistent FREC data for USASpending.gov.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "include",
            "can",
            "have"
        ],
        "Entity": [
            "data",
            "derivations",
            "can",
            "data"
        ]
    },
    {
        "Text": "#G02# As a user, I don't want to see NASA grants displayed as contracts.",
        "Persona": [
            " user"
        ],
        "Action": [
            "don't",
            "want",
            "see",
            "grants",
            "contracts"
        ],
        "Entity": [
            "don't",
            "see",
            "grants",
            "contracts"
        ]
    },
    {
        "Text": "#G02# As a user, I want the DUNS validations to accept records whose ActionTypes are B, C, or D and the DUNS is registered in SAM, even though it may have expired.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "accept",
            "records",
            "are",
            "even",
            "may",
            "have",
            "expired"
        ],
        "Entity": [
            "duns",
            "validations",
            "records",
            "duns",
            "sam",
            "even",
            "may"
        ]
    },
    {
        "Text": "#G02# As a user, I want the DUNS validations to accept records whose ActionDates are before the current registration date in SAM, but after the initial registration date.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "accept",
            "records",
            "are",
            "date",
            "initial",
            "date"
        ],
        "Entity": [
            "duns",
            "validations",
            "records",
            "current",
            "registration",
            "date",
            "sam",
            "but",
            "initial",
            "registration",
            "date"
        ]
    },
    {
        "Text": "#G02# As a broker team member, I want to derive FundingAgencyCode, so that the data quality and completeness improves.",
        "Persona": [
            " broker team member"
        ],
        "Action": [
            "want",
            "derive",
            "improves"
        ],
        "Entity": [
            "data",
            "quality",
            "completeness",
            "improves"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want the maximum length allowed for LegalEntityAddressLine3 to match Schema v1.1.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "match"
        ],
        "Entity": [
            "maximum",
            "length",
            "match",
            "schema"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to use the schema v1.1 headers in my FABS file.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "use",
            "file"
        ],
        "Entity": [
            "use",
            "schema",
            "headers",
            "file"
        ]
    },
    {
        "Text": "#G02# As a agency user, I want to map the FederalActionObligation properly to the Atom Feed.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "map",
            "feed"
        ],
        "Entity": [
            "map",
            "atom",
            "feed"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to have PPoPZIP+4 work the same as the Legal Entity ZIP validations.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "have",
            "work",
            "zip"
        ],
        "Entity": [
            "work",
            "entity",
            "zip",
            "validations"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to link the SAMPLE FILE on the \"What you want  to submit\" dialog to point to the correct file, so that I have an accurate reference for my agency submissions.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "link",
            "sample",
            "file",
            "want",
            "point",
            "correct",
            "file",
            "have",
            "reference"
        ],
        "Entity": [
            "link",
            "sample",
            "file",
            "you",
            "dialog",
            "point",
            "file",
            "reference",
            "agency",
            "submissions"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want FPDS data to be up-to-date daily.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want"
        ],
        "Entity": [
            "data",
            "daily"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to determine how agencies will generate and validate D Files from FABS and FPDS data.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "determine",
            "will",
            "generate",
            "validate",
            "files"
        ],
        "Entity": [
            "how",
            "agencies",
            "will",
            "files",
            "data"
        ]
    },
    {
        "Text": "#G02# As a user, I want to generate and validate D Files from FABS and FPDS data.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "generate",
            "validate",
            "files"
        ],
        "Entity": [
            "files",
            "data"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want the header information box to show updated date AND time, so that I know when it was updated.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "box",
            "show",
            "updated",
            "date",
            "time",
            "know",
            "was",
            "updated"
        ],
        "Entity": [
            "header",
            "information",
            "box",
            "show",
            "date",
            "time",
            "know"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to receive a more helpful file-level error when I upload a file with the wrong extension.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "receive",
            "upload",
            "file",
            "wrong"
        ],
        "Entity": [
            "more",
            "error",
            "file",
            "wrong",
            "extension"
        ]
    },
    {
        "Text": "#G02# As a tester, I want to have access to test features in environments other than Staging, so that I can test any nonProd feature in any environment.",
        "Persona": [
            " tester"
        ],
        "Action": [
            "want",
            "have",
            "access",
            "test",
            "features",
            "can",
            "test",
            "feature"
        ],
        "Entity": [
            "access",
            "test",
            "features",
            "environments",
            "staging",
            "can",
            "test",
            "feature",
            "environment"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to submission errors to accurately represent FABS errors, so that I know why my submission didn't work.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "represent",
            "know",
            "work"
        ],
        "Entity": [
            "submission",
            "errors",
            "errors",
            "know",
            "why",
            "submission",
            "didn't",
            "work"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want the frontend URLs to more accurately reflect the page I'm accessing, so that I'm not confused.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "reflect",
            "page",
            "confused"
        ],
        "Entity": [
            "more",
            "page"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want all historical Financial Assistance data loaded for FABS go-live.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want"
        ],
        "Entity": [
            "all",
            "assistance",
            "data"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want the historical FPDS data loader to include both extracted historical data and FPDS feed data.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "include",
            "feed"
        ],
        "Entity": [
            "data",
            "loader",
            "data",
            "feed",
            "data"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want historical FPDS data loaded.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want"
        ],
        "Entity": [
            "data"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to accurately see who created a submission, so that I'm not confused about who last updated a submission.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "see",
            "created",
            "confused",
            "last",
            "updated"
        ],
        "Entity": [
            "see",
            "who",
            "submission",
            "who",
            "last",
            "submission"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to get File F in the correct format.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "get",
            "file",
            "correct",
            "format"
        ],
        "Entity": [
            "file",
            "format"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to better understand my file-level errors.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "better",
            "understand"
        ],
        "Entity": [
            "better",
            "errors"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to provide FABS groups that function under the FREC paradigm.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "provide",
            "groups",
            "function"
        ],
        "Entity": [
            "groups",
            "function",
            "paradigm"
        ]
    },
    {
        "Text": "#G02# As a tester, I want to ensure that FABS is deriving fields properly through a robust test file plus a follow up check.",
        "Persona": [
            " tester"
        ],
        "Action": [
            "want",
            "ensure",
            "deriving",
            "fields",
            "test",
            "file",
            "follow",
            "check"
        ],
        "Entity": [
            "ensure",
            "deriving",
            "fields",
            "test",
            "file",
            "plus",
            "follow",
            "check"
        ]
    },
    {
        "Text": "#G02# As an owner, I only want zero-padded fields, so that I can justify padding.",
        "Persona": [
            " owner"
        ],
        "Action": [
            "want",
            "fields",
            "can",
            "justify"
        ],
        "Entity": [
            "fields",
            "can",
            "padding"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to submit records for individual recipients without receiving a DUNS error.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "submit",
            "records",
            "receiving"
        ],
        "Entity": [
            "records",
            "individual",
            "recipients",
            "receiving",
            "duns",
            "error"
        ]
    },
    {
        "Text": "#G02# As a user, I want more information about how many rows will be published prior to deciding whether to publish.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "rows",
            "will",
            "deciding",
            "publish"
        ],
        "Entity": [
            "more",
            "information",
            "how",
            "many",
            "rows",
            "will",
            "prior",
            "deciding"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to prevent duplicate transactions from being published and deal with the time gap between validation and the publishing decision.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "prevent",
            "duplicate",
            "deal",
            "time",
            "gap"
        ],
        "Entity": [
            "duplicate",
            "transactions",
            "being",
            "deal",
            "time",
            "gap",
            "validation",
            "publishing",
            "decision"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to submit a citywide as a PPoPZIP and pass validations.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "submit",
            "pass"
        ],
        "Entity": [
            "pass",
            "validations"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to have updated error codes that accurately reflect the logic and provide enough information, so that I can fix my submission.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "have",
            "updated",
            "codes",
            "reflect",
            "provide",
            "can",
            "fix"
        ],
        "Entity": [
            "error",
            "codes",
            "logic",
            "enough",
            "information",
            "can",
            "fix",
            "submission"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to leave off the last 4 digits of the ZIP without an error, so that I can complete my submissions.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "leave",
            "last",
            "zip",
            "can",
            "complete"
        ],
        "Entity": [
            "leave",
            "off",
            "last",
            "digits",
            "zip",
            "error",
            "can",
            "submissions"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to make sure the historical data includes all necessary columns, so that the information in the database is correct.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "make",
            "includes",
            "correct"
        ],
        "Entity": [
            "make",
            "data",
            "all",
            "necessary",
            "columns",
            "information",
            "database"
        ]
    },
    {
        "Text": "#G02# As a data user, I want to access two additional fields from the FPDS data pull.",
        "Persona": [
            " data user"
        ],
        "Action": [
            "want",
            "access",
            "fields",
            "pull"
        ],
        "Entity": [
            "access",
            "two",
            "fields",
            "data",
            "pull"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want additional helpful info in the submission dashboard, so that I can better manage submissions and IG requests.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "can",
            "better",
            "manage",
            "requests"
        ],
        "Entity": [
            "info",
            "submission",
            "dashboard",
            "can",
            "better",
            "manage",
            "submissions",
            "requests"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to download the uploaded FABS file, so that I can get the uploaded file.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "download",
            "file",
            "can",
            "get",
            "file"
        ],
        "Entity": [
            "file",
            "can",
            "file"
        ]
    },
    {
        "Text": "#G02# As a Developer I want to quickly access Broker application data, so that I can investigate issues.",
        "Persona": [
            " Developer I want to quickly access Broker application data"
        ],
        "Action": [
            "can",
            "investigate",
            "issues"
        ],
        "Entity": [
            "can",
            "issues"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to determine the best way to load historical FPDS data, so that I can load all FPDS data since 2007.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "determine",
            "best",
            "load",
            "can",
            "load"
        ],
        "Entity": [
            "best",
            "way",
            "load",
            "data",
            "can",
            "load",
            "all",
            "data"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want the language on FABS pages to be appropriate for me, so that I am not confused.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "pages",
            "appropriate",
            "confused"
        ],
        "Entity": [
            "language",
            "pages"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I do not want  DABS banner messages and vice versa, so that I have the appropriate information for my application.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "dabs",
            "messages",
            "have",
            "appropriate"
        ],
        "Entity": [
            "dabs",
            "banner",
            "messages",
            "vice",
            "information",
            "application"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to have read-only access to DABS, so that I can view DABS pages without wanting two sets of permissions.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "have",
            "access",
            "dabs",
            "can",
            "view",
            "dabs",
            "pages",
            "sets"
        ],
        "Entity": [
            "access",
            "dabs",
            "can",
            "view",
            "dabs",
            "pages",
            "two",
            "sets",
            "permissions"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to have my validations run in a reasonable amount of time.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "have",
            "run",
            "amount",
            "time"
        ],
        "Entity": [
            "validations",
            "run",
            "amount",
            "time"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to see correct status labels on the Submission Dashboard, so that I can quickly see my submission history.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "see",
            "correct",
            "labels",
            "can",
            "see"
        ],
        "Entity": [
            "see",
            "status",
            "labels",
            "submission",
            "dashboard",
            "can",
            "see",
            "submission",
            "history"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to know when the submission periods start and end, so that I know when the submission starts and ends.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "know",
            "start",
            "end",
            "know",
            "starts",
            "ends"
        ],
        "Entity": [
            "know",
            "submission",
            "periods",
            "start",
            "end",
            "know",
            "submission",
            "starts",
            "ends"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want a landing page to navigate to either FABS or DABS pages, so that I can access both sides of the site.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "page",
            "navigate",
            "dabs",
            "pages",
            "can",
            "access",
            "sides",
            "site"
        ],
        "Entity": [
            "landing",
            "page",
            "dabs",
            "pages",
            "can",
            "access",
            "sides",
            "site"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to submit my data elements surrounded by quotation marks, so that Excel won't strip off leading and trailing zeroes.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "submit",
            "marks",
            "excel",
            "strip",
            "zeroes"
        ],
        "Entity": [
            "data",
            "elements",
            "quotation",
            "marks",
            "strip",
            "off",
            "leading",
            "trailing",
            "zeroes"
        ]
    }
]