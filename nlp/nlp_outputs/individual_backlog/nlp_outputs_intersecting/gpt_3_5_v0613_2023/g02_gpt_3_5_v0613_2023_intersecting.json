[
    {
        "Text": "#G02# As a Data user, I want to have the 12-19-2017 deletions processed.",
        "Persona": [
            "Data user"
        ],
        "Action": {
            "Primary Action": [
                "have processed"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "12-19-2017 deletions"
            ],
            "Secondary Entity": []
        },
        "Benefit": "",
        "Triggers": [
            [
                "Data user",
                "have processed"
            ]
        ],
        "Targets": [
            [
                "have processed",
                "12-19-2017 deletions"
            ]
        ]
    },
    {
        "Text": "#G02# As a UI designer,  I want to move on to round 2 of the Help page edits, so that I can get approvals from leadership.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "move on",
                "get"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "round 2",
                "Help page edits",
                "approvals",
                "leadership"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can get approvals from leadership",
        "Triggers": [
            [
                "UI designer",
                "move on"
            ]
        ],
        "Targets": [
            [
                "move on",
                "round 2"
            ],
            [
                "move on",
                "Help page edits"
            ],
            [
                "get",
                "approvals"
            ],
            [
                "get",
                "leadership"
            ]
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to move on to round 2 of Homepage edits, so that I can get approvals from leadership.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "move on",
                "get"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "round 2 of Homepage edits",
                "approvals",
                "leadership"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can get approvals from leadership",
        "Triggers": [
            [
                "UI designer",
                "move on"
            ],
            [
                "UI designer",
                "get"
            ]
        ],
        "Targets": [
            [
                "move on",
                "round 2 of Homepage edits"
            ],
            [
                "move on",
                "approvals"
            ],
            [
                "move on",
                "leadership"
            ],
            [
                "get",
                "round 2 of Homepage edits"
            ],
            [
                "get",
                "approvals"
            ],
            [
                "get",
                "leadership"
            ]
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to Upload and Validate the error message to have accurate text.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "have accurate text"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "Upload",
                "Validate"
            ],
            "Secondary Entity": [
                "error message"
            ]
        },
        "Benefit": "to have accurate text",
        "Triggers": [
            [
                "Broker user",
                "Upload"
            ],
            [
                "Broker user",
                "Validate"
            ]
        ],
        "Targets": [
            [
                "Upload",
                "error message"
            ],
            [
                "Validate",
                "error message"
            ]
        ]
    },
    {
        "Text": "#G02# As a Website user, I want to access published FABS files, so that I can see the new files as they come in.",
        "Persona": [
            "Website user"
        ],
        "Action": {
            "Primary Action": [
                "access"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "published FABS files"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can see the new files as they come in",
        "Triggers": [
            [
                "Website user",
                "access"
            ]
        ],
        "Targets": [
            [
                "access",
                "published FABS files"
            ]
        ]
    },
    {
        "Text": "#G02# As an owner, I want to be sure that USAspending only send grant records to my system.",
        "Persona": [
            "owner"
        ],
        "Action": {
            "Primary Action": [
                "be sure"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "USAspending",
                "my system"
            ],
            "Secondary Entity": [
                "grant records"
            ]
        },
        "Benefit": "USAspending only send grant records to my system",
        "Triggers": [
            [
                "owner",
                "be sure"
            ]
        ],
        "Targets": [
            [
                "be sure",
                "USAspending"
            ],
            [
                "be sure",
                "my system"
            ]
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to update the Broker validation rule table to account for the rule updates in DB-2213.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "update"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "Broker validation rule table"
            ],
            "Secondary Entity": [
                "DB-2213"
            ]
        },
        "Benefit": "to account for the rule updates",
        "Triggers": [
            [
                "Developer",
                "update"
            ]
        ],
        "Targets": [
            [
                "update",
                "Broker validation rule table"
            ],
            [
                "update",
                "DB-2213"
            ]
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to add the GTAS window data to the database, so that I can ensure the site is locked down during the GTAS submission period.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "add"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "GTAS window data",
                "database",
                "site"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can ensure the site is locked down during the GTAS submission period.",
        "Triggers": [
            [
                "Developer",
                "add"
            ]
        ],
        "Targets": [
            [
                "add",
                "GTAS window data"
            ],
            [
                "add",
                "database"
            ],
            [
                "add",
                "site"
            ]
        ]
    },
    {
        "Text": "#G02# As a user, I want to access the raw agency published files from FABS via USAspending.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "access"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "raw agency published files"
            ],
            "Secondary Entity": [
                "FABS",
                "USAspending"
            ]
        },
        "Benefit": "I can access the raw agency published files from FABS via USAspending",
        "Triggers": [
            [
                "user",
                "access"
            ]
        ],
        "Targets": [
            [
                "access",
                "raw agency published files"
            ],
            [
                "access",
                "FABS"
            ],
            [
                "access",
                "USAspending"
            ]
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to redesign the Resources page, so that it matches the new Broker design styles.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "redesign"
            ],
            "Secondary Action": [
                "matches"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "Resources page"
            ],
            "Secondary Entity": [
                "Broker design styles"
            ]
        },
        "Benefit": "It matches the new Broker design styles",
        "Triggers": [
            [
                "UI designer",
                "redesign"
            ]
        ],
        "Targets": [
            [
                "redesign",
                "Resources page"
            ]
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to be able to include a large number of flexfields without performance impact.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "include"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "flexfields"
            ],
            "Secondary Entity": []
        },
        "Benefit": "be able to include a large number of flexfields without performance impact",
        "Triggers": [
            [
                "Agency user",
                "include"
            ]
        ],
        "Targets": [
            [
                "include",
                "flexfields"
            ]
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want  to help create content mockups, so that I can submit my data efficiently.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "help create",
                "submit"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "content mockups",
                "data"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can submit my data efficiently",
        "Triggers": [
            [
                "Broker user",
                "help create"
            ],
            [
                "Broker user",
                "submit"
            ]
        ],
        "Targets": [
            [
                "help create",
                "content mockups"
            ],
            [
                "submit",
                "data"
            ]
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to track the issues that come up in Tech Thursday, so that I know what to test and what want s to be fixed.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "track",
                "test",
                "fix"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "Tech Thursday"
            ],
            "Secondary Entity": []
        },
        "Benefit": "know what to test and what wants to be fixed",
        "Triggers": [
            [
                "UI designer",
                "track"
            ],
            [
                "UI designer",
                "test"
            ],
            [
                "UI designer",
                "fix"
            ]
        ],
        "Targets": [
            [
                "track",
                "Tech Thursday"
            ],
            [
                "test",
                "Tech Thursday"
            ],
            [
                "fix",
                "Tech Thursday"
            ]
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to create a user testing summary from the UI SME, so that I can know what UI improvements we will follow through on.",
        "Persona": [
            "Owner"
        ],
        "Action": {
            "Primary Action": [
                "create"
            ],
            "Secondary Action": [
                "know",
                "follow through on"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "user testing summary"
            ],
            "Secondary Entity": [
                "UI SME",
                "UI improvements"
            ]
        },
        "Benefit": "I can know what UI improvements we will follow through on",
        "Triggers": [
            [
                "Owner",
                "create"
            ],
            [
                "Owner",
                "know"
            ],
            [
                "Owner",
                "follow through on"
            ]
        ],
        "Targets": [
            [
                "create",
                "user testing summary"
            ],
            [
                "know",
                "UI improvements"
            ],
            [
                "follow through on",
                "UI improvements"
            ]
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to begin user testing, so that I can validate stakeholder UI improvement requests.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "begin"
            ],
            "Secondary Action": [
                "validate"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "user testing"
            ],
            "Secondary Entity": [
                "stakeholder UI improvement requests"
            ]
        },
        "Benefit": "I can validate stakeholder UI improvement requests",
        "Triggers": [
            [
                "UI designer",
                "begin"
            ]
        ],
        "Targets": [
            [
                "begin",
                "user testing"
            ]
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to schedule user testing, so that I can give the testers advanced notice to ensure buy-in.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "schedule"
            ],
            "Secondary Action": [
                "give advanced notice",
                "ensure buy-in"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "user testing"
            ],
            "Secondary Entity": [
                "stakeholder UI improvement requests"
            ]
        },
        "Benefit": "I can give the testers advanced notice to ensure buy-in",
        "Triggers": [
            [
                "UI designer",
                "schedule"
            ]
        ],
        "Targets": [
            [
                "schedule",
                "user testing"
            ]
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to design a schedule from the UI SME, so that I know the potential timeline of the UI improvements wanted.",
        "Persona": [
            "Owner"
        ],
        "Action": {
            "Primary Action": [
                "design"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "UI SME"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I know the potential timeline of the UI improvements wanted",
        "Triggers": [
            [
                "Owner",
                "design"
            ]
        ],
        "Targets": [
            [
                "design",
                "UI SME"
            ]
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to design an audit from the UI SME, so that I know the potential scope of the UI improvements want ed.",
        "Persona": [
            "Owner"
        ],
        "Action": {
            "Primary Action": [
                "design"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "audit"
            ],
            "Secondary Entity": [
                "UI SME",
                "UI improvements"
            ]
        },
        "Benefit": "know the potential scope of the UI improvements",
        "Triggers": [
            [
                "Owner",
                "design"
            ]
        ],
        "Targets": [
            [
                "design",
                "audit"
            ]
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to prevent users from double publishing FABS submissions after refreshing, so that there are no duplicates.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "prevent",
                "double publishing"
            ],
            "Secondary Action": [
                "refreshing"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "users",
                "FABS submissions"
            ],
            "Secondary Entity": []
        },
        "Benefit": "there are no duplicates",
        "Triggers": [
            [
                "Developer",
                "prevent"
            ]
        ],
        "Targets": [
            [
                "prevent",
                "users"
            ],
            [
                "prevent",
                "FABS submissions"
            ],
            [
                "prevent",
                "double publishing"
            ],
            [
                "prevent",
                "refreshing"
            ],
            [
                "prevent",
                "duplicates"
            ]
        ]
    },
    {
        "Text": "#G02# As an data user, I want to receive updates to FABS records.",
        "Persona": [
            "data user"
        ],
        "Action": {
            "Primary Action": [
                "receive updates"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "FABS records"
            ],
            "Secondary Entity": []
        },
        "Benefit": "stay informed about FABS records",
        "Triggers": [
            [
                "data user",
                "receive updates"
            ]
        ],
        "Targets": [
            [
                "receive updates",
                "FABS records"
            ]
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to report to the Agencies about user testing, so that they are aware of their contributions to making Broker a better UX.",
        "Persona": [
            "UI designer",
            "Agencies"
        ],
        "Action": {
            "Primary Action": [
                "report"
            ],
            "Secondary Action": [
                "aware"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "user testing",
                "Broker"
            ],
            "Secondary Entity": []
        },
        "Benefit": "they are aware of their contributions to making Broker a better UX",
        "Triggers": [
            [
                "UI designer",
                "report"
            ],
            [
                "Agencies",
                "aware"
            ]
        ],
        "Targets": [
            [
                "report",
                "user testing"
            ],
            [
                "report",
                "Broker"
            ]
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to update the FABS sample file to remove FundingAgencyCode after FABS is updated to no longer require the header.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "update"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "FABS sample file"
            ],
            "Secondary Entity": [
                "FundingAgencyCode"
            ]
        },
        "Benefit": "remove FundingAgencyCode after FABS is updated to no longer require the header",
        "Triggers": [
            [
                "Developer",
                "update"
            ]
        ],
        "Targets": [
            [
                "update",
                "FABS sample file"
            ]
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to ensure that deleted FSRS records are not included in submissions.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "ensure",
                "deleted",
                "included",
                "submissions"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "FSRS records"
            ],
            "Secondary Entity": []
        },
        "Benefit": "deleted FSRS records are not included in submissions",
        "Triggers": [
            [
                "agency user",
                "ensure"
            ]
        ],
        "Targets": [
            [
                "ensure",
                "FSRS records"
            ],
            [
                "deleted",
                "FSRS records"
            ],
            [
                "included",
                "submissions"
            ]
        ]
    },
    {
        "Text": "#G02# As a website user, I want to see updated financial assistance data daily.",
        "Persona": [
            "website user"
        ],
        "Action": {
            "Primary Action": [
                "see"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "financial assistance data"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can stay informed about the latest financial assistance data",
        "Triggers": [
            [
                "website user",
                "see"
            ]
        ],
        "Targets": [
            [
                "see",
                "financial assistance data"
            ]
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to ensure that attempts to correct or delete non-existent records don't create new published data.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "ensure",
                "correct",
                "delete"
            ],
            "Secondary Action": [
                "create"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "non-existent records"
            ],
            "Secondary Entity": []
        },
        "Benefit": "attempts to correct or delete non-existent records don't create new published data",
        "Triggers": [
            [
                "Developer",
                "ensure"
            ],
            [
                "Developer",
                "correct"
            ],
            [
                "Developer",
                "delete"
            ],
            [
                "Developer",
                "create"
            ]
        ],
        "Targets": [
            [
                "ensure",
                "non-existent records"
            ],
            [
                "correct",
                "non-existent records"
            ],
            [
                "delete",
                "non-existent records"
            ],
            [
                "create",
                "non-existent records"
            ]
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to reset the environment to only take Staging MAX permissions, so that I can ensure that the FABS testers no longer have access.",
        "Persona": [
            "Owner"
        ],
        "Action": {
            "Primary Action": [
                "reset"
            ],
            "Secondary Action": [
                "take"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "environment"
            ],
            "Secondary Entity": [
                "Staging MAX permissions",
                "FABS testers"
            ]
        },
        "Benefit": "I can ensure that the FABS testers no longer have access",
        "Triggers": [
            [
                "Owner",
                "reset"
            ]
        ],
        "Targets": [
            [
                "reset",
                "environment"
            ],
            [
                "reset",
                "Staging MAX permissions"
            ],
            [
                "reset",
                "FABS testers"
            ]
        ]
    },
    {
        "Text": "#G02# As a user, I want to have accurate and complete data related to PPoPCode and PPoPCongressionalDistrict.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "PPoPCode",
                "PPoPCongressionalDistrict"
            ],
            "Secondary Entity": []
        },
        "Benefit": "have accurate and complete data related to PPoPCode and PPoPCongressionalDistrict",
        "Triggers": [
            [
                "user",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "PPoPCode"
            ],
            [
                "have",
                "PPoPCongressionalDistrict"
            ]
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to move on to round 2 of DABS or FABS landing page edits, so that I can get approvals from leadership.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "move on",
                "get"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "round 2 of DABS or FABS landing page edits",
                "approvals",
                "leadership"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can get approvals from leadership",
        "Triggers": [
            [
                "UI designer",
                "move on"
            ],
            [
                "UI designer",
                "get"
            ]
        ],
        "Targets": [
            [
                "move on",
                "round 2 of DABS or FABS landing page edits"
            ],
            [
                "move on",
                "approvals"
            ],
            [
                "move on",
                "leadership"
            ],
            [
                "get",
                "round 2 of DABS or FABS landing page edits"
            ],
            [
                "get",
                "approvals"
            ],
            [
                "get",
                "leadership"
            ]
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to clarify to users what exactly is triggering the CFDA error code in each case.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "clarify"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "users",
                "CFDA error code"
            ],
            "Secondary Entity": []
        },
        "Benefit": "users understand what triggers the CFDA error code in each case",
        "Triggers": [
            [
                "Developer",
                "clarify"
            ]
        ],
        "Targets": [
            [
                "clarify",
                "users"
            ],
            [
                "clarify",
                "CFDA error code"
            ]
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to be confident that the data coming from SAM is complete.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "be confident"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "SAM"
            ],
            "Secondary Entity": []
        },
        "Benefit": "data coming from SAM is complete",
        "Triggers": [
            [
                "agency user",
                "be confident"
            ]
        ],
        "Targets": [
            [
                "be confident",
                "SAM"
            ]
        ]
    },
    {
        "Text": "#G02# As a broker team member, I want to make some updates to the SQL codes for clarity.",
        "Persona": [
            "broker team member"
        ],
        "Action": {
            "Primary Action": [
                "make updates"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "SQL codes"
            ],
            "Secondary Entity": []
        },
        "Benefit": "for clarity",
        "Triggers": [
            [
                "broker team member",
                "make updates"
            ]
        ],
        "Targets": [
            [
                "make updates",
                "SQL codes"
            ]
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to have all derived data elements derived properly.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "derived data elements"
            ],
            "Secondary Entity": []
        },
        "Benefit": "all derived data elements derived properly",
        "Triggers": [
            [
                "agency user",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "derived data elements"
            ]
        ]
    },
    {
        "Text": "#G02# As a broker team member, I want to add the 00***** and 00FORGN PPoPCode cases to the derivation logic.",
        "Persona": [
            "broker team member"
        ],
        "Action": {
            "Primary Action": [
                "add"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "00*****"
            ],
            "Secondary Entity": [
                "00FORGN PPoPCode"
            ]
        },
        "Benefit": "to the derivation logic",
        "Triggers": [
            [
                "broker team member",
                "add"
            ]
        ],
        "Targets": [
            [
                "add",
                "00*****"
            ],
            [
                "add",
                "00FORGN PPoPCode"
            ]
        ]
    },
    {
        "Text": "#G02# As a data user, I want to see the office names derived from office codes, so that I can have appropriate context for understanding them.",
        "Persona": [
            "data user"
        ],
        "Action": {
            "Primary Action": [
                "see"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "office names"
            ],
            "Secondary Entity": [
                "office codes"
            ]
        },
        "Benefit": "have appropriate context for understanding them",
        "Triggers": [
            [
                "data user",
                "see"
            ]
        ],
        "Targets": [
            [
                "see",
                "office names"
            ]
        ]
    },
    {
        "Text": "#G02# As a broker team member, I want to ensure the Broker resources, validations, and P&P pages are updated appropriately for the launch of FABS and DAIMS v1.1.",
        "Persona": [
            "broker team member"
        ],
        "Action": {
            "Primary Action": [
                "ensure"
            ],
            "Secondary Action": [
                "updated"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "Broker resources"
            ],
            "Secondary Entity": [
                "validations",
                "P&P pages",
                "FABS",
                "DAIMS v1.1"
            ]
        },
        "Benefit": "for the launch of FABS and DAIMS v1.1",
        "Triggers": [
            [
                "broker team member",
                "ensure"
            ]
        ],
        "Targets": [
            [
                "ensure",
                "Broker resources"
            ],
            [
                "ensure",
                "validations"
            ],
            [
                "ensure",
                "P&P pages"
            ],
            [
                "ensure",
                "FABS"
            ],
            [
                "ensure",
                "DAIMS v1.1"
            ]
        ]
    },
    {
        "Text": "#G02# As a broker team member, I want to derive FundingAgencyCode, so that the data quality and completeness improves.",
        "Persona": [
            "broker team member"
        ],
        "Action": {
            "Primary Action": [
                "derive"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "FundingAgencyCode"
            ],
            "Secondary Entity": []
        },
        "Benefit": "data quality and completeness improves",
        "Triggers": [
            [
                "broker team member",
                "derive"
            ]
        ],
        "Targets": [
            [
                "derive",
                "FundingAgencyCode"
            ]
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to use the schema v1.1 headers in my FABS file.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "use"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "schema v1.1 headers"
            ],
            "Secondary Entity": [
                "FABS file"
            ]
        },
        "Benefit": "to ensure compatibility and compliance with the latest schema version",
        "Triggers": [
            [
                "agency user",
                "use"
            ]
        ],
        "Targets": [
            [
                "use",
                "schema v1.1 headers"
            ],
            [
                "use",
                "FABS file"
            ]
        ]
    },
    {
        "Text": "#G02# As a agency user, I want to map the FederalActionObligation properly to the Atom Feed.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "map"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "FederalActionObligation"
            ],
            "Secondary Entity": [
                "Atom Feed"
            ]
        },
        "Benefit": "properly",
        "Triggers": [
            [
                "agency user",
                "map"
            ]
        ],
        "Targets": [
            [
                "map",
                "FederalActionObligation"
            ],
            [
                "map",
                "Atom Feed"
            ]
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to have PPoPZIP+4 work the same as the Legal Entity ZIP validations.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "work the same as"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "PPoPZIP+4"
            ],
            "Secondary Entity": [
                "Legal Entity ZIP validations"
            ]
        },
        "Benefit": "have PPoPZIP+4 work the same as the Legal Entity ZIP validations",
        "Triggers": [
            [
                "Broker user",
                "work the same as"
            ]
        ],
        "Targets": [
            [
                "work the same as",
                "PPoPZIP+4"
            ],
            [
                "work the same as",
                "Legal Entity ZIP validations"
            ]
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to move on to round 3 of the Help page edits, so that I can get approvals from leadership.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "move on",
                "get"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "round 3",
                "Help page edits",
                "approvals",
                "leadership"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can get approvals from leadership",
        "Triggers": [
            [
                "UI designer",
                "move on"
            ]
        ],
        "Targets": [
            [
                "move on",
                "round 3"
            ],
            [
                "move on",
                "Help page edits"
            ],
            [
                "get",
                "approvals"
            ],
            [
                "get",
                "leadership"
            ]
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to link the SAMPLE FILE on the \"What you want  to submit\" dialog to point to the correct file, so that I have an accurate reference for my agency submissions.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "link"
            ],
            "Secondary Action": [
                "point"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "SAMPLE FILE"
            ],
            "Secondary Entity": [
                "What you want to submit"
            ]
        },
        "Benefit": "have an accurate reference for my agency submissions",
        "Triggers": [
            [
                "FABS user",
                "link"
            ]
        ],
        "Targets": [
            [
                "link",
                "SAMPLE FILE"
            ],
            [
                "link",
                "What you want to submit"
            ]
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to determine how agencies will generate and validate D Files from FABS and FPDS data.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "determine",
                "generate",
                "validate"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "agencies",
                "D Files",
                "FABS",
                "FPDS data"
            ],
            "Secondary Entity": []
        },
        "Benefit": "to determine how agencies will generate and validate D Files from FABS and FPDS data",
        "Triggers": [
            [
                "Developer",
                "determine"
            ],
            [
                "Developer",
                "generate"
            ],
            [
                "Developer",
                "validate"
            ]
        ],
        "Targets": [
            [
                "determine",
                "agencies"
            ],
            [
                "generate",
                "D Files"
            ],
            [
                "generate",
                "FABS"
            ],
            [
                "generate",
                "FPDS data"
            ],
            [
                "validate",
                "agencies"
            ],
            [
                "validate",
                "D Files"
            ],
            [
                "validate",
                "FABS"
            ],
            [
                "validate",
                "FPDS data"
            ]
        ]
    },
    {
        "Text": "#G02# As a user, I want to generate and validate D Files from FABS and FPDS data.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "generate",
                "validate"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "D Files",
                "FABS data",
                "FPDS data"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can generate and validate D Files from FABS and FPDS data",
        "Triggers": [
            [
                "user",
                "generate"
            ],
            [
                "user",
                "validate"
            ]
        ],
        "Targets": [
            [
                "generate",
                "D Files"
            ],
            [
                "generate",
                "FABS data"
            ],
            [
                "generate",
                "FPDS data"
            ],
            [
                "validate",
                "D Files"
            ],
            [
                "validate",
                "FABS data"
            ],
            [
                "validate",
                "FPDS data"
            ]
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to receive a more helpful file-level error when I upload a file with the wrong extension.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "receive",
                "upload"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "file"
            ],
            "Secondary Entity": []
        },
        "Benefit": "receive a more helpful file-level error when I upload a file with the wrong extension",
        "Triggers": [
            [
                "Agency user",
                "receive"
            ],
            [
                "Agency user",
                "upload"
            ]
        ],
        "Targets": [
            [
                "receive",
                "file"
            ],
            [
                "upload",
                "file"
            ]
        ]
    },
    {
        "Text": "#G02# As a tester, I want to have access to test features in environments other than Staging, so that I can test any nonProd feature in any environment.",
        "Persona": [
            "tester"
        ],
        "Action": {
            "Primary Action": [
                "have access",
                "test"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "test features",
                "environments"
            ],
            "Secondary Entity": [
                "Staging",
                "nonProd feature"
            ]
        },
        "Benefit": "I can test any nonProd feature in any environment",
        "Triggers": [
            [
                "tester",
                "have access"
            ]
        ],
        "Targets": [
            [
                "have access",
                "test features"
            ],
            [
                "have access",
                "environments"
            ],
            [
                "test",
                "nonProd feature"
            ],
            [
                "test",
                "environments"
            ]
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to submission errors to accurately represent FABS errors, so that I know why my submission didn't work.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "represent"
            ],
            "Secondary Action": [
                "know"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "submission errors"
            ],
            "Secondary Entity": [
                "FABS errors"
            ]
        },
        "Benefit": "I know why my submission didn't work",
        "Triggers": [
            [
                "FABS user",
                "represent"
            ],
            [
                "FABS user",
                "know"
            ]
        ],
        "Targets": [
            [
                "represent",
                "submission errors"
            ],
            [
                "know",
                "FABS errors"
            ]
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to be able to log better, so that I can troubleshoot issues with particular submissions and functions.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "troubleshoot"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "log"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can troubleshoot issues with particular submissions and functions",
        "Triggers": [
            [
                "Developer",
                "troubleshoot"
            ]
        ],
        "Targets": [
            [
                "troubleshoot",
                "log"
            ]
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to accurately see who created a submission, so that I'm not confused about who last updated a submission.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "see",
                "created",
                "last updated"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "submission"
            ],
            "Secondary Entity": []
        },
        "Benefit": "not confused about who last updated a submission",
        "Triggers": [
            [
                "Agency user",
                "see"
            ],
            [
                "Agency user",
                "created"
            ],
            [
                "Agency user",
                "last updated"
            ]
        ],
        "Targets": [
            [
                "see",
                "submission"
            ],
            [
                "created",
                "submission"
            ],
            [
                "last updated",
                "submission"
            ]
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to get File F in the correct format.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "get"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "File F"
            ],
            "Secondary Entity": []
        },
        "Benefit": "in the correct format",
        "Triggers": [
            [
                "agency user",
                "get"
            ]
        ],
        "Targets": [
            [
                "get",
                "File F"
            ]
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to better understand my file-level errors.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "understand"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "file-level errors"
            ],
            "Secondary Entity": []
        },
        "Benefit": "better understand my file-level errors",
        "Triggers": [
            [
                "Agency user",
                "understand"
            ]
        ],
        "Targets": [
            [
                "understand",
                "file-level errors"
            ]
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to provide FABS groups that function under the FREC paradigm.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "provide"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "FABS groups"
            ],
            "Secondary Entity": [
                "FREC paradigm"
            ]
        },
        "Benefit": "function under the FREC paradigm",
        "Triggers": [
            [
                "Developer",
                "provide"
            ]
        ],
        "Targets": [
            [
                "provide",
                "FABS groups"
            ],
            [
                "provide",
                "FREC paradigm"
            ]
        ]
    },
    {
        "Text": "#G02# As a tester, I want to ensure that FABS is deriving fields properly through a robust test file plus a follow up check.",
        "Persona": [
            "tester"
        ],
        "Action": {
            "Primary Action": [
                "ensure",
                "deriving"
            ],
            "Secondary Action": [
                "follow up check"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FABS"
            ],
            "Secondary Entity": [
                "test file"
            ]
        },
        "Benefit": "FABS is deriving fields properly",
        "Triggers": [
            [
                "tester",
                "ensure"
            ],
            [
                "tester",
                "deriving"
            ],
            [
                "tester",
                "follow up check"
            ]
        ],
        "Targets": [
            [
                "ensure",
                "FABS"
            ],
            [
                "deriving",
                "FABS"
            ],
            [
                "follow up check",
                "test file"
            ]
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to submit records for individual recipients without receiving a DUNS error.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "submit"
            ],
            "Secondary Action": [
                "without receiving a DUNS error"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "records"
            ],
            "Secondary Entity": [
                "individual recipients"
            ]
        },
        "Benefit": "without receiving a DUNS error",
        "Triggers": [
            [
                "Broker user",
                "submit"
            ]
        ],
        "Targets": [
            [
                "submit",
                "records"
            ],
            [
                "submit",
                "individual recipients"
            ]
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to add the updates on a FABS submission to be modified when the publishStatus changes, so that I know when the status of the submission has changed.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "add",
                "modify"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "FABS submission"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I know when the status of the submission has changed",
        "Triggers": [
            [
                "Developer",
                "add"
            ],
            [
                "Developer",
                "modify"
            ]
        ],
        "Targets": [
            [
                "add",
                "FABS submission"
            ],
            [
                "modify",
                "FABS submission"
            ]
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to prevent duplicate transactions from being published and deal with the time gap between validation and the publishing decision.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "prevent",
                "publish"
            ],
            "Secondary Action": [
                "deal with"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "duplicate transactions"
            ],
            "Secondary Entity": []
        },
        "Benefit": "prevent duplicate transactions from being published and deal with the time gap between validation and the publishing decision",
        "Triggers": [
            [
                "Developer",
                "prevent"
            ],
            [
                "Developer",
                "publish"
            ],
            [
                "Developer",
                "deal with"
            ]
        ],
        "Targets": [
            [
                "prevent",
                "duplicate transactions"
            ],
            [
                "publish",
                "duplicate transactions"
            ],
            [
                "deal with",
                "time gap between validation and the publishing decision"
            ]
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to submit a citywide as a PPoPZIP and pass validations.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "submit"
            ],
            "Secondary Action": [
                "pass validations"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "citywide"
            ],
            "Secondary Entity": [
                "PPoPZIP"
            ]
        },
        "Benefit": "I can submit a citywide as a PPoPZIP and pass validations",
        "Triggers": [
            [
                "FABS user",
                "submit"
            ]
        ],
        "Targets": [
            [
                "submit",
                "citywide"
            ],
            [
                "submit",
                "PPoPZIP"
            ],
            [
                "pass validations",
                "citywide"
            ],
            [
                "pass validations",
                "PPoPZIP"
            ]
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to have updated error codes that accurately reflect the logic and provide enough information, so that I can fix my submission.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "have",
                "reflect",
                "provide",
                "fix"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "error codes",
                "submission"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can fix my submission",
        "Triggers": [
            [
                "Broker user",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "error codes"
            ],
            [
                "have",
                "submission"
            ],
            [
                "reflect",
                "error codes"
            ],
            [
                "provide",
                "error codes"
            ],
            [
                "fix",
                "submission"
            ]
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to leave off the last 4 digits of the ZIP without an error, so that I can complete my submissions.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "leave off",
                "complete"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "ZIP"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can complete my submissions",
        "Triggers": [
            [
                "agency user",
                "leave off"
            ],
            [
                "agency user",
                "complete"
            ]
        ],
        "Targets": [
            [
                "leave off",
                "ZIP"
            ],
            [
                "complete",
                "submissions"
            ]
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to make sure the historical data includes all necessary columns, so that the information in the database is correct.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "make sure"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "historical data",
                "database"
            ],
            "Secondary Entity": []
        },
        "Benefit": "the information in the database is correct",
        "Triggers": [
            [
                "FABS user",
                "make sure"
            ]
        ],
        "Targets": [
            [
                "make sure",
                "historical data"
            ],
            [
                "make sure",
                "database"
            ]
        ]
    },
    {
        "Text": "#G02# As a data user, I want to access two additional fields from the FPDS data pull.",
        "Persona": [
            "data user"
        ],
        "Action": {
            "Primary Action": [
                "access"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "FPDS data pull"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can access two additional fields from the FPDS data pull",
        "Triggers": [
            [
                "data user",
                "access"
            ]
        ],
        "Targets": [
            [
                "access",
                "FPDS data pull"
            ]
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to download the uploaded FABS file, so that I can get the uploaded file.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "download"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "uploaded FABS file"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can get the uploaded file",
        "Triggers": [
            [
                "FABS user",
                "download"
            ]
        ],
        "Targets": [
            [
                "download",
                "uploaded FABS file"
            ]
        ]
    },
    {
        "Text": "#G02# As a Developer I want to quickly access Broker application data, so that I can investigate issues.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "quickly access"
            ],
            "Secondary Action": [
                "investigate"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "Broker application data"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can investigate issues",
        "Triggers": [
            [
                "Developer",
                "quickly access"
            ],
            [
                "Developer",
                "investigate"
            ]
        ],
        "Targets": [
            [
                "quickly access",
                "Broker application data"
            ],
            [
                "investigate",
                "Broker application data"
            ]
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to determine the best way to load historical FPDS data, so that I can load all FPDS data since 2007.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "determine"
            ],
            "Secondary Action": [
                "load"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "historical FPDS data"
            ],
            "Secondary Entity": [
                "FPDS data"
            ]
        },
        "Benefit": "load all FPDS data since 2007",
        "Triggers": [
            [
                "Developer",
                "determine"
            ],
            [
                "Developer",
                "load"
            ]
        ],
        "Targets": [
            [
                "determine",
                "historical FPDS data"
            ],
            [
                "load",
                "FPDS data"
            ]
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to have read-only access to DABS, so that I can view DABS pages without wanting two sets of permissions.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "have read-only access"
            ],
            "Secondary Action": [
                "view"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "DABS"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can view DABS pages without wanting two sets of permissions.",
        "Triggers": [
            [
                "FABS user",
                "have read-only access"
            ]
        ],
        "Targets": [
            [
                "have read-only access",
                "DABS"
            ]
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to have my validations run in a reasonable amount of time.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "have",
                "run"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "validations"
            ],
            "Secondary Entity": []
        },
        "Benefit": "in a reasonable amount of time",
        "Triggers": [
            [
                "FABS user",
                "have"
            ],
            [
                "FABS user",
                "run"
            ]
        ],
        "Targets": [
            [
                "have",
                "validations"
            ],
            [
                "run",
                "validations"
            ]
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to see correct status labels on the Submission Dashboard, so that I can quickly see my submission history.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "see"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "Submission Dashboard",
                "status labels",
                "submission history"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I can quickly see my submission history",
        "Triggers": [
            [
                "FABS user",
                "see"
            ]
        ],
        "Targets": [
            [
                "see",
                "Submission Dashboard"
            ],
            [
                "see",
                "status labels"
            ],
            [
                "see",
                "submission history"
            ]
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to know when the submission periods start and end, so that I know when the submission starts and ends.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "know"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "submission periods"
            ],
            "Secondary Entity": []
        },
        "Benefit": "I know when the submission starts and ends",
        "Triggers": [
            [
                "agency user",
                "know"
            ]
        ],
        "Targets": [
            [
                "know",
                "submission periods"
            ]
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to submit my data elements surrounded by quotation marks, so that Excel won't strip off leading and trailing zeroes.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "submit"
            ],
            "Secondary Action": []
        },
        "Entity": {
            "Primary Entity": [
                "data elements"
            ],
            "Secondary Entity": [
                "Excel"
            ]
        },
        "Benefit": "Excel won't strip off leading and trailing zeroes",
        "Triggers": [
            [
                "agency user",
                "submit"
            ]
        ],
        "Targets": [
            [
                "submit",
                "data elements"
            ]
        ]
    }
]