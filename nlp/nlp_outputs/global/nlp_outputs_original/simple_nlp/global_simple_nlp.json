[
    {
        "Text": "#G02# As a Data user, I want to have the 12-19-2017 deletions processed.",
        "Persona": [
            " Data user"
        ],
        "Action": [
            "want",
            "have"
        ],
        "Entity": [
            "deletions"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to redesign the Resources page, so that it matches the new Broker design styles.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "redesign",
            "page",
            "matches",
            "broker",
            "design",
            "styles"
        ],
        "Entity": [
            "resources",
            "page",
            "matches",
            "broker",
            "design",
            "styles"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to report to the Agencies about user testing, so that they are aware of their contributions to making Broker a better UX.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "report",
            "are",
            "broker",
            "better"
        ],
        "Entity": [
            "report",
            "agencies",
            "user",
            "testing",
            "contributions",
            "making",
            "broker",
            "better"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to move on to round 2 of DABS or FABS landing page edits, so that I can get approvals from leadership.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "move",
            "round",
            "dabs",
            "page",
            "edits",
            "can",
            "get"
        ],
        "Entity": [
            "move",
            "round",
            "dabs",
            "landing",
            "page",
            "edits",
            "can",
            "approvals",
            "leadership"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to move on to round 2 of Homepage edits, so that I can get approvals from leadership.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "move",
            "round",
            "edits",
            "can",
            "get"
        ],
        "Entity": [
            "move",
            "round",
            "edits",
            "can",
            "approvals",
            "leadership"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to move on to round 3 of the Help page edits, so that I can get approvals from leadership.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "move",
            "round",
            "help",
            "page",
            "edits",
            "can",
            "get"
        ],
        "Entity": [
            "move",
            "round",
            "help",
            "page",
            "edits",
            "can",
            "approvals",
            "leadership"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to be able to log better, so that I can troubleshoot issues with particular submissions and functions.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "log",
            "better",
            "can",
            "troubleshoot",
            "issues",
            "functions"
        ],
        "Entity": [
            "able",
            "log",
            "better",
            "can",
            "issues",
            "particular",
            "submissions",
            "functions"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to add the updates on a FABS submission to be modified when the publishStatus changes, so that I know when the status of the submission has changed.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "add",
            "updates",
            "modified",
            "changes",
            "know",
            "has",
            "changed"
        ],
        "Entity": [
            "updates",
            "submission",
            "changes",
            "know",
            "status",
            "submission"
        ]
    },
    {
        "Text": "#G02# As a DevOps engineer, I want New Relic to provide useful data across all applications.",
        "Persona": [
            " DevOps engineer"
        ],
        "Action": [
            "want",
            "provide"
        ],
        "Entity": [
            "relic",
            "useful",
            "data",
            "all",
            "applications"
        ]
    },
    {
        "Text": "#G02# As a UI designer,  I want to move on to round 2 of the Help page edits, so that I can get approvals from leadership.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "move",
            "round",
            "help",
            "page",
            "edits",
            "can",
            "get"
        ],
        "Entity": [
            "move",
            "round",
            "help",
            "page",
            "edits",
            "can",
            "approvals",
            "leadership"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to Upload and Validate the error message to have accurate text.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "upload",
            "validate",
            "message",
            "have"
        ],
        "Entity": [
            "error",
            "message",
            "text"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want the D1 file generation to be synced with the FPDS data load, so that I don't have to regenerate a file if no data has been updated.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "file",
            "load",
            "don't",
            "have",
            "regenerate",
            "file",
            "has",
            "been",
            "updated"
        ],
        "Entity": [
            "file",
            "generation",
            "data",
            "load",
            "don't",
            "file",
            "data"
        ]
    },
    {
        "Text": "#G02# As a Website user, I want to access published FABS files, so that I can see the new files as they come in.",
        "Persona": [
            " Website user"
        ],
        "Action": [
            "want",
            "access",
            "files",
            "can",
            "see",
            "files",
            "come"
        ],
        "Entity": [
            "access",
            "files",
            "can",
            "see",
            "files"
        ]
    },
    {
        "Text": "#G02# As an owner, I want to be sure that USAspending only send grant records to my system.",
        "Persona": [
            " owner"
        ],
        "Action": [
            "want",
            "send",
            "grant",
            "records"
        ],
        "Entity": [
            "send",
            "grant",
            "records",
            "system"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to update the Broker validation rule table to account for the rule updates in DB-2213.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "update",
            "broker",
            "rule",
            "table",
            "account",
            "rule",
            "updates"
        ],
        "Entity": [
            "update",
            "broker",
            "validation",
            "rule",
            "table",
            "account",
            "rule",
            "updates"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to add the GTAS window data to the database, so that I can ensure the site is locked down during the GTAS submission period.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "add",
            "window",
            "can",
            "ensure",
            "site",
            "down"
        ],
        "Entity": [
            "window",
            "data",
            "database",
            "can",
            "ensure",
            "site",
            "down",
            "submission",
            "period"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want D Files generation requests to be managed and cached, so that duplicate requests do not cause performance issues.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "files",
            "requests",
            "managed",
            "cached",
            "duplicate",
            "requests",
            "cause",
            "issues"
        ],
        "Entity": [
            "files",
            "generation",
            "requests",
            "duplicate",
            "requests",
            "cause",
            "performance",
            "issues"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want  to help create content mockups, so that I can submit my data efficiently.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "help",
            "create",
            "content",
            "can",
            "submit"
        ],
        "Entity": [
            "help",
            "content",
            "can",
            "data"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to track the issues that come up in Tech Thursday, so that I know what to test and what want s to be fixed.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "track",
            "issues",
            "come",
            "know",
            "test",
            "want"
        ],
        "Entity": [
            "track",
            "issues",
            "tech",
            "know",
            "test"
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to create a user testing summary from the UI SME, so that I can know what UI improvements we will follow through on.",
        "Persona": [
            " Owner"
        ],
        "Action": [
            "want",
            "create",
            "can",
            "know",
            "will",
            "follow"
        ],
        "Entity": [
            "user",
            "testing",
            "summary",
            "can",
            "know",
            "improvements",
            "will",
            "follow"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to begin user testing, so that I can validate stakeholder UI improvement requests.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "begin",
            "can",
            "validate",
            "requests"
        ],
        "Entity": [
            "user",
            "testing",
            "can",
            "stakeholder",
            "improvement",
            "requests"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to schedule user testing, so that I can give the testers advanced notice to ensure buy-in.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "schedule",
            "can",
            "give",
            "notice",
            "ensure",
            "buy-in"
        ],
        "Entity": [
            "schedule",
            "user",
            "testing",
            "can",
            "give",
            "testers",
            "notice",
            "ensure"
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to design a schedule from the UI SME, so that I know the potential timeline of the UI improvements wanted.",
        "Persona": [
            " Owner"
        ],
        "Action": [
            "want",
            "design",
            "schedule",
            "know"
        ],
        "Entity": [
            "design",
            "schedule",
            "know",
            "potential",
            "improvements"
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to design an audit from the UI SME, so that I know the potential scope of the UI improvements want ed.",
        "Persona": [
            " Owner"
        ],
        "Action": [
            "want",
            "design",
            "audit",
            "know",
            "want"
        ],
        "Entity": [
            "design",
            "audit",
            "know",
            "potential",
            "scope",
            "improvements"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to prevent users from double publishing FABS submissions after refreshing, so that there are no duplicates.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "prevent",
            "double",
            "are",
            "duplicates"
        ],
        "Entity": [
            "users",
            "double",
            "publishing",
            "submissions",
            "there",
            "duplicates"
        ]
    },
    {
        "Text": "#G02# As an data user, I want to receive updates to FABS records.",
        "Persona": [
            " data user"
        ],
        "Action": [
            "want",
            "receive",
            "updates",
            "records"
        ],
        "Entity": [
            "updates",
            "records"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to be able to include a large number of flexfields without performance impact.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "include",
            "number",
            "impact"
        ],
        "Entity": [
            "able",
            "large",
            "number",
            "performance",
            "impact"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to update the FABS sample file to remove FundingAgencyCode after FABS is updated to no longer require the header.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "update",
            "sample",
            "file",
            "remove",
            "updated",
            "require"
        ],
        "Entity": [
            "update",
            "sample",
            "file",
            "remove",
            "header"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to ensure that deleted FSRS records are not included in submissions.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "ensure",
            "deleted",
            "records",
            "are"
        ],
        "Entity": [
            "ensure",
            "records",
            "submissions"
        ]
    },
    {
        "Text": "#G02# As a website user, I want to see updated financial assistance data daily.",
        "Persona": [
            " website user"
        ],
        "Action": [
            "want",
            "see",
            "updated"
        ],
        "Entity": [
            "see",
            "assistance",
            "data",
            "daily"
        ]
    },
    {
        "Text": "#G02# As a user, I want the publish button in FABS to deactivate after I click it while the derivations are happening, so that I cannot click it multiple times for the same submission.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "publish",
            "button",
            "deactivate",
            "click",
            "while",
            "are",
            "cannot",
            "click",
            "times"
        ],
        "Entity": [
            "button",
            "click",
            "while",
            "derivations",
            "happening",
            "click",
            "multiple",
            "times",
            "submission"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to ensure that attempts to correct or delete non-existent records don't create new published data.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "ensure",
            "attempts",
            "correct",
            "delete",
            "records",
            "don't",
            "create"
        ],
        "Entity": [
            "ensure",
            "attempts",
            "records",
            "don't",
            "data"
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to reset the environment to only take Staging MAX permissions, so that I can ensure that the FABS testers no longer have access.",
        "Persona": [
            " Owner"
        ],
        "Action": [
            "want",
            "reset",
            "take",
            "can",
            "ensure",
            "have",
            "access"
        ],
        "Entity": [
            "reset",
            "environment",
            "take",
            "staging",
            "max",
            "permissions",
            "can",
            "ensure",
            "testers",
            "access"
        ]
    },
    {
        "Text": "#G02# As a user, I want the flexfields in my submission file to appear in the warning and error files when the only error is a missing required element.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "file",
            "appear",
            "files",
            "required"
        ],
        "Entity": [
            "submission",
            "file",
            "warning",
            "error",
            "files",
            "error",
            "element"
        ]
    },
    {
        "Text": "#G02# As a user, I want to have accurate and complete data related to PPoPCode and PPoPCongressionalDistrict.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "complete"
        ],
        "Entity": [
            "data"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want the FABS validation rules to accept zero and blank for loan records.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "rules",
            "accept",
            "zero",
            "blank",
            "loan",
            "records"
        ],
        "Entity": [
            "validation",
            "rules",
            "zero",
            "blank",
            "loan",
            "records"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want FABS deployed into production, so I can submit my Financial Assistance data.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "can",
            "submit"
        ],
        "Entity": [
            "production",
            "can",
            "assistance",
            "data"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to clarify to users what exactly is triggering the CFDA error code in each case.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "clarify",
            "code",
            "case"
        ],
        "Entity": [
            "users",
            "error",
            "code",
            "case"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to be confident that the data coming from SAM is complete.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "complete"
        ],
        "Entity": [
            "confident",
            "data",
            "coming",
            "sam"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want my domain models to be indexed properly, so that I can get validation results back in a reasonable amount of time.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "models",
            "can",
            "get",
            "results",
            "back",
            "amount",
            "time"
        ],
        "Entity": [
            "domain",
            "models",
            "can",
            "validation",
            "results",
            "back",
            "amount",
            "time"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want the FABS validation rules to accept zero and blank for non-loan records.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "rules",
            "accept",
            "zero",
            "blank",
            "records"
        ],
        "Entity": [
            "validation",
            "rules",
            "zero",
            "blank",
            "records"
        ]
    },
    {
        "Text": "#G02# As a broker team member, I want to make some updates to the SQL codes for clarity.",
        "Persona": [
            " broker team member"
        ],
        "Action": [
            "want",
            "make",
            "updates",
            "codes"
        ],
        "Entity": [
            "make",
            "updates",
            "codes",
            "clarity"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to have all derived data elements derived properly.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "have",
            "derived",
            "derived"
        ],
        "Entity": [
            "all",
            "data",
            "elements"
        ]
    },
    {
        "Text": "#G02# As a broker team member, I want to add the 00***** and 00FORGN PPoPCode cases to the derivation logic.",
        "Persona": [
            " broker team member"
        ],
        "Action": [
            "want",
            "add",
            "cases"
        ],
        "Entity": [
            "cases",
            "derivation",
            "logic"
        ]
    },
    {
        "Text": "#G02# As a data user, I want to see the office names derived from office codes, so that I can have appropriate context for understanding them.",
        "Persona": [
            " data user"
        ],
        "Action": [
            "want",
            "see",
            "names",
            "derived",
            "codes",
            "can",
            "have",
            "appropriate"
        ],
        "Entity": [
            "see",
            "office",
            "names",
            "office",
            "codes",
            "can",
            "context",
            "understanding"
        ]
    },
    {
        "Text": "#G02# As a broker user, I want the historical FABS loader to derive fields, so that my agency codes are correct in the PublishedAwardFinancialAssistance table.",
        "Persona": [
            " broker user"
        ],
        "Action": [
            "want",
            "derive",
            "fields",
            "codes",
            "are",
            "correct",
            "table"
        ],
        "Entity": [
            "loader",
            "fields",
            "agency",
            "codes",
            "table"
        ]
    },
    {
        "Text": "#G02# As a broker team member, I want to ensure the Broker resources, validations, and P&P pages are updated appropriately for the launch of FABS and DAIMS v1.1.",
        "Persona": [
            " broker team member"
        ],
        "Action": [
            "want",
            "ensure",
            "broker",
            "pages",
            "are",
            "updated",
            "launch"
        ],
        "Entity": [
            "ensure",
            "broker",
            "resources",
            "validations",
            "pages",
            "launch"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want the data loaded from historical FABS to include the FREC derivations, so that I can have consistent FREC data for USASpending.gov.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "include",
            "can",
            "have"
        ],
        "Entity": [
            "data",
            "derivations",
            "can",
            "data"
        ]
    },
    {
        "Text": "#G02# As a user, I don't want to see NASA grants displayed as contracts.",
        "Persona": [
            " user"
        ],
        "Action": [
            "don't",
            "want",
            "see",
            "grants",
            "contracts"
        ],
        "Entity": [
            "don't",
            "see",
            "grants",
            "contracts"
        ]
    },
    {
        "Text": "#G02# As a user, I want the DUNS validations to accept records whose ActionTypes are B, C, or D and the DUNS is registered in SAM, even though it may have expired. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "accept",
            "records",
            "are",
            "even",
            "may",
            "have",
            "expired"
        ],
        "Entity": [
            "duns",
            "validations",
            "records",
            "duns",
            "sam",
            "even",
            "may"
        ]
    },
    {
        "Text": "#G02# As a user, I want the DUNS validations to accept records whose ActionDates are before the current registration date in SAM, but after the initial registration date.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "accept",
            "records",
            "are",
            "date",
            "initial",
            "date"
        ],
        "Entity": [
            "duns",
            "validations",
            "records",
            "current",
            "registration",
            "date",
            "sam",
            "but",
            "initial",
            "registration",
            "date"
        ]
    },
    {
        "Text": "#G02# As a broker team member, I want to derive FundingAgencyCode, so that the data quality and completeness improves.",
        "Persona": [
            " broker team member"
        ],
        "Action": [
            "want",
            "derive",
            "improves"
        ],
        "Entity": [
            "data",
            "quality",
            "completeness",
            "improves"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want the maximum length allowed for LegalEntityAddressLine3 to match Schema v1.1.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "match"
        ],
        "Entity": [
            "maximum",
            "length",
            "match",
            "schema"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to use the schema v1.1 headers in my FABS file.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "use",
            "file"
        ],
        "Entity": [
            "use",
            "schema",
            "headers",
            "file"
        ]
    },
    {
        "Text": "#G02# As a agency user, I want to map the FederalActionObligation properly to the Atom Feed.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "map",
            "feed"
        ],
        "Entity": [
            "map",
            "atom",
            "feed"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to have PPoPZIP+4 work the same as the Legal Entity ZIP validations.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "have",
            "work",
            "zip"
        ],
        "Entity": [
            "work",
            "entity",
            "zip",
            "validations"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to link the SAMPLE FILE on the \"What you want  to submit\" dialog to point to the correct file, so that I have an accurate reference for my agency submissions.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "link",
            "sample",
            "file",
            "want",
            "point",
            "correct",
            "file",
            "have",
            "reference"
        ],
        "Entity": [
            "link",
            "sample",
            "file",
            "you",
            "dialog",
            "point",
            "file",
            "reference",
            "agency",
            "submissions"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want FPDS data to be up-to-date daily.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want"
        ],
        "Entity": [
            "data",
            "daily"
        ]
    },
    {
        "Text": "#G02# As a user, I want to access the raw agency published files from FABS via USAspending.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "access",
            "files"
        ],
        "Entity": [
            "access",
            "raw",
            "agency",
            "files"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to determine how agencies will generate and validate D Files from FABS and FPDS data.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "determine",
            "will",
            "generate",
            "validate",
            "files"
        ],
        "Entity": [
            "how",
            "agencies",
            "will",
            "files",
            "data"
        ]
    },
    {
        "Text": "#G02# As a user, I want to generate and validate D Files from FABS and FPDS data.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "generate",
            "validate",
            "files"
        ],
        "Entity": [
            "files",
            "data"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want the header information box to show updated date AND time, so that I know when it was updated.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "box",
            "show",
            "updated",
            "date",
            "time",
            "know",
            "was",
            "updated"
        ],
        "Entity": [
            "header",
            "information",
            "box",
            "show",
            "date",
            "time",
            "know"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to receive a more helpful file-level error when I upload a file with the wrong extension.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "receive",
            "upload",
            "file",
            "wrong"
        ],
        "Entity": [
            "more",
            "error",
            "file",
            "wrong",
            "extension"
        ]
    },
    {
        "Text": "#G02# As a tester, I want to have access to test features in environments other than Staging, so that I can test any nonProd feature in any environment.",
        "Persona": [
            " tester"
        ],
        "Action": [
            "want",
            "have",
            "access",
            "test",
            "features",
            "can",
            "test",
            "feature"
        ],
        "Entity": [
            "access",
            "test",
            "features",
            "environments",
            "staging",
            "can",
            "test",
            "feature",
            "environment"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to submission errors to accurately represent FABS errors, so that I know why my submission didn't work.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "represent",
            "know",
            "work"
        ],
        "Entity": [
            "submission",
            "errors",
            "errors",
            "know",
            "why",
            "submission",
            "didn't",
            "work"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want the frontend URLs to more accurately reflect the page I'm accessing, so that I'm not confused.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "reflect",
            "page",
            "confused"
        ],
        "Entity": [
            "more",
            "page"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want all historical Financial Assistance data loaded for FABS go-live.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want"
        ],
        "Entity": [
            "all",
            "assistance",
            "data"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want the historical FPDS data loader to include both extracted historical data and FPDS feed data.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "include",
            "feed"
        ],
        "Entity": [
            "data",
            "loader",
            "data",
            "feed",
            "data"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want historical FPDS data loaded.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want"
        ],
        "Entity": [
            "data"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to accurately see who created a submission, so that I'm not confused about who last updated a submission.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "see",
            "created",
            "confused",
            "last",
            "updated"
        ],
        "Entity": [
            "see",
            "who",
            "submission",
            "who",
            "last",
            "submission"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to get File F in the correct format.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "get",
            "file",
            "correct",
            "format"
        ],
        "Entity": [
            "file",
            "format"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to better understand my file-level errors.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "better",
            "understand"
        ],
        "Entity": [
            "better",
            "errors"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to provide FABS groups that function under the FREC paradigm.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "provide",
            "groups",
            "function"
        ],
        "Entity": [
            "groups",
            "function",
            "paradigm"
        ]
    },
    {
        "Text": "#G02# As a tester, I want to ensure that FABS is deriving fields properly through a robust test file plus a follow up check.",
        "Persona": [
            " tester"
        ],
        "Action": [
            "want",
            "ensure",
            "deriving",
            "fields",
            "test",
            "file",
            "follow",
            "check"
        ],
        "Entity": [
            "ensure",
            "deriving",
            "fields",
            "test",
            "file",
            "plus",
            "follow",
            "check"
        ]
    },
    {
        "Text": "#G02# As an owner, I only want zero-padded fields, so that I can justify padding.",
        "Persona": [
            " owner"
        ],
        "Action": [
            "want",
            "fields",
            "can",
            "justify"
        ],
        "Entity": [
            "fields",
            "can",
            "padding"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to submit records for individual recipients without receiving a DUNS error.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "submit",
            "records",
            "receiving"
        ],
        "Entity": [
            "records",
            "individual",
            "recipients",
            "receiving",
            "duns",
            "error"
        ]
    },
    {
        "Text": "#G02# As a user, I want more information about how many rows will be published prior to deciding whether to publish.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "rows",
            "will",
            "deciding",
            "publish"
        ],
        "Entity": [
            "more",
            "information",
            "how",
            "many",
            "rows",
            "will",
            "prior",
            "deciding"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to prevent duplicate transactions from being published and deal with the time gap between validation and the publishing decision.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "prevent",
            "duplicate",
            "deal",
            "time",
            "gap"
        ],
        "Entity": [
            "duplicate",
            "transactions",
            "being",
            "deal",
            "time",
            "gap",
            "validation",
            "publishing",
            "decision"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to submit a citywide as a PPoPZIP and pass validations.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "submit",
            "pass"
        ],
        "Entity": [
            "pass",
            "validations"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to have updated error codes that accurately reflect the logic and provide enough information, so that I can fix my submission.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "have",
            "updated",
            "codes",
            "reflect",
            "provide",
            "can",
            "fix"
        ],
        "Entity": [
            "error",
            "codes",
            "logic",
            "enough",
            "information",
            "can",
            "fix",
            "submission"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to leave off the last 4 digits of the ZIP without an error, so that I can complete my submissions.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "leave",
            "last",
            "zip",
            "can",
            "complete"
        ],
        "Entity": [
            "leave",
            "off",
            "last",
            "digits",
            "zip",
            "error",
            "can",
            "submissions"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to make sure the historical data includes all necessary columns, so that the information in the database is correct.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "make",
            "includes",
            "correct"
        ],
        "Entity": [
            "make",
            "data",
            "all",
            "necessary",
            "columns",
            "information",
            "database"
        ]
    },
    {
        "Text": "#G02# As a data user, I want to access two additional fields from the FPDS data pull.",
        "Persona": [
            " data user"
        ],
        "Action": [
            "want",
            "access",
            "fields",
            "pull"
        ],
        "Entity": [
            "access",
            "two",
            "fields",
            "data",
            "pull"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want additional helpful info in the submission dashboard, so that I can better manage submissions and IG requests.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "can",
            "better",
            "manage",
            "requests"
        ],
        "Entity": [
            "info",
            "submission",
            "dashboard",
            "can",
            "better",
            "manage",
            "submissions",
            "requests"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to download the uploaded FABS file, so that I can get the uploaded file.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "download",
            "file",
            "can",
            "get",
            "file"
        ],
        "Entity": [
            "file",
            "can",
            "file"
        ]
    },
    {
        "Text": "#G02# As a Developer I want to quickly access Broker application data, so that I can investigate issues.",
        "Persona": [
            " Developer I want to quickly access Broker application data"
        ],
        "Action": [
            "can",
            "investigate",
            "issues"
        ],
        "Entity": [
            "can",
            "issues"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to determine the best way to load historical FPDS data, so that I can load all FPDS data since 2007.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "determine",
            "best",
            "load",
            "can",
            "load"
        ],
        "Entity": [
            "best",
            "way",
            "load",
            "data",
            "can",
            "load",
            "all",
            "data"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want the language on FABS pages to be appropriate for me, so that I am not confused.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "pages",
            "appropriate",
            "confused"
        ],
        "Entity": [
            "language",
            "pages"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I do not want  DABS banner messages and vice versa, so that I have the appropriate information for my application.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "dabs",
            "messages",
            "have",
            "appropriate"
        ],
        "Entity": [
            "dabs",
            "banner",
            "messages",
            "vice",
            "information",
            "application"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to have read-only access to DABS, so that I can view DABS pages without wanting two sets of permissions.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "have",
            "access",
            "dabs",
            "can",
            "view",
            "dabs",
            "pages",
            "sets"
        ],
        "Entity": [
            "access",
            "dabs",
            "can",
            "view",
            "dabs",
            "pages",
            "two",
            "sets",
            "permissions"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to have my validations run in a reasonable amount of time.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "have",
            "run",
            "amount",
            "time"
        ],
        "Entity": [
            "validations",
            "run",
            "amount",
            "time"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to see correct status labels on the Submission Dashboard, so that I can quickly see my submission history.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "see",
            "correct",
            "labels",
            "can",
            "see"
        ],
        "Entity": [
            "see",
            "status",
            "labels",
            "submission",
            "dashboard",
            "can",
            "see",
            "submission",
            "history"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to know when the submission periods start and end, so that I know when the submission starts and ends.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "know",
            "start",
            "end",
            "know",
            "starts",
            "ends"
        ],
        "Entity": [
            "know",
            "submission",
            "periods",
            "start",
            "end",
            "know",
            "submission",
            "starts",
            "ends"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want a landing page to navigate to either FABS or DABS pages, so that I can access both sides of the site.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "page",
            "navigate",
            "dabs",
            "pages",
            "can",
            "access",
            "sides",
            "site"
        ],
        "Entity": [
            "landing",
            "page",
            "dabs",
            "pages",
            "can",
            "access",
            "sides",
            "site"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to submit my data elements surrounded by quotation marks, so that Excel won't strip off leading and trailing zeroes.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "submit",
            "marks",
            "excel",
            "strip",
            "zeroes"
        ],
        "Entity": [
            "data",
            "elements",
            "quotation",
            "marks",
            "strip",
            "off",
            "leading",
            "trailing",
            "zeroes"
        ]
    },
    {
        "Text": "#G03# As a Public User, I want to Search for Information, so that I can obtain publicly available information concerning properties, County services, processes and other general information.",
        "Persona": [
            " Public User"
        ],
        "Action": [
            "want",
            "search",
            "can",
            "obtain",
            "services",
            "processes",
            "general"
        ],
        "Entity": [
            "search",
            "information",
            "can",
            "information",
            "properties",
            "county",
            "services",
            "processes",
            "general",
            "information"
        ]
    },
    {
        "Text": "#G03# As a ProspectiveApplicant, I want to research requirements and to select a service, so that I can find the relevant service and/or application type to initiate via the online portal.",
        "Persona": [
            " ProspectiveApplicant"
        ],
        "Action": [
            "want",
            "research",
            "select",
            "service",
            "can",
            "find",
            "service",
            "type",
            "initiate"
        ],
        "Entity": [
            "research",
            "requirements",
            "service",
            "can",
            "find",
            "service",
            "application",
            "type",
            "initiate",
            "portal"
        ]
    },
    {
        "Text": "#G03# As an Applicant, I want to Request PreApplication Assistance, so that I can receive a response to a request for a meeting or information that is a result of the preapplication assistance.",
        "Persona": [
            " Applicant"
        ],
        "Action": [
            "want",
            "request",
            "can",
            "receive",
            "request",
            "result"
        ],
        "Entity": [
            "request",
            "assistance",
            "can",
            "response",
            "request",
            "meeting",
            "information",
            "result",
            "assistance"
        ]
    },
    {
        "Text": "#G03# As a Customer, I want to Create a Customer Portal User Account, so that I can log on to the Customer Portal and perform transactions that first require user authentication.",
        "Persona": [
            " Customer"
        ],
        "Action": [
            "want",
            "create",
            "account",
            "can",
            "log",
            "perform",
            "require"
        ],
        "Entity": [
            "customer",
            "portal",
            "user",
            "account",
            "can",
            "log",
            "customer",
            "portal",
            "transactions",
            "first",
            "user",
            "authentication"
        ]
    },
    {
        "Text": "#G03# As an Applicant, I want to Submit Application, so that I can provide my information, plans and/or documents to initiate a transaction with the County.",
        "Persona": [
            " Applicant"
        ],
        "Action": [
            "want",
            "submit",
            "can",
            "provide",
            "plans",
            "documents",
            "initiate"
        ],
        "Entity": [
            "application",
            "can",
            "information",
            "plans",
            "documents",
            "initiate",
            "transaction",
            "county"
        ]
    },
    {
        "Text": "#G03# As an Applicant, I want to Submit Supporting Documentation, so that I can satisfy documentation requirements for my application.",
        "Persona": [
            " Applicant"
        ],
        "Action": [
            "want",
            "submit",
            "can",
            "satisfy"
        ],
        "Entity": [
            "supporting",
            "documentation",
            "can",
            "documentation",
            "requirements",
            "application"
        ]
    },
    {
        "Text": "#G03# As an Applicant, I want to Pay Fee, so that I can satisfy outstanding charge associated with the service requested or received from the County.",
        "Persona": [
            " Applicant"
        ],
        "Action": [
            "want",
            "pay",
            "fee",
            "can",
            "satisfy",
            "charge",
            "associated",
            "service",
            "received"
        ],
        "Entity": [
            "pay",
            "fee",
            "can",
            "charge",
            "service",
            "county"
        ]
    },
    {
        "Text": "#G03# As an Applicant, I want to Check the Status of a transaction, so that I can understand where the provisioning of my service is in the process, such as information related to service levels, fees, plan review, permit, or inspection results.",
        "Persona": [
            " Applicant"
        ],
        "Action": [
            "want",
            "check",
            "can",
            "understand",
            "service",
            "process",
            "service",
            "levels",
            "fees",
            "plan",
            "review",
            "permit",
            "results"
        ],
        "Entity": [
            "check",
            "status",
            "transaction",
            "can",
            "where",
            "service",
            "process",
            "information",
            "service",
            "levels",
            "fees",
            "plan",
            "review",
            "permit",
            "inspection",
            "results"
        ]
    },
    {
        "Text": "#G03# As an Applicant, I want to Modify my Application, so that I can successfully change information on an application.",
        "Persona": [
            " Applicant"
        ],
        "Action": [
            "want",
            "modify",
            "can",
            "change"
        ],
        "Entity": [
            "application",
            "can",
            "change",
            "information",
            "application"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Perform a Completeness Review, so that I can validate when an application is complete and eligible for further technical review.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "perform",
            "review",
            "can",
            "validate",
            "complete",
            "further",
            "review"
        ],
        "Entity": [
            "completeness",
            "review",
            "can",
            "application",
            "review"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Record an Internal Note, so that I can share information with other Staff collaborating on the record.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "record",
            "note",
            "can",
            "share",
            "staff",
            "collaborating",
            "record"
        ],
        "Entity": [
            "record",
            "internal",
            "note",
            "can",
            "share",
            "information",
            "staff",
            "record"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Assign an Application for Detailed Review, so that I can review the for compliance and subsequently approved or denied.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "assign",
            "review",
            "can",
            "review",
            "approved",
            "denied"
        ],
        "Entity": [
            "assign",
            "application",
            "review",
            "can",
            "review",
            "compliance"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Apply a Hold, so that I can prevent progression through the workflow or other actions in the system until the issue is resolved.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "apply",
            "hold",
            "can",
            "prevent",
            "issue"
        ],
        "Entity": [
            "hold",
            "can",
            "progression",
            "actions",
            "system",
            "issue"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Remove a Hold, so that I can allow progression through the workflow or other actions in the system now that the issue has been resolved.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "remove",
            "hold",
            "can",
            "allow",
            "issue",
            "has",
            "been"
        ],
        "Entity": [
            "remove",
            "hold",
            "can",
            "progression",
            "actions",
            "system",
            "now",
            "issue"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Send a Formal Response to Applicant, so that I can satisfy communication and records responsibilities.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "send",
            "can",
            "satisfy",
            "records"
        ],
        "Entity": [
            "send",
            "formal",
            "response",
            "applicant",
            "can",
            "communication",
            "records",
            "responsibilities"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Track  the Draft Proffers, so that I can preserve the history of draft proffer statements submitted by the Applicant.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "track",
            "draft",
            "proffers",
            "can",
            "preserve",
            "draft",
            "proffer",
            "submitted"
        ],
        "Entity": [
            "track",
            "draft",
            "proffers",
            "can",
            "preserve",
            "history",
            "draft",
            "proffer",
            "statements",
            "applicant"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Manage Approved Proffers, so that I can ensure compliance with and satisfaction of the proffer in the future.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "manage",
            "approved",
            "proffers",
            "can",
            "ensure",
            "proffer"
        ],
        "Entity": [
            "manage",
            "proffers",
            "can",
            "ensure",
            "compliance",
            "satisfaction",
            "proffer",
            "future"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Manage Ordinances, so that I can maintain accurate ordinance information in the System.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "manage",
            "can",
            "maintain"
        ],
        "Entity": [
            "manage",
            "ordinances",
            "can",
            "ordinance",
            "information",
            "system"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Schedule a Meeting, so that I can bring the required parties together at a specific date/time to address an issue.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "schedule",
            "can",
            "bring",
            "required",
            "parties",
            "address",
            "issue"
        ],
        "Entity": [
            "schedule",
            "meeting",
            "can",
            "parties",
            "specific",
            "address",
            "issue"
        ]
    },
    {
        "Text": "#G03# As a staff member, I want to denote an application with a Final Action status. So that I can finish it.",
        "Persona": [
            " staff member"
        ],
        "Action": [
            "want",
            "denote",
            "can",
            "finish"
        ],
        "Entity": [
            "application",
            "final",
            "action",
            "status",
            "can",
            "finish"
        ]
    },
    {
        "Text": "#G03# As a Planning Staff member, I want to Conduct and Track Plan Amendments and Planning Studies, so that I can record work in process, outcome, and location-based information related to the Plan(s).",
        "Persona": [
            " Planning Staff member"
        ],
        "Action": [
            "want",
            "conduct",
            "track",
            "plan",
            "planning",
            "studies",
            "can",
            "record",
            "work",
            "process"
        ],
        "Entity": [
            "conduct",
            "track",
            "plan",
            "amendments",
            "planning",
            "studies",
            "can",
            "record",
            "work",
            "process",
            "outcome",
            "information"
        ]
    },
    {
        "Text": "#G03# As a Planning Staff member, I want to Generate Planning-related Reports, so that I can access, analyze and/or export the needed information in the format I requested.",
        "Persona": [
            " Planning Staff member"
        ],
        "Action": [
            "want",
            "generate",
            "reports",
            "can",
            "access",
            "analyze",
            "export",
            "format"
        ],
        "Entity": [
            "reports",
            "can",
            "access",
            "export",
            "information",
            "format"
        ]
    },
    {
        "Text": "#G03# As a Planning Staff member, I want to Evaluate Consistency with the Comprehensive Plan, so that I can complete my required review of a plan set and/or application.",
        "Persona": [
            " Planning Staff member"
        ],
        "Action": [
            "want",
            "evaluate",
            "plan",
            "can",
            "complete",
            "required",
            "review",
            "plan",
            "set"
        ],
        "Entity": [
            "consistency",
            "comprehensive",
            "plan",
            "can",
            "review",
            "plan",
            "set",
            "application"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Perform a Staff Review, so that I can validate compliance of an application with the Zoning Ordinance and impact approval/denial of the application accordingly.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "perform",
            "staff",
            "review",
            "can",
            "validate",
            "impact"
        ],
        "Entity": [
            "staff",
            "review",
            "can",
            "compliance",
            "application",
            "zoning",
            "ordinance",
            "impact",
            "application"
        ]
    },
    {
        "Text": "#G03# As a Zoning Staff member, I want to Process the Requests for Zoning Information, so that I can capture my response to the request in the system and also send a communication from the system to the Applicant.",
        "Persona": [
            " Zoning Staff member"
        ],
        "Action": [
            "want",
            "process",
            "requests",
            "can",
            "capture",
            "request",
            "send"
        ],
        "Entity": [
            "process",
            "requests",
            "zoning",
            "information",
            "can",
            "capture",
            "response",
            "request",
            "system",
            "send",
            "communication",
            "system",
            "applicant"
        ]
    },
    {
        "Text": "#G03# As a Zoning Staff member, I want to Issue the Zoning-Related Permits, so that I can satisfy an Applicant's request for service that has proven to be eligible and in compliance with the Zoning Ordinance.",
        "Persona": [
            " Zoning Staff member"
        ],
        "Action": [
            "want",
            "issue",
            "permits",
            "can",
            "satisfy",
            "request",
            "service",
            "has",
            "proven"
        ],
        "Entity": [
            "issue",
            "permits",
            "can",
            "request",
            "service",
            "compliance",
            "zoning",
            "ordinance"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Develop a Staff Report, so that I can publish and distribute the report according to business rules.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "develop",
            "staff",
            "report",
            "can",
            "publish",
            "distribute",
            "report",
            "rules"
        ],
        "Entity": [
            "staff",
            "report",
            "can",
            "report",
            "business",
            "rules"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Manage Hearing Calendars, so that I can track hearing-related activities and due dates.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "manage",
            "calendars",
            "can",
            "track",
            "dates"
        ],
        "Entity": [
            "manage",
            "hearing",
            "calendars",
            "can",
            "track",
            "activities",
            "due",
            "dates"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Assign a Hearing Date, so that I can present the application to the appropriate governing body within the timelines dictated by the relevant County rules and procedures.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "assign",
            "date",
            "can",
            "present",
            "appropriate",
            "body",
            "dictated",
            "rules"
        ],
        "Entity": [
            "assign",
            "hearing",
            "date",
            "can",
            "present",
            "application",
            "governing",
            "body",
            "county",
            "rules",
            "procedures"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Manage Affidavits, so that I can ensure compliance with the requirements prior to the hearing.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "manage",
            "can",
            "ensure"
        ],
        "Entity": [
            "manage",
            "affidavits",
            "can",
            "ensure",
            "compliance",
            "requirements",
            "prior",
            "hearing"
        ]
    },
    {
        "Text": "#G03# As an Applicant, I want to Satisfy Hearing Requirements, so that I can ensure all pre-hearing requirements are satisfied in time for the hearing.",
        "Persona": [
            " Applicant"
        ],
        "Action": [
            "want",
            "satisfy",
            "can",
            "ensure",
            "are",
            "satisfied",
            "time"
        ],
        "Entity": [
            "hearing",
            "requirements",
            "can",
            "ensure",
            "all",
            "requirements",
            "time",
            "hearing"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Prepare for and Support Hearing Execution, so that I can ensure all pre-hearing requirements are satisfied and staff and Applicant are ready for the hearing.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "prepare",
            "support",
            "can",
            "ensure",
            "are",
            "satisfied",
            "staff",
            "are",
            "ready"
        ],
        "Entity": [
            "support",
            "hearing",
            "execution",
            "can",
            "ensure",
            "all",
            "requirements",
            "staff",
            "applicant",
            "ready",
            "hearing"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Capture a Hearing Decision, so that I can enforce the system.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "capture",
            "can",
            "enforce"
        ],
        "Entity": [
            "capture",
            "hearing",
            "decision",
            "can",
            "system"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Process the Appeals, so that I can track the outcome and record the impact on the relevant records.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "process",
            "appeals",
            "can",
            "track",
            "record",
            "impact",
            "records"
        ],
        "Entity": [
            "process",
            "appeals",
            "can",
            "track",
            "outcome",
            "record",
            "impact",
            "records"
        ]
    },
    {
        "Text": "#G03# As a Plan Review Staff member, I want to Assign Plans for Review, so that I can ensure plans have been assigned to the appropriate Plan Reviewer.",
        "Persona": [
            " Plan Review Staff member"
        ],
        "Action": [
            "want",
            "assign",
            "plans",
            "review",
            "can",
            "ensure",
            "plans",
            "have",
            "been",
            "appropriate",
            "plan"
        ],
        "Entity": [
            "assign",
            "plans",
            "review",
            "can",
            "ensure",
            "plans",
            "plan",
            "reviewer"
        ]
    },
    {
        "Text": "#G03# As a Plan Review Staff Supervisor, I want to Manage Plan Reviewer Workload, so that I can monitor and effectively adjust workload as necessary and ensure service levels are met",
        "Persona": [
            " Plan Review Staff Supervisor"
        ],
        "Action": [
            "want",
            "manage",
            "plan",
            "can",
            "monitor",
            "adjust",
            "ensure",
            "service",
            "levels",
            "are",
            "met"
        ],
        "Entity": [
            "manage",
            "plan",
            "reviewer",
            "workload",
            "can",
            "monitor",
            "workload",
            "necessary",
            "ensure",
            "service",
            "levels"
        ]
    },
    {
        "Text": "#G03# As an Applicant, I want to Request a Plan Review Meeting, so that I can meet with the Plan Review Staff regarding the plan review.",
        "Persona": [
            " Applicant"
        ],
        "Action": [
            "want",
            "request",
            "plan",
            "review",
            "can",
            "meet",
            "plan",
            "review",
            "staff",
            "plan",
            "review"
        ],
        "Entity": [
            "request",
            "plan",
            "review",
            "meeting",
            "can",
            "meet",
            "plan",
            "review",
            "staff",
            "plan",
            "review"
        ]
    },
    {
        "Text": "#G03# As a Plan Review Staff member, I want to successfully Conduct a Plan Review Meeting with the Applicant and record the outcome, so that I can listen to it again.",
        "Persona": [
            " Plan Review Staff member"
        ],
        "Action": [
            "want",
            "conduct",
            "plan",
            "review",
            "record",
            "can",
            "listen"
        ],
        "Entity": [
            "conduct",
            "plan",
            "review",
            "meeting",
            "applicant",
            "record",
            "outcome",
            "can"
        ]
    },
    {
        "Text": "#G03# As a Plan Review Staff member, I want to Review Plans, so that I can review them for compliance and either approve, or fail or deny the plans and record any conditions, clearances, or corrections needed from the Applicant.",
        "Persona": [
            " Plan Review Staff member"
        ],
        "Action": [
            "want",
            "review",
            "plans",
            "can",
            "review",
            "approve",
            "fail",
            "deny",
            "plans",
            "record",
            "conditions"
        ],
        "Entity": [
            "review",
            "plans",
            "can",
            "review",
            "compliance",
            "fail",
            "plans",
            "record",
            "conditions",
            "clearances",
            "corrections",
            "applicant"
        ]
    },
    {
        "Text": "#G03# As an Applicant, I want to Resubmit Plans, so that I can review revised plans. ",
        "Persona": [
            " Applicant"
        ],
        "Action": [
            "want",
            "resubmit",
            "plans",
            "can",
            "review",
            "revised",
            "plans"
        ],
        "Entity": [
            "plans",
            "can",
            "review",
            "plans"
        ]
    },
    {
        "Text": "#G03# As a Plan Review Staff Member, I want to Review the Code Modifications submitted by the Applicant, so that I can review the request and if approved, associate it with the appropriate project.",
        "Persona": [
            " Plan Review Staff Member"
        ],
        "Action": [
            "want",
            "review",
            "code",
            "submitted",
            "can",
            "review",
            "request",
            "approved",
            "associate",
            "appropriate",
            "project"
        ],
        "Entity": [
            "review",
            "code",
            "modifications",
            "applicant",
            "can",
            "review",
            "request",
            "associate",
            "project"
        ]
    },
    {
        "Text": "#G03# As a Plan Review Staff member, I want to Track the Completion of Required Plan Reviews, so that I can ensure all plan review tasks are completed, results have been sent to the Applicant and any downstream steps are initiated such has a final review or payment for permit issuance.",
        "Persona": [
            " Plan Review Staff member"
        ],
        "Action": [
            "want",
            "track",
            "required",
            "plan",
            "reviews",
            "can",
            "ensure",
            "plan",
            "review",
            "tasks",
            "are",
            "completed",
            "results",
            "have",
            "been",
            "sent",
            "steps",
            "are",
            "initiated",
            "has",
            "review",
            "permit"
        ],
        "Entity": [
            "track",
            "completion",
            "plan",
            "reviews",
            "can",
            "ensure",
            "all",
            "plan",
            "review",
            "tasks",
            "results",
            "applicant",
            "steps",
            "final",
            "review",
            "payment",
            "permit",
            "issuance"
        ]
    },
    {
        "Text": "#G03# As a Development Staff member, I want to Issue a Development-related Permit, so that I can grant the request to the Applicant to begin work",
        "Persona": [
            " Development Staff member"
        ],
        "Action": [
            "want",
            "issue",
            "permit",
            "can",
            "grant",
            "request",
            "begin",
            "work"
        ],
        "Entity": [
            "issue",
            "permit",
            "can",
            "grant",
            "request",
            "applicant",
            "work"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Manage Bonds, so that I can track and manage bonds throughout the lifecycle of the project until release.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "manage",
            "bonds",
            "can",
            "track",
            "manage",
            "bonds",
            "project",
            "release"
        ],
        "Entity": [
            "manage",
            "bonds",
            "can",
            "track",
            "manage",
            "bonds",
            "project",
            "release"
        ]
    },
    {
        "Text": "#G03# As an Applicant, I want to Complete Building Development Project, so that I can receive any posted bond and/or obtain occupancy.",
        "Persona": [
            " Applicant"
        ],
        "Action": [
            "want",
            "complete",
            "project",
            "can",
            "receive",
            "bond",
            "obtain"
        ],
        "Entity": [
            "building",
            "development",
            "project",
            "can",
            "bond",
            "occupancy"
        ]
    },
    {
        "Text": "#G03# As a Customer, I want to Request Inspection, so that a County inspector is assigned to perform an inspection of my project.",
        "Persona": [
            " Customer"
        ],
        "Action": [
            "want",
            "request",
            "perform",
            "project"
        ],
        "Entity": [
            "request",
            "inspection",
            "county",
            "inspector",
            "inspection",
            "project"
        ]
    },
    {
        "Text": "#G03# As an Inspection Staff member, I want to Create an Inspection, so that I can schedule and assign the inspection.",
        "Persona": [
            " Inspection Staff member"
        ],
        "Action": [
            "want",
            "create",
            "can",
            "schedule",
            "assign"
        ],
        "Entity": [
            "inspection",
            "can",
            "schedule",
            "assign",
            "inspection"
        ]
    },
    {
        "Text": "#G03# As an Inspection Staff Supervisor, I want to Assign Inspections, so that I can make sure the appropriate Inspector receives the work.",
        "Persona": [
            " Inspection Staff Supervisor"
        ],
        "Action": [
            "want",
            "assign",
            "can",
            "make",
            "appropriate",
            "receives",
            "work"
        ],
        "Entity": [
            "assign",
            "inspections",
            "can",
            "make",
            "inspector",
            "work"
        ]
    },
    {
        "Text": "#G03# As an Inspection Supervisor, I want to Manage Inspector Workload, so that I can meet service level and quality requirements.",
        "Persona": [
            " Inspection Supervisor"
        ],
        "Action": [
            "want",
            "manage",
            "can",
            "meet",
            "service",
            "level"
        ],
        "Entity": [
            "manage",
            "inspector",
            "workload",
            "can",
            "meet",
            "service",
            "level",
            "quality",
            "requirements"
        ]
    },
    {
        "Text": "#G03# As an Inspector, I want to Conduct Inspections, so that I can validate Customer compliance with code and regulations and provide results of the inspection to the Customer.",
        "Persona": [
            " Inspector"
        ],
        "Action": [
            "want",
            "conduct",
            "can",
            "validate",
            "code",
            "provide",
            "results"
        ],
        "Entity": [
            "conduct",
            "inspections",
            "can",
            "customer",
            "compliance",
            "code",
            "regulations",
            "results",
            "inspection",
            "customer"
        ]
    },
    {
        "Text": "#G03# As an Enforcement Staff member, I want to Issue a Notice of Violation, so that I can provide formal communication to the responsible party.",
        "Persona": [
            " Enforcement Staff member"
        ],
        "Action": [
            "want",
            "issue",
            "notice",
            "can",
            "provide",
            "party"
        ],
        "Entity": [
            "issue",
            "notice",
            "violation",
            "can",
            "formal",
            "communication",
            "responsible",
            "party"
        ]
    },
    {
        "Text": "#G03# As a l Staff member, I want to search for Property information, so that I can obtain all associated current and historic owners, permits, and applications.",
        "Persona": [
            " l Staff member"
        ],
        "Action": [
            "want",
            "search",
            "can",
            "obtain",
            "associated",
            "permits"
        ],
        "Entity": [
            "search",
            "property",
            "information",
            "can",
            "all",
            "current",
            "owners",
            "permits",
            "applications"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I need to be notified when Geospatial attributes change, so that I can ensure that I am reviewing the permit/application to the most current data and appropriate standards.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "need",
            "notified",
            "attributes",
            "change",
            "can",
            "ensure",
            "appropriate"
        ],
        "Entity": [
            "need",
            "attributes",
            "change",
            "can",
            "ensure",
            "most",
            "current",
            "data",
            "standards"
        ]
    },
    {
        "Text": "#G03# As a County Staff Member, I want to create a custom query/report outside of the common querying/reporting functionality, so that I can fulfill a request.",
        "Persona": [
            " County Staff Member"
        ],
        "Action": [
            "want",
            "create",
            "can",
            "fulfill",
            "request"
        ],
        "Entity": [
            "custom",
            "outside",
            "common",
            "can",
            "request"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to create each condo unit, so that I can associate it to the child parcel and address after the condominiums are recorded in the system.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "create",
            "can",
            "associate",
            "parcel",
            "address",
            "are"
        ],
        "Entity": [
            "condo",
            "unit",
            "can",
            "associate",
            "child",
            "parcel",
            "address",
            "condominiums",
            "system"
        ]
    },
    {
        "Text": "#G03# As a Technical Staff member, I want to update the GIS Property Management, so that I can successfully update the transactional Parcel Pin to reference the GIS layer where the Split or Merged Parcel Pin exists.",
        "Persona": [
            " Technical Staff member"
        ],
        "Action": [
            "want",
            "update",
            "can",
            "update",
            "parcel",
            "pin",
            "reference",
            "layer",
            "split",
            "merged",
            "parcel",
            "pin",
            "exists"
        ],
        "Entity": [
            "update",
            "property",
            "management",
            "can",
            "update",
            "parcel",
            "pin",
            "reference",
            "layer",
            "where",
            "split",
            "parcel",
            "pin"
        ]
    },
    {
        "Text": "#G03# As a Staff member, I want to Send or Post Citations and Fines, so that I can successfully send the Notice Of Violation document to the property owner and log information about the action.",
        "Persona": [
            " Staff member"
        ],
        "Action": [
            "want",
            "send",
            "post",
            "fines",
            "can",
            "send",
            "notice",
            "document",
            "log"
        ],
        "Entity": [
            "send",
            "post",
            "citations",
            "fines",
            "can",
            "send",
            "notice",
            "violation",
            "document",
            "property",
            "owner",
            "log",
            "information",
            "action"
        ]
    },
    {
        "Text": "#G04# As a user, I want to click on the address, so that it takes me to a new tab with Google Maps.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "click",
            "address",
            "takes",
            "tab",
            "maps"
        ],
        "Entity": [
            "click",
            "address",
            "takes",
            "tab",
            "maps"
        ]
    },
    {
        "Text": "#G04# As a user, I want to be able to anonymously view public information, so that I know about recycling centers near me before creating an account.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "view",
            "know",
            "centers",
            "near",
            "creating",
            "account"
        ],
        "Entity": [
            "able",
            "view",
            "public",
            "information",
            "know",
            "recycling",
            "centers",
            "near",
            "account"
        ]
    },
    {
        "Text": "#G04# As a user, I want to be able to enter my zip code and get a list of nearby recycling facilities, so that I can determine which ones I should consider.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "enter",
            "zip",
            "code",
            "get",
            "list",
            "can",
            "determine",
            "should",
            "consider"
        ],
        "Entity": [
            "able",
            "zip",
            "code",
            "list",
            "recycling",
            "facilities",
            "can",
            "ones"
        ]
    },
    {
        "Text": "#G04# As a user, I want to be able to get the hours of each recycling facility, so that I can arrange drop-offs on my off days or during after-work hours.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "get",
            "can",
            "arrange"
        ],
        "Entity": [
            "able",
            "hours",
            "recycling",
            "facility",
            "can",
            "off",
            "days",
            "hours"
        ]
    },
    {
        "Text": "#G04# As a user, I want to have a flexible pick up time, so that I can more conveniently use the website.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "pick",
            "time",
            "can",
            "use"
        ],
        "Entity": [
            "pick",
            "time",
            "can",
            "more",
            "use"
        ]
    },
    {
        "Text": "#G04# As a user, I want to be able to select different types of recyclable waste, so I have and get a list of facilities that accept each type and their opening hours, so that I can find an optimal route and schedule.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "select",
            "types",
            "waste",
            "have",
            "get",
            "list",
            "accept",
            "type",
            "can",
            "find",
            "route",
            "schedule"
        ],
        "Entity": [
            "able",
            "types",
            "waste",
            "list",
            "facilities",
            "type",
            "opening",
            "hours",
            "can",
            "find",
            "route",
            "schedule"
        ]
    },
    {
        "Text": "#G04# As a user, I want to add donation centers as favorites on my profile, so that I can view them later.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "add",
            "centers",
            "profile",
            "can",
            "view"
        ],
        "Entity": [
            "donation",
            "centers",
            "favorites",
            "profile",
            "can",
            "view"
        ]
    },
    {
        "Text": "#G04# As a user, I want to be able to give my email ID, so that I can receive notifications for new events as they are posted.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "give",
            "can",
            "receive",
            "are"
        ],
        "Entity": [
            "able",
            "give",
            "can",
            "notifications",
            "events"
        ]
    },
    {
        "Text": "#G04# As a user, I want to be able to view a map display of the public recycling bins around my area.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "view",
            "map",
            "display",
            "bins"
        ],
        "Entity": [
            "able",
            "view",
            "map",
            "display",
            "public",
            "recycling",
            "bins",
            "area"
        ]
    },
    {
        "Text": "#G04# As a user, I want to be able to view a map display of the special waste drop off sites around my area.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "view",
            "map",
            "display",
            "waste",
            "drop",
            "sites"
        ],
        "Entity": [
            "able",
            "view",
            "map",
            "display",
            "special",
            "waste",
            "drop",
            "off",
            "sites",
            "area"
        ]
    },
    {
        "Text": "#G04# As a user, I want to be able to view the safe disposal events currently being organised around my area.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "view",
            "organised"
        ],
        "Entity": [
            "able",
            "view",
            "safe",
            "disposal",
            "events",
            "being",
            "area"
        ]
    },
    {
        "Text": "#G04# As a user, I want to choose a flexible pick up time, so that I can more conveniently use the website.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "choose",
            "pick",
            "time",
            "can",
            "use"
        ],
        "Entity": [
            "pick",
            "time",
            "can",
            "more",
            "use"
        ]
    },
    {
        "Text": "#G04# As a user, I want to view user documentation for the website, so that I know how to use the web app.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "view",
            "know",
            "use",
            "web"
        ],
        "Entity": [
            "view",
            "user",
            "documentation",
            "know",
            "how",
            "use",
            "web"
        ]
    },
    {
        "Text": "#G04# As a user, I want to get feedback when I enter an invalid zip code.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "get",
            "enter",
            "invalid",
            "zip",
            "code"
        ],
        "Entity": [
            "invalid",
            "zip",
            "code"
        ]
    },
    {
        "Text": "#G04# As a user, I want to be able to create an acocunt, so that I can create my own profile.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "create",
            "can",
            "create",
            "own",
            "profile"
        ],
        "Entity": [
            "able",
            "can",
            "profile"
        ]
    },
    {
        "Text": "#G04# As an admin, I want to be able to add or remove recycling facilities' information, so that users get the most recent information.",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "add",
            "remove",
            "get"
        ],
        "Entity": [
            "able",
            "remove",
            "recycling",
            "information",
            "users",
            "most",
            "information"
        ]
    },
    {
        "Text": "#G04# As an admin, I want to be able to read users' feedback and complaints, so that we can add more features and keep improving the service we provide to them.",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "read",
            "can",
            "add",
            "features",
            "keep",
            "improving",
            "service",
            "provide"
        ],
        "Entity": [
            "able",
            "read",
            "complaints",
            "can",
            "more",
            "features",
            "keep",
            "service"
        ]
    },
    {
        "Text": "#G04# As a user, I want to be able to check transaction history and keep a record of it, so that I can go back when needed.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "check",
            "keep",
            "record",
            "can",
            "back"
        ],
        "Entity": [
            "able",
            "check",
            "transaction",
            "history",
            "keep",
            "record",
            "can",
            "back"
        ]
    },
    {
        "Text": "#G04# As a user, I want to have a great UI and UX from the sites, so that I have a pleasant experience when navigating through them.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "sites",
            "have",
            "experience",
            "navigating"
        ],
        "Entity": [
            "great",
            "sites",
            "experience"
        ]
    },
    {
        "Text": "#G04# As a user, I want to be able to access the site and do all the other stuffs on all of my electronic devices.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "access",
            "site",
            "stuffs"
        ],
        "Entity": [
            "able",
            "access",
            "site",
            "all",
            "stuffs",
            "all",
            "devices"
        ]
    },
    {
        "Text": "#G04# As an admin, I want to be able to block specific users based on IP address, so that I can prevent spamming on the websites.",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "block",
            "based",
            "address",
            "can",
            "prevent"
        ],
        "Entity": [
            "able",
            "block",
            "specific",
            "users",
            "address",
            "can"
        ]
    },
    {
        "Text": "#G04# As an admin, I want to view a dashboard that monitors all the sites' statuses, so that I can have a sense of what people are doing on our sites and know the service status.",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "view",
            "monitors",
            "can",
            "have",
            "sense",
            "people",
            "are",
            "sites",
            "know",
            "service"
        ],
        "Entity": [
            "view",
            "dashboard",
            "monitors",
            "all",
            "statuses",
            "can",
            "sense",
            "people",
            "doing",
            "sites",
            "know",
            "service",
            "status"
        ]
    },
    {
        "Text": "#G04# As an admin, I want to have all data encrypted, so that important information will not be stolen during a server breach or an attack.",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "have",
            "will",
            "stolen",
            "breach",
            "attack"
        ],
        "Entity": [
            "all",
            "data",
            "information",
            "will",
            "server",
            "breach",
            "attack"
        ]
    },
    {
        "Text": "#G04# As an executive, I want to have full access to data related to my company, so that I can have a sense of my company's performance.",
        "Persona": [
            " executive"
        ],
        "Action": [
            "want",
            "have",
            "full",
            "access",
            "company",
            "can",
            "have",
            "sense"
        ],
        "Entity": [
            "full",
            "access",
            "data",
            "company",
            "can",
            "sense",
            "performance"
        ]
    },
    {
        "Text": "#G04# As an employee, I want to access the route planning system during work, so that I can be guided through the neighbourhood.",
        "Persona": [
            " employee"
        ],
        "Action": [
            "want",
            "access",
            "route",
            "planning",
            "work",
            "can",
            "guided"
        ],
        "Entity": [
            "access",
            "route",
            "planning",
            "system",
            "work",
            "can",
            "neighbourhood"
        ]
    },
    {
        "Text": "#G04# As an employee from the HR department, I want to have access to the full information of all employees working for this business.",
        "Persona": [
            " employee from the HR department"
        ],
        "Action": [
            "want",
            "have",
            "access",
            "full"
        ],
        "Entity": [
            "access",
            "full",
            "information",
            "all",
            "employees",
            "working",
            "business"
        ]
    },
    {
        "Text": "#G04# As a developer, I want to access an API from the website, so that I can integrate it and implement certain features in my own iOS application.",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "access",
            "can",
            "integrate",
            "implement",
            "features",
            "own"
        ],
        "Entity": [
            "access",
            "can",
            "implement",
            "features",
            "application"
        ]
    },
    {
        "Text": "#G04# As a user, I want to be able to receive tempting rewards, so that I have a reason to use the website.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "receive",
            "rewards",
            "have",
            "reason",
            "use"
        ],
        "Entity": [
            "able",
            "rewards",
            "reason",
            "use"
        ]
    },
    {
        "Text": "#G04# As a user, I want to have my personal information kept securely in the database of the website, so that I will not suffer from identity theft or telephone harassment.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "kept",
            "will",
            "suffer",
            "telephone"
        ],
        "Entity": [
            "personal",
            "information",
            "database",
            "will",
            "identity",
            "theft",
            "telephone",
            "harassment"
        ]
    },
    {
        "Text": "#G04# As an admin, I want to handle all users' activities, so that I can manage more efficiently.",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "handle",
            "can",
            "manage"
        ],
        "Entity": [
            "handle",
            "all",
            "activities",
            "can",
            "manage",
            "more"
        ]
    },
    {
        "Text": "#G04# As a company, I want to have a website that is easy to use, so that I can upload or delete stuff step by step.",
        "Persona": [
            " company"
        ],
        "Action": [
            "want",
            "have",
            "easy",
            "use",
            "can",
            "upload",
            "delete",
            "stuff",
            "step",
            "step"
        ],
        "Entity": [
            "use",
            "can",
            "stuff",
            "step",
            "step"
        ]
    },
    {
        "Text": "#G04# As an employee, I want to get quick notifications, so that I can process cases the first time.",
        "Persona": [
            " employee"
        ],
        "Action": [
            "want",
            "get",
            "can",
            "process",
            "cases",
            "time"
        ],
        "Entity": [
            "quick",
            "notifications",
            "can",
            "process",
            "cases",
            "first",
            "time"
        ]
    },
    {
        "Text": "#G04# As a company accountant, I want to view all available activity fees online, so that I can easily create a bill statement.",
        "Persona": [
            " company accountant"
        ],
        "Action": [
            "want",
            "view",
            "fees",
            "can",
            "create",
            "bill"
        ],
        "Entity": [
            "view",
            "all",
            "activity",
            "fees",
            "can",
            "bill",
            "statement"
        ]
    },
    {
        "Text": "#G04# As a developer, I want to use bootstrap in the process of developing, so that I can easily design my website.",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "use",
            "bootstrap",
            "process",
            "developing",
            "can",
            "design"
        ],
        "Entity": [
            "use",
            "bootstrap",
            "process",
            "developing",
            "can",
            "design"
        ]
    },
    {
        "Text": "#G04# As a developer, I want to attend some UI/UX lessons, so that I can develop an awesome and beautiful features website.",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "attend",
            "lessons",
            "can",
            "develop",
            "features"
        ],
        "Entity": [
            "lessons",
            "can",
            "features"
        ]
    },
    {
        "Text": "#G04# As a user, I want to view all locations of recycling centers on a map, so that I can check which routes to take to drop off waste.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "view",
            "centers",
            "map",
            "can",
            "check",
            "routes",
            "take",
            "drop",
            "waste"
        ],
        "Entity": [
            "view",
            "all",
            "locations",
            "recycling",
            "centers",
            "map",
            "can",
            "check",
            "routes",
            "take",
            "drop",
            "off",
            "waste"
        ]
    },
    {
        "Text": "#G04# As a user, I want to upload my week's schedule, so that I can get recommendations for recycling centers that best fit my availability.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "upload",
            "schedule",
            "can",
            "get",
            "centers",
            "best",
            "fit"
        ],
        "Entity": [
            "schedule",
            "can",
            "recommendations",
            "recycling",
            "centers",
            "best",
            "fit",
            "availability"
        ]
    },
    {
        "Text": "#G04# As a user, I want to link my email account to my profile, so that I can get a temporary password in case I forget my own one.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "link",
            "account",
            "profile",
            "can",
            "get",
            "case",
            "forget",
            "own"
        ],
        "Entity": [
            "link",
            "account",
            "profile",
            "can",
            "temporary",
            "password",
            "case",
            "one"
        ]
    },
    {
        "Text": "#G04# As a user, I want to contact the administrators, so that I can give feedback or ask for help.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "contact",
            "can",
            "give",
            "ask",
            "help"
        ],
        "Entity": [
            "contact",
            "administrators",
            "can",
            "give",
            "help"
        ]
    },
    {
        "Text": "#G04# As an admin, I want to add recycling center information, so that I can keep the database up-to-date over time.",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "add",
            "center",
            "can",
            "keep",
            "time"
        ],
        "Entity": [
            "recycling",
            "center",
            "information",
            "can",
            "keep",
            "database",
            "over",
            "time"
        ]
    },
    {
        "Text": "#G04# As an admin, I want to view user error logs, so that I can fix or review any issues that are being faced by users of the system.",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "view",
            "logs",
            "can",
            "fix",
            "review",
            "issues",
            "are",
            "faced"
        ],
        "Entity": [
            "view",
            "user",
            "error",
            "logs",
            "can",
            "fix",
            "review",
            "issues",
            "being",
            "users",
            "system"
        ]
    },
    {
        "Text": "#G04# As an admin, I want to onboard recycling centers on the platform, so that I can increase information accuracy.",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "centers",
            "can",
            "increase"
        ],
        "Entity": [
            "recycling",
            "centers",
            "platform",
            "can",
            "increase",
            "information",
            "accuracy"
        ]
    },
    {
        "Text": "#G04# As a superuser, I want to update the recycling center information, so that I can provide the latest information about the recycling center.",
        "Persona": [
            " superuser"
        ],
        "Action": [
            "want",
            "update",
            "center",
            "can",
            "provide",
            "center"
        ],
        "Entity": [
            "update",
            "recycling",
            "center",
            "information",
            "can",
            "latest",
            "information",
            "recycling",
            "center"
        ]
    },
    {
        "Text": "#G04# As a superuser, I want to view users' stats, so that I can view in real-time how many users have visited my recycling center information and their recyclable waste.",
        "Persona": [
            " superuser"
        ],
        "Action": [
            "want",
            "view",
            "can",
            "view",
            "have",
            "center",
            "waste"
        ],
        "Entity": [
            "view",
            "can",
            "view",
            "how",
            "many",
            "users",
            "recycling",
            "center",
            "information",
            "waste"
        ]
    },
    {
        "Text": "#G04# As a superuser, I want to reply to user questions, so that I can answer any questions about my recycling center.",
        "Persona": [
            " superuser"
        ],
        "Action": [
            "want",
            "reply",
            "questions",
            "can",
            "answer",
            "questions",
            "center"
        ],
        "Entity": [
            "reply",
            "user",
            "questions",
            "can",
            "answer",
            "questions",
            "recycling",
            "center"
        ]
    },
    {
        "Text": "#G04# As an admin, I want to be able to have a dashboard that shows usage stats and locations, so that I can identify the neighbourhoods with the largest number of drop-offs and to try getting more facilities involved.",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "have",
            "shows",
            "can",
            "identify",
            "number",
            "try"
        ],
        "Entity": [
            "able",
            "dashboard",
            "shows",
            "usage",
            "locations",
            "can",
            "neighbourhoods",
            "number",
            "try",
            "getting",
            "more",
            "facilities"
        ]
    },
    {
        "Text": "#G04# As an admin, I want to be able to communicate directly with facilities, so that I can keep them updated about features we have on our website.",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "communicate",
            "can",
            "keep",
            "updated",
            "features",
            "have"
        ],
        "Entity": [
            "able",
            "facilities",
            "can",
            "keep",
            "features"
        ]
    },
    {
        "Text": "#G04# As a user, I want to be able to browse through the list of facolities and see which ones are environment-friendly, so that I can know for sure my waste is not going to leave a negative ecological footprint.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "browse",
            "list",
            "see",
            "are",
            "can",
            "know",
            "waste",
            "leave",
            "negative"
        ],
        "Entity": [
            "able",
            "browse",
            "list",
            "see",
            "ones",
            "can",
            "know",
            "waste",
            "going",
            "leave",
            "negative",
            "footprint"
        ]
    },
    {
        "Text": "#G04# As a recyclingfacility representative, I want to be able to update my information and the type of material I accept, so that I can avoid any miscommunication with users.",
        "Persona": [
            " recyclingfacility representative"
        ],
        "Action": [
            "want",
            "update",
            "type",
            "accept",
            "can",
            "avoid"
        ],
        "Entity": [
            "able",
            "update",
            "information",
            "type",
            "material",
            "can",
            "users"
        ]
    },
    {
        "Text": "#G04# As a recyclingfacility representative, I want to have access to user stats and schedules, so that I can adjust my hours and/or upgrade equipment and capacity in order to be able to accomodate larger amounts of recyclable materials.",
        "Persona": [
            " recyclingfacility representative"
        ],
        "Action": [
            "want",
            "have",
            "access",
            "schedules",
            "can",
            "adjust",
            "upgrade",
            "order",
            "amounts"
        ],
        "Entity": [
            "access",
            "user",
            "schedules",
            "can",
            "hours",
            "upgrade",
            "equipment",
            "capacity",
            "order",
            "able",
            "amounts",
            "materials"
        ]
    },
    {
        "Text": "#G04# As a recyclingfacility, I want to be able to communicate directly with the site admin and convey any issues or concerns I have, so that they fix them.",
        "Persona": [
            " recyclingfacility"
        ],
        "Action": [
            "want",
            "communicate",
            "site",
            "convey",
            "issues",
            "concerns",
            "have",
            "fix"
        ],
        "Entity": [
            "able",
            "site",
            "admin",
            "issues",
            "concerns",
            "fix"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to edit a dataset I have published, So that I can correct or enhance existing data.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "edit",
            "have",
            "can",
            "correct",
            "enhance"
        ],
        "Entity": [
            "able",
            "edit",
            "can",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to edit the model of data I have already imported, So that I can fix bugs or make enhancements in the API built for my data.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "edit",
            "model",
            "have",
            "can",
            "fix",
            "bugs",
            "make",
            "built"
        ],
        "Entity": [
            "able",
            "edit",
            "model",
            "data",
            "can",
            "fix",
            "bugs",
            "make",
            "enhancements",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to delete a dataset I have published, So that I can remove unwanted data from OpenSpending.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "delete",
            "have",
            "can",
            "remove"
        ],
        "Entity": [
            "able",
            "can",
            "remove",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Platform Administrator, I want to be able to Hide any dataset already added as Public, So that I can maintain Public/Hidden status for other users.",
        "Persona": [
            " Platform Administrator"
        ],
        "Action": [
            "want",
            "hide",
            "can",
            "maintain"
        ],
        "Entity": [
            "able",
            "hide",
            "public",
            "can",
            "status",
            "users"
        ]
    },
    {
        "Text": "#G05# As a Platform Administrator, I want to have a view on all datasets published by all users, So that I can perform management actions on any dataset.",
        "Persona": [
            " Platform Administrator"
        ],
        "Action": [
            "want",
            "have",
            "view",
            "can",
            "perform"
        ],
        "Entity": [
            "view",
            "all",
            "all",
            "users",
            "can",
            "management",
            "actions"
        ]
    },
    {
        "Text": "#G05# As a Platform Administrator, I want to be able to delete any dataset published, So that I can deal with takedown requests, or clean up test datasets.",
        "Persona": [
            " Platform Administrator"
        ],
        "Action": [
            "want",
            "delete",
            "can",
            "deal",
            "requests",
            "clean",
            "test"
        ],
        "Entity": [
            "able",
            "can",
            "deal",
            "requests",
            "clean",
            "test"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to edit the data source of data I have already imported, So that I can fix bugs or make enhancements in the API built for my data.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "edit",
            "have",
            "can",
            "fix",
            "bugs",
            "make",
            "built"
        ],
        "Entity": [
            "able",
            "edit",
            "data",
            "source",
            "data",
            "can",
            "fix",
            "bugs",
            "make",
            "enhancements",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to have the Packager support Constants, So that I can model dimensions that may not exist in the source file.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "have",
            "support",
            "can",
            "model",
            "dimensions",
            "may",
            "exist",
            "file"
        ],
        "Entity": [
            "support",
            "constants",
            "can",
            "model",
            "dimensions",
            "may",
            "source",
            "file"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to import data in Excel, So that I do not have to convert data formats in order to use the data packager.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "import",
            "excel",
            "have",
            "convert",
            "formats",
            "order",
            "use"
        ],
        "Entity": [
            "able",
            "import",
            "data",
            "convert",
            "data",
            "formats",
            "order",
            "use",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to know what my data needs to be able to be visualised on a map, So that I can visualise it on a map.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "know",
            "needs",
            "map",
            "can",
            "map"
        ],
        "Entity": [
            "know",
            "data",
            "needs",
            "able",
            "map",
            "can",
            "map"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to import data in JSON, So that I do not have to convert data formats in order to use the data packager.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "import",
            "have",
            "convert",
            "formats",
            "order",
            "use"
        ],
        "Entity": [
            "able",
            "import",
            "data",
            "convert",
            "data",
            "formats",
            "order",
            "use",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to import data from a Google Spreadsheet, So that I do not have to convert data formats in order to use the data packager.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "import",
            "have",
            "convert",
            "formats",
            "order",
            "use"
        ],
        "Entity": [
            "able",
            "import",
            "data",
            "spreadsheet",
            "convert",
            "data",
            "formats",
            "order",
            "use",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to import data from Fiscal Data Package descriptor file, So that I do not have to convert data formats in order to use the data packager.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "import",
            "package",
            "file",
            "have",
            "convert",
            "formats",
            "order",
            "use"
        ],
        "Entity": [
            "able",
            "import",
            "data",
            "fiscal",
            "data",
            "package",
            "file",
            "convert",
            "data",
            "formats",
            "order",
            "use",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to provide the Platform Administrator with additional GeoJSON sources, So that I can improve the map-based visualisations of my data.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "provide",
            "can",
            "improve"
        ],
        "Entity": [
            "able",
            "platform",
            "administrator",
            "sources",
            "can",
            "improve",
            "visualisations",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to filter, sort and aggregate data by multiple dimensions and measures, So that I can get more granular views on the data.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "filter",
            "sort",
            "aggregate",
            "dimensions",
            "measures",
            "can",
            "get",
            "views"
        ],
        "Entity": [
            "able",
            "filter",
            "sort",
            "aggregate",
            "data",
            "multiple",
            "dimensions",
            "measures",
            "can",
            "more",
            "views",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to download a CSV of the data that is used in any visualisation I am viewing, So that I can use the data in other tools.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "download",
            "can",
            "use",
            "tools"
        ],
        "Entity": [
            "able",
            "data",
            "visualisation",
            "viewing",
            "can",
            "use",
            "data",
            "tools"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to change the display of all monetary measures across a set of currencies, So that I can understand localised amounts in non-localised figures.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "change",
            "display",
            "measures",
            "set",
            "can",
            "understand",
            "localised",
            "amounts",
            "figures"
        ],
        "Entity": [
            "able",
            "change",
            "display",
            "all",
            "measures",
            "set",
            "currencies",
            "can",
            "amounts",
            "figures"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to see textual descriptions that accompany embedded visualisations, So that I can more easily understand what I am viewing.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "see",
            "accompany",
            "embedded",
            "can",
            "understand"
        ],
        "Entity": [
            "see",
            "descriptions",
            "visualisations",
            "can",
            "more",
            "viewing"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to share a view state as a URL to social networks, So that I can share data that I have found with others.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "share",
            "view",
            "state",
            "networks",
            "can",
            "share",
            "have",
            "found"
        ],
        "Entity": [
            "able",
            "share",
            "view",
            "state",
            "social",
            "networks",
            "can",
            "share",
            "data",
            "found"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to download an image ofa particular view state, So that I can use it offline.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "download",
            "image",
            "view",
            "state",
            "can",
            "use"
        ],
        "Entity": [
            "able",
            "image",
            "particular",
            "view",
            "state",
            "can",
            "use"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to share an image of a particular view state to the social networks that support this, So that I can provide richer context in those communication channels for data I am sharing.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "share",
            "image",
            "view",
            "state",
            "networks",
            "support",
            "can",
            "provide",
            "channels"
        ],
        "Entity": [
            "able",
            "share",
            "image",
            "particular",
            "view",
            "state",
            "social",
            "networks",
            "support",
            "can",
            "context",
            "communication",
            "channels",
            "data",
            "sharing"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to have stepped zoom on map visualisations, So that I can have better control over the navigation experience inside a map view.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "have",
            "stepped",
            "zoom",
            "map",
            "can",
            "have",
            "better",
            "control",
            "experience",
            "map",
            "view"
        ],
        "Entity": [
            "able",
            "zoom",
            "map",
            "visualisations",
            "can",
            "better",
            "control",
            "over",
            "navigation",
            "experience",
            "inside",
            "map",
            "view"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to have consistent use of colour on map visualisations, So that I can better understand the visual logic of the map view.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "have",
            "use",
            "colour",
            "map",
            "can",
            "better",
            "understand",
            "map",
            "view"
        ],
        "Entity": [
            "use",
            "colour",
            "map",
            "visualisations",
            "can",
            "better",
            "visual",
            "logic",
            "map",
            "view"
        ]
    },
    {
        "Text": "#G05# As a Developer, I want to be able to customise the Brand Name and Icon, and Primary Color of all frontend Javascript apps, So that I can customise the branding for my own needs.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "customise",
            "brand",
            "name",
            "color",
            "can",
            "customise",
            "own",
            "needs"
        ],
        "Entity": [
            "able",
            "brand",
            "name",
            "icon",
            "primary",
            "color",
            "all",
            "can",
            "branding",
            "needs"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to understand if a user is a Publisher, So that I can offer functionality based on Dataset Publisher privileges.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "understand",
            "can",
            "offer",
            "based",
            "privileges"
        ],
        "Entity": [
            "able",
            "user",
            "publisher",
            "can",
            "offer",
            "publisher",
            "privileges"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to understand if a user is an Administrator, So that I can offer functionality based on Platform Administration privileges.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "understand",
            "can",
            "offer",
            "based",
            "privileges"
        ],
        "Entity": [
            "able",
            "user",
            "administrator",
            "can",
            "offer",
            "platform",
            "administration",
            "privileges"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to get bordering regions|cities when I query a region|city, So that I can provider wider visual context for mapping visualisations.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "get",
            "query",
            "can"
        ],
        "Entity": [
            "able",
            "query",
            "can",
            "provider",
            "visual",
            "context",
            "mapping",
            "visualisations"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to dynamically request polygons based on the query made, So that I can provide maps that match the query.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "request",
            "based",
            "query",
            "made",
            "can",
            "provide",
            "maps",
            "match",
            "query"
        ],
        "Entity": [
            "able",
            "request",
            "polygons",
            "query",
            "can",
            "maps",
            "match",
            "query"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to have a flexible API using HASC codes for countries, regions and cities, So that I can visualise budget data on maps.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "have",
            "using",
            "codes",
            "can",
            "budget",
            "maps"
        ],
        "Entity": [
            "using",
            "codes",
            "countries",
            "regions",
            "cities",
            "can",
            "budget",
            "data",
            "maps"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to get a CSV output of any cube-based query, So that I can use work with tools that read CSV.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "get",
            "output",
            "query",
            "can",
            "use",
            "work",
            "tools",
            "read"
        ],
        "Entity": [
            "able",
            "output",
            "query",
            "can",
            "use",
            "work",
            "tools",
            "read"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to get a set of monetary measures transferred to different currencies, So that I can use this in scenarios that might enable comparison by normalisation.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "get",
            "set",
            "measures",
            "transferred",
            "can",
            "use",
            "might",
            "enable"
        ],
        "Entity": [
            "able",
            "set",
            "measures",
            "currencies",
            "can",
            "use",
            "scenarios",
            "might",
            "comparison",
            "normalisation"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to use metadata to get results from multiple datasets, So that I can build user experiences based on more than one dataset more easily.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "use",
            "get",
            "results",
            "can",
            "build",
            "experiences",
            "based"
        ],
        "Entity": [
            "able",
            "use",
            "results",
            "multiple",
            "can",
            "build",
            "user",
            "experiences",
            "more",
            "one",
            "more"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to use data to get results from multiple datasets, So that I can build user experiences based on more than one dataset more easily.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "use",
            "get",
            "results",
            "can",
            "build",
            "experiences",
            "based"
        ],
        "Entity": [
            "able",
            "use",
            "data",
            "results",
            "multiple",
            "can",
            "build",
            "user",
            "experiences",
            "more",
            "one",
            "more"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to normalise measures by population, So that I work with datasets in reference to their contextual constraints.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "normalise",
            "measures",
            "work",
            "reference"
        ],
        "Entity": [
            "able",
            "measures",
            "population",
            "work",
            "reference",
            "constraints"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to normalise measures by geographical area, So that I work with datasets in reference to their contextual constraints.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "normalise",
            "measures",
            "work",
            "reference"
        ],
        "Entity": [
            "able",
            "measures",
            "area",
            "work",
            "reference",
            "constraints"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to normalise measures by GDP, so I work with datasets in reference to their contextual constraints.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "normalise",
            "measures",
            "work",
            "reference"
        ],
        "Entity": [
            "able",
            "measures",
            "work",
            "reference",
            "constraints"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to normalise measures by GINI and related socioeconomic indexes, So that I work with datasets in reference to their contextual constraints.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "normalise",
            "measures",
            "indexes",
            "work",
            "reference"
        ],
        "Entity": [
            "able",
            "measures",
            "indexes",
            "work",
            "reference",
            "constraints"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to get a relative percentage of a measure to the total of the dataset it comes from, So that I can build alternative displays of the data.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "get",
            "measure",
            "total",
            "comes",
            "can",
            "build",
            "displays"
        ],
        "Entity": [
            "able",
            "relative",
            "percentage",
            "measure",
            "total",
            "comes",
            "can",
            "build",
            "alternative",
            "displays",
            "data"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to persistently store visualisation state in the database, So that such can be shared more easily and contribute to a visualisation gallery.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "store",
            "state",
            "can",
            "contribute"
        ],
        "Entity": [
            "able",
            "store",
            "visualisation",
            "state",
            "database",
            "can",
            "more",
            "visualisation",
            "gallery"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to have my dataset update automatically as the source file/files changes, So that OpenSpending always shows current data.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "have",
            "update",
            "changes",
            "shows"
        ],
        "Entity": [
            "update",
            "source",
            "changes",
            "shows",
            "current",
            "data"
        ]
    },
    {
        "Text": "#G05# As an OpenSpending Community Member, I want to have a blog that highlights any and all projects in the open fiscal space, So that I can relate to openspending.org as the central hub of fiscal openness.",
        "Persona": [
            " OpenSpending Community Member"
        ],
        "Action": [
            "want",
            "have",
            "highlights",
            "projects",
            "open",
            "space",
            "can",
            "relate"
        ],
        "Entity": [
            "highlights",
            "all",
            "projects",
            "open",
            "fiscal",
            "space",
            "can",
            "central",
            "hub",
            "fiscal",
            "openness"
        ]
    },
    {
        "Text": "#G05# As a User, I want to be able to set my own username, So that my data is more easily discoverable.",
        "Persona": [
            " User"
        ],
        "Action": [
            "want",
            "set",
            "own"
        ],
        "Entity": [
            "able",
            "set",
            "data",
            "more"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to add a dataset in a Hidden state, So that I can work on a dataset before having it discoverable via OpenSpending user interfaces.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "add",
            "hidden",
            "state",
            "can",
            "work"
        ],
        "Entity": [
            "able",
            "state",
            "can",
            "work",
            "user",
            "interfaces"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to Hide a dataset that I have already added as Public, So that I can fix my mistakes or have a dataset primarily for my own use.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "hide",
            "have",
            "can",
            "fix",
            "mistakes",
            "have",
            "own",
            "use"
        ],
        "Entity": [
            "able",
            "hide",
            "public",
            "can",
            "fix",
            "mistakes",
            "use"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to have a view on all the datasets I have published, So that I can perform management actions on my own datasets.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "have",
            "view",
            "have",
            "can",
            "perform",
            "own"
        ],
        "Entity": [
            "view",
            "all",
            "can",
            "management",
            "actions"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to have a functioning Python Client, So that I can add data to the datastore in bulk from the command line or my own programs.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "add",
            "bulk",
            "command",
            "line",
            "own",
            "programs"
        ],
        "Entity": [
            "functioning",
            "python",
            "client",
            "can",
            "data",
            "bulk",
            "command",
            "line",
            "programs"
        ]
    },
    {
        "Text": "#G05# As an OpenSpending Community Member, I want to have an app where I can find examples of use of fiscal data visualisations, So that I can find guidance in creating my own with Open Spending.",
        "Persona": [
            " OpenSpending Community Member"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "find",
            "examples",
            "use",
            "can",
            "find",
            "creating",
            "own",
            "open",
            "spending"
        ],
        "Entity": [
            "where",
            "can",
            "find",
            "examples",
            "use",
            "fiscal",
            "data",
            "visualisations",
            "can",
            "find",
            "guidance",
            "open",
            "spending"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to know if my CSV file is valid, So that I can fix possible data issues before publishing it on Open Spending.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "know",
            "file",
            "can",
            "fix",
            "issues",
            "open",
            "spending"
        ],
        "Entity": [
            "know",
            "file",
            "can",
            "fix",
            "possible",
            "data",
            "issues",
            "publishing",
            "open",
            "spending"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to search any dataset published and publicly accessible by their title and metadata, So that I can find the datasets I'm interested in.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "search",
            "title",
            "can",
            "find"
        ],
        "Entity": [
            "able",
            "search",
            "title",
            "can",
            "find"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to visualize by default in treemap, bubble tree, map and pivot table the most recent year when my dataset contain multiple years, So that I'm not confused with the amounts.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "visualize",
            "default",
            "bubble",
            "tree",
            "map",
            "pivot",
            "table",
            "contain",
            "confused",
            "amounts"
        ],
        "Entity": [
            "default",
            "bubble",
            "tree",
            "map",
            "pivot",
            "table",
            "most",
            "year",
            "multiple",
            "years",
            "amounts"
        ]
    },
    {
        "Text": "#G05# As an API user, I want to be able to change the colors of the embedded visualisations in my own platform, So that I can customize the visualisations.",
        "Persona": [
            " API user"
        ],
        "Action": [
            "want",
            "change",
            "colors",
            "embedded",
            "own",
            "can",
            "customize"
        ],
        "Entity": [
            "able",
            "change",
            "colors",
            "visualisations",
            "platform",
            "can",
            "visualisations"
        ]
    },
    {
        "Text": "#G05# As an API user, I want to be able to change some of the styling of the embedded Viewer in my own platform, So that I can brand it to my own organisation's color scheme.",
        "Persona": [
            " API user"
        ],
        "Action": [
            "want",
            "change",
            "styling",
            "embedded",
            "own",
            "can",
            "brand",
            "own",
            "color",
            "scheme"
        ],
        "Entity": [
            "able",
            "change",
            "viewer",
            "platform",
            "can",
            "brand",
            "color",
            "scheme"
        ]
    },
    {
        "Text": "#G05# As a Platform administrator, I want to be able to translate the data types hierarchies of the Viewer while in embed mode, So that my users can understand the interface in their native language.",
        "Persona": [
            " Platform administrator"
        ],
        "Action": [
            "want",
            "translate",
            "types",
            "while",
            "embed",
            "can",
            "understand"
        ],
        "Entity": [
            "able",
            "data",
            "types",
            "hierarchies",
            "viewer",
            "while",
            "mode",
            "users",
            "can",
            "interface",
            "native",
            "language"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to get a Data Package into Node, so that I can start using the data for doing analysis and visualizations.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "node",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get a Data Package into Julia in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I want to add type information to my data, so that it is more useful to others and can be used better with tools like visualization programs. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "add",
            "type",
            "can",
            "better",
            "tools",
            "like",
            "programs"
        ],
        "Entity": [
            "type",
            "information",
            "data",
            "more",
            "useful",
            "can",
            "better",
            "tools",
            "like",
            "visualization",
            "programs"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I want to be able to provide a visualization of data in the Data Package, so that I can provide my analysis and show my work to users of the data. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "provide",
            "package",
            "can",
            "provide",
            "show",
            "work"
        ],
        "Entity": [
            "able",
            "visualization",
            "data",
            "data",
            "package",
            "can",
            "analysis",
            "show",
            "work",
            "users",
            "data"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to be able to save new visualizations, so that I can share them with others or include them in the Data Package. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "save",
            "can",
            "share",
            "include",
            "package"
        ],
        "Entity": [
            "able",
            "save",
            "visualizations",
            "can",
            "share",
            "data",
            "package"
        ]
    },
    {
        "Text": "#G08# As a ResearcherPublisher, I want to know that my data conforms to its Data Package profile, so that I can feel trust in the validity and usefulness of the data. ",
        "Persona": [
            " ResearcherPublisher"
        ],
        "Action": [
            "want",
            "know",
            "conforms",
            "package",
            "profile",
            "can",
            "feel",
            "trust"
        ],
        "Entity": [
            "know",
            "data",
            "data",
            "package",
            "profile",
            "can",
            "feel",
            "trust",
            "validity",
            "usefulness",
            "data"
        ]
    },
    {
        "Text": "#G08# As a ResearcherPublisher, I want to understand the ways in which my data is invalid, so that I can know how to fix it. ",
        "Persona": [
            " ResearcherPublisher"
        ],
        "Action": [
            "want",
            "understand",
            "invalid",
            "can",
            "know",
            "fix"
        ],
        "Entity": [
            "ways",
            "data",
            "invalid",
            "can",
            "know",
            "how",
            "fix"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get a Data Package into R in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get a Data Package into Excel in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "excel",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get a Data Package into SPSS in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get a Data Package into STATA in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to be able to translate my EML dataset to a Data Package, so that I can benefit from the wide array of tools available for Data Packages. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "translate",
            "package",
            "can",
            "benefit",
            "array",
            "tools",
            "packages"
        ],
        "Entity": [
            "able",
            "data",
            "package",
            "can",
            "benefit",
            "wide",
            "array",
            "tools",
            "data",
            "packages"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get a Data Package into LibreOffice/OpenOffice in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to get a Data Package into Python in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "python",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want a jQuery plugin for Core Data Packages, so that I can use it to apply to form control that uses a core dataset for autocompletion. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "core",
            "packages",
            "can",
            "use",
            "apply",
            "form",
            "control",
            "uses",
            "core"
        ],
        "Entity": [
            "core",
            "data",
            "packages",
            "can",
            "use",
            "form",
            "control",
            "uses",
            "core"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get my Excel spreadsheet into a Data Package, so that I can benefit from better tooling and standardization. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "get",
            "excel",
            "package",
            "can",
            "benefit",
            "better"
        ],
        "Entity": [
            "spreadsheet",
            "data",
            "package",
            "can",
            "benefit",
            "better",
            "tooling",
            "standardization"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to do exploratory data analysis in R and operationalize that analysis in Python, so that I can use the best tool for the job.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "can",
            "use",
            "best",
            "tool",
            "job"
        ],
        "Entity": [
            "data",
            "analysis",
            "analysis",
            "python",
            "can",
            "use",
            "best",
            "tool",
            "job"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to get a Data Package into Clojure in seconds, so that I can start using the data in doing analysis and visualizations. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to get a Data Package into Julia in seconds, so that I can start using the data in doing analysis and visualizations. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to get a Data Package into C++ in seconds, so that I can start using the data in doing analysis and visualizations. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Machine Learning expert, I would like to package ML datasets as data packages, so that I can easily import them into my ML platform, so that I can start using the data in doing analysis. ",
        "Persona": [
            " Machine Learning expert"
        ],
        "Action": [
            "would",
            "like",
            "package",
            "packages",
            "can",
            "import",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "like",
            "package",
            "data",
            "packages",
            "can",
            "import",
            "platform",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want an Elasticsearch integration, so that I can integrate data-packaged data with pipelines that use Elasticsearch. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "can",
            "integrate",
            "pipelines",
            "use"
        ],
        "Entity": [
            "integration",
            "can",
            "data",
            "pipelines",
            "use"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want an SPSS integration, so that I can integrate data-packaged data with pipelines that use SPSS. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "can",
            "integrate",
            "pipelines",
            "use"
        ],
        "Entity": [
            "integration",
            "can",
            "data",
            "pipelines",
            "use"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want an EPrints integration, so that I can integrate data-packaged data with pipelines that use EPrints. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "can",
            "integrate",
            "pipelines",
            "use"
        ],
        "Entity": [
            "integration",
            "can",
            "data",
            "pipelines",
            "use"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want a Mongo integration, so that I can integrate data-packaged data with pipelines that use Mongo. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "can",
            "integrate",
            "pipelines",
            "use"
        ],
        "Entity": [
            "mongo",
            "integration",
            "can",
            "data",
            "pipelines",
            "use",
            "mongo"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want a DAT integration, so that I can integrate data-packaged data with pipelines that use DAT. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "can",
            "integrate",
            "pipelines",
            "use"
        ],
        "Entity": [
            "integration",
            "can",
            "data",
            "pipelines",
            "use"
        ]
    },
    {
        "Text": "#G08# As a ResearcherGovernment Publisher, I want to add general reference data to my narrow dataset, so that my dataset is more useful. ",
        "Persona": [
            " ResearcherGovernment Publisher"
        ],
        "Action": [
            "want",
            "add",
            "general",
            "reference",
            "narrow"
        ],
        "Entity": [
            "general",
            "reference",
            "data",
            "narrow",
            "more",
            "useful"
        ]
    },
    {
        "Text": "#G08# As a ResearcherGovernment Publisher, I want to add general country names to my dataset that only contains country codes, so that my dataset is more readable. ",
        "Persona": [
            " ResearcherGovernment Publisher"
        ],
        "Action": [
            "want",
            "add",
            "general",
            "names",
            "contains",
            "codes"
        ],
        "Entity": [
            "general",
            "country",
            "names",
            "country",
            "codes",
            "more"
        ]
    },
    {
        "Text": "#G08# As a ResearcherGovernment Publisher, I want to add reference data on inflation to my spending dataset, so that the spending lines in my dataset is more understandable. ",
        "Persona": [
            " ResearcherGovernment Publisher"
        ],
        "Action": [
            "want",
            "add",
            "reference",
            "spending",
            "spending",
            "lines"
        ],
        "Entity": [
            "reference",
            "data",
            "inflation",
            "spending",
            "spending",
            "lines",
            "more"
        ]
    },
    {
        "Text": "#G08# As a ResearcherGovernment Publisher, I want to map lines in my dataset using geographic data in my dataset, so that my dataset is more engaging for non-technical users. ",
        "Persona": [
            " ResearcherGovernment Publisher"
        ],
        "Action": [
            "want",
            "map",
            "lines",
            "using"
        ],
        "Entity": [
            "map",
            "lines",
            "using",
            "data",
            "more",
            "users"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to be able to reference a remote-controlled vocabulary for my dataset, so that I can be sure that column of my dataset are valid against a single shard list of terms. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "reference",
            "can",
            "are",
            "single",
            "list",
            "terms"
        ],
        "Entity": [
            "able",
            "reference",
            "vocabulary",
            "can",
            "column",
            "single",
            "shard",
            "list",
            "terms"
        ]
    },
    {
        "Text": "#G08# As a developer, I want an DSpace integration, so that I can integrate data-packaged data with pipelines that use Dspace. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "can",
            "integrate",
            "pipelines",
            "use"
        ],
        "Entity": [
            "integration",
            "can",
            "data",
            "pipelines",
            "use"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want Feather integration, so that I can integrate data-packaged data with pipelines that use Feather. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "feather",
            "can",
            "integrate",
            "pipelines",
            "use",
            "feather"
        ],
        "Entity": [
            "feather",
            "integration",
            "can",
            "data",
            "pipelines",
            "use",
            "feather"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want HDF5 integration, so that I can integrate data-packaged data with pipelines that use HDF5.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "can",
            "integrate",
            "pipelines",
            "use"
        ],
        "Entity": [
            "integration",
            "can",
            "data",
            "pipelines",
            "use"
        ]
    },
    {
        "Text": "#G08# As a Researcher, working with data, I want an Microsoft Power BI integration, so that I can import datasets without downloading them locally. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "power",
            "can",
            "import"
        ],
        "Entity": [
            "working",
            "data",
            "power",
            "integration",
            "can",
            "import"
        ]
    },
    {
        "Text": "#G08# As a ResearcherPublisher, I want an integration with Zenodo, so that when I store my dataset in GitHub, I don’t have to retype descriptive information about my dataset. ",
        "Persona": [
            " ResearcherPublisher"
        ],
        "Action": [
            "want",
            "store",
            "have",
            "retype"
        ],
        "Entity": [
            "integration",
            "store",
            "information"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I would like an integration with Open Refine, so that I can output cleaned Data Packages. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "would",
            "like",
            "open",
            "refine",
            "can",
            "output",
            "packages"
        ],
        "Entity": [
            "like",
            "integration",
            "open",
            "can",
            "output",
            "data",
            "packages"
        ]
    },
    {
        "Text": "#G08# As a ResearcherPublisher, I want to publish Data Packages to CKAN, so that my data is findable, and I can have a data API. ",
        "Persona": [
            " ResearcherPublisher"
        ],
        "Action": [
            "want",
            "publish",
            "packages",
            "can",
            "have"
        ],
        "Entity": [
            "data",
            "packages",
            "data",
            "can",
            "data"
        ]
    },
    {
        "Text": "#G08# As a ResearcherDeveloper, would like the ability import/export from MS-SQL, so that I can use Data Packages in workflows that involve MS-SQL. ",
        "Persona": [
            " ResearcherDeveloper"
        ],
        "Action": [
            "would",
            "like",
            "can",
            "use",
            "packages",
            "involve"
        ],
        "Entity": [
            "like",
            "ability",
            "can",
            "use",
            "data",
            "packages"
        ]
    },
    {
        "Text": "#G08# As a Researcher, working with data in NetCDF, I want NetCDF integration, so that I can store my data in plaintext while still retaining its metadata. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "can",
            "store",
            "while",
            "still"
        ],
        "Entity": [
            "working",
            "data",
            "integration",
            "can",
            "store",
            "data",
            "while",
            "still"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want an integration with https://data.mendeley.com/, so that I can validate my data upon ingest to the service.",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "can",
            "validate",
            "ingest",
            "service"
        ],
        "Entity": [
            "integration",
            "can",
            "data",
            "service"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I would like an integration with Excel, so that I can output cleaned Data Packages. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "would",
            "like",
            "excel",
            "can",
            "output",
            "packages"
        ],
        "Entity": [
            "like",
            "integration",
            "can",
            "output",
            "data",
            "packages"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I want to store my data quickly and easily online. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "store"
        ],
        "Entity": [
            "store",
            "data"
        ]
    },
    {
        "Text": "#G08# As a Repository Manager, I want a tool that makes it easy for researchers/ users to add basic metadata to their research data, so that it is more findable and therefore useful. ",
        "Persona": [
            " Repository Manager"
        ],
        "Action": [
            "want",
            "tool",
            "makes",
            "easy",
            "add",
            "research"
        ],
        "Entity": [
            "tool",
            "makes",
            "researchers",
            "users",
            "basic",
            "research",
            "data",
            "more",
            "useful"
        ]
    },
    {
        "Text": "#G08# As a ResearcherPublisher, I want validate my data with a minimum of clicks, so that I can feel trust in the validity and usefulness of the data. ",
        "Persona": [
            " ResearcherPublisher"
        ],
        "Action": [
            "want",
            "validate",
            "clicks",
            "can",
            "feel",
            "trust"
        ],
        "Entity": [
            "data",
            "minimum",
            "clicks",
            "can",
            "feel",
            "trust",
            "validity",
            "usefulness",
            "data"
        ]
    },
    {
        "Text": "#G08# As a publisher, I want to be able to check that every time I update my data it is still good, so that I can catch errors early and store reliable data. ",
        "Persona": [
            " publisher"
        ],
        "Action": [
            "want",
            "check",
            "time",
            "update",
            "still",
            "can",
            "catch",
            "store"
        ],
        "Entity": [
            "able",
            "check",
            "time",
            "update",
            "data",
            "still",
            "good",
            "can",
            "catch",
            "errors",
            "store",
            "data"
        ]
    },
    {
        "Text": "#G08# As a DeveloperWrangler, I want to use a command line tool that allows met to validate data, so that I can feel trust in the validity and usefulness of the data quickly and in the context of my command line workflow. ",
        "Persona": [
            " DeveloperWrangler"
        ],
        "Action": [
            "want",
            "use",
            "command",
            "line",
            "tool",
            "allows",
            "met",
            "validate",
            "can",
            "feel",
            "trust",
            "command",
            "line"
        ],
        "Entity": [
            "use",
            "command",
            "line",
            "tool",
            "data",
            "can",
            "feel",
            "trust",
            "validity",
            "usefulness",
            "data",
            "context",
            "command",
            "line"
        ]
    },
    {
        "Text": "#G08# As a developer, I want an online service that is connected to my data repository that validates data on update, so that I can delegate data validation to a third party. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "service",
            "validates",
            "update",
            "can",
            "delegate",
            "party"
        ],
        "Entity": [
            "service",
            "data",
            "repository",
            "data",
            "update",
            "can",
            "delegate",
            "data",
            "validation",
            "third",
            "party"
        ]
    },
    {
        "Text": "#G08# As a government Publisher, I want to make it easy to prove that our published data is valid, so that I can claim that we are living up to our transparency commitments. ",
        "Persona": [
            " government Publisher"
        ],
        "Action": [
            "want",
            "make",
            "easy",
            "prove",
            "can",
            "claim",
            "are"
        ],
        "Entity": [
            "make",
            "data",
            "can",
            "claim",
            "living",
            "transparency",
            "commitments"
        ]
    },
    {
        "Text": "#G08# As a Civic Tech Activist, I want to make it easy to assess the quality of data stored by the government, so that I can make sure that government is living up to its transparency commitments. ",
        "Persona": [
            " Civic Tech Activist"
        ],
        "Action": [
            "want",
            "make",
            "easy",
            "assess",
            "stored",
            "can",
            "make"
        ],
        "Entity": [
            "make",
            "quality",
            "data",
            "government",
            "can",
            "make",
            "government",
            "living",
            "transparency",
            "commitments"
        ]
    },
    {
        "Text": "#G08# As a publisher, I want to embed an interactive preview of my data on my site, so that users can be encouraged that this is the correct data for them. ",
        "Persona": [
            " publisher"
        ],
        "Action": [
            "want",
            "embed",
            "preview",
            "site",
            "can",
            "encouraged",
            "correct"
        ],
        "Entity": [
            "preview",
            "data",
            "site",
            "users",
            "can",
            "data"
        ]
    },
    {
        "Text": "#G08# As a publisher, I want to embed a preview button on my site, so that users can preview the data and be encouraged that this is the correct data for them.",
        "Persona": [
            " publisher"
        ],
        "Action": [
            "want",
            "embed",
            "preview",
            "button",
            "site",
            "can",
            "preview",
            "encouraged",
            "correct"
        ],
        "Entity": [
            "preview",
            "button",
            "site",
            "users",
            "can",
            "preview",
            "data",
            "data"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I want to know how many users have previewed a dataset, so that I know how interest in a dataset relates to its actual download numbers. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "know",
            "have",
            "know",
            "interest",
            "relates",
            "download",
            "numbers"
        ],
        "Entity": [
            "know",
            "how",
            "many",
            "users",
            "know",
            "how",
            "interest",
            "numbers"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to customize an existing wizard for my specific type of data, so that I can give my users a great user experience.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "customize",
            "type",
            "can",
            "give",
            "experience"
        ],
        "Entity": [
            "wizard",
            "specific",
            "type",
            "data",
            "can",
            "give",
            "users",
            "great",
            "user",
            "experience"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I want to add useful metadata or add in new data columns to make the dataset more useful. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "add",
            "add",
            "make"
        ],
        "Entity": [
            "useful",
            "data",
            "columns",
            "make",
            "more",
            "useful"
        ]
    },
    {
        "Text": "#G08# As a publisher, I want to package reproducible steps to get a certain data state, so my methodology is transparent and can be rerun by others. ",
        "Persona": [
            " publisher"
        ],
        "Action": [
            "want",
            "package",
            "steps",
            "get",
            "state",
            "can",
            "rerun"
        ],
        "Entity": [
            "package",
            "steps",
            "data",
            "state",
            "methodology",
            "can",
            "rerun"
        ]
    },
    {
        "Text": "#G08# As a DeveloperDataWrangler, I want to store my Data Package in GitHub and have it automatically stored into CKAN, so that I get a data API and my dataset is listed in a relevant catalog. ",
        "Persona": [
            " DeveloperDataWrangler"
        ],
        "Action": [
            "want",
            "store",
            "package",
            "have",
            "stored",
            "get",
            "catalog"
        ],
        "Entity": [
            "store",
            "data",
            "package",
            "data",
            "catalog"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want a tool that can generate basic statistics about a dataset, so that I can get a quick preview of the data. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "tool",
            "can",
            "generate",
            "can",
            "get",
            "preview"
        ],
        "Entity": [
            "tool",
            "can",
            "basic",
            "statistics",
            "can",
            "quick",
            "preview",
            "data"
        ]
    },
    {
        "Text": "#G08# As a DeveloperPublisher, I want a tool to create an embeddable data summary via iframe, so that I can embed data summaries across sites. ",
        "Persona": [
            " DeveloperPublisher"
        ],
        "Action": [
            "want",
            "tool",
            "create",
            "can",
            "embed",
            "sites"
        ],
        "Entity": [
            "tool",
            "data",
            "summary",
            "can",
            "data",
            "summaries",
            "sites"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want an app that generates an OpenRefine reconciliation API endpoint from a Tabular Data Package, so that I can use it to clean messy data. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "generates",
            "package",
            "can",
            "use",
            "clean"
        ],
        "Entity": [
            "reconciliation",
            "data",
            "package",
            "can",
            "use",
            "clean",
            "data"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want an app that create proxy Data Packages for well know and reliable data, sources, so that I can load high quality data using Data Package tooling. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "create",
            "packages",
            "well",
            "know",
            "can",
            "load",
            "using",
            "package"
        ],
        "Entity": [
            "proxy",
            "data",
            "packages",
            "well",
            "know",
            "data",
            "sources",
            "can",
            "load",
            "high",
            "quality",
            "data",
            "using",
            "data",
            "package",
            "tooling"
        ]
    },
    {
        "Text": "#G08# As a RepositoryManagerResearcher, I want an app that acts as a match-making service for packaging data, so that owners are paired with data packagers. ",
        "Persona": [
            " RepositoryManagerResearcher"
        ],
        "Action": [
            "want",
            "acts",
            "service",
            "are"
        ],
        "Entity": [
            "acts",
            "service",
            "packaging",
            "data",
            "owners",
            "data"
        ]
    },
    {
        "Text": "#G08# As a developer, I would like to create a web socket protocol for Frictionless data tools, so that I can easily use data packages with additional data analysis tools. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "would",
            "like",
            "create",
            "web",
            "socket",
            "tools",
            "can",
            "use",
            "packages",
            "tools"
        ],
        "Entity": [
            "like",
            "web",
            "socket",
            "protocol",
            "data",
            "tools",
            "can",
            "use",
            "data",
            "packages",
            "data",
            "analysis",
            "tools"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I would like a tool to check data availability persistence after publication. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "would",
            "like",
            "tool",
            "check"
        ],
        "Entity": [
            "like",
            "tool",
            "check",
            "data",
            "availability",
            "persistence",
            "publication"
        ]
    },
    {
        "Text": "#G08# As a ResearcherPublisher, I want to specify the funding that contributed to the creation of a given dataset, so that funding agencies can identify the funding, source for a given dataset. ",
        "Persona": [
            " ResearcherPublisher"
        ],
        "Action": [
            "want",
            "specify",
            "contributed",
            "given",
            "can",
            "identify",
            "given"
        ],
        "Entity": [
            "funding",
            "creation",
            "given",
            "funding",
            "agencies",
            "can",
            "funding",
            "source",
            "given"
        ]
    },
    {
        "Text": "#G08# As a ResearcherPublisher, I want to add a DOI to a dataset, so that I can cite it in papers stored  with the data. ",
        "Persona": [
            " ResearcherPublisher"
        ],
        "Action": [
            "want",
            "add",
            "can",
            "cite",
            "papers",
            "stored"
        ],
        "Entity": [
            "can",
            "papers",
            "data"
        ]
    },
    {
        "Text": "#G10# As a site member, I want to describe myself on my own page in a semi-structured way, so that others can learn about me.",
        "Persona": [
            " site member"
        ],
        "Action": [
            "want",
            "describe",
            "own",
            "page",
            "can",
            "learn"
        ],
        "Entity": [
            "page",
            "way",
            "can"
        ]
    },
    {
        "Text": "#G10# As a site member, I want to fill out an application to become a Certified Scrum Practitioner, so that I can earn that designation.",
        "Persona": [
            " site member"
        ],
        "Action": [
            "want",
            "fill",
            "out",
            "become",
            "scrum",
            "can",
            "earn"
        ],
        "Entity": [
            "fill",
            "out",
            "application",
            "scrum",
            "practitioner",
            "can",
            "designation"
        ]
    },
    {
        "Text": "#G10# As a Practitioner, I want to include additional details about me in my profile page, so that I can showcase my experience.",
        "Persona": [
            " Practitioner"
        ],
        "Action": [
            "want",
            "include",
            "details",
            "profile",
            "page",
            "can",
            "showcase",
            "experience"
        ],
        "Entity": [
            "details",
            "profile",
            "page",
            "can",
            "showcase",
            "experience"
        ]
    },
    {
        "Text": "#G10# As a site member, I want to fill out an application to become a Certified Scrum Trainer, so that I can teach CSM and CSPO courses and certify others.",
        "Persona": [
            " site member"
        ],
        "Action": [
            "want",
            "fill",
            "out",
            "become",
            "scrum",
            "can",
            "teach",
            "courses",
            "certify"
        ],
        "Entity": [
            "fill",
            "out",
            "application",
            "scrum",
            "trainer",
            "can",
            "teach",
            "courses"
        ]
    },
    {
        "Text": "#G10# As a Trainer, I want to include additional details in my profile page about me, so that others can learn about me and decide if I am the right trainer for them.",
        "Persona": [
            " Trainer"
        ],
        "Action": [
            "want",
            "include",
            "details",
            "profile",
            "page",
            "can",
            "learn",
            "decide",
            "right"
        ],
        "Entity": [
            "details",
            "profile",
            "page",
            "can",
            "right",
            "trainer"
        ]
    },
    {
        "Text": "#G10# As a Practitioner, I want to write an article for the site with a small graphic shown with the article showing my CSP or CST status, so that others know my certifications when reading.",
        "Persona": [
            " Practitioner"
        ],
        "Action": [
            "want",
            "write",
            "article",
            "site",
            "shown",
            "article",
            "know"
        ],
        "Entity": [
            "article",
            "site",
            "small",
            "article",
            "showing",
            "status",
            "know",
            "certifications",
            "reading"
        ]
    },
    {
        "Text": "#G10# As a trainer, I want to list my upcoming classes in my profile and include a link to a detailed page about each, so that prospective attendees can find my courses.",
        "Persona": [
            " trainer"
        ],
        "Action": [
            "want",
            "list",
            "classes",
            "profile",
            "include",
            "link",
            "page",
            "can",
            "find",
            "courses"
        ],
        "Entity": [
            "list",
            "classes",
            "profile",
            "link",
            "page",
            "can",
            "find",
            "courses"
        ]
    },
    {
        "Text": "#G10# As a site member, I want to view the profiles of other members, so that I can find others I might want to connect with.",
        "Persona": [
            " site member"
        ],
        "Action": [
            "want",
            "view",
            "profiles",
            "can",
            "find",
            "might",
            "want",
            "connect"
        ],
        "Entity": [
            "view",
            "profiles",
            "members",
            "can",
            "find",
            "might"
        ]
    },
    {
        "Text": "#G10# As a site member, I want to search for profiles based on a few fields, so that I can find others I might want to connect with.",
        "Persona": [
            " site member"
        ],
        "Action": [
            "want",
            "search",
            "profiles",
            "based",
            "fields",
            "can",
            "find",
            "might",
            "want",
            "connect"
        ],
        "Entity": [
            "search",
            "profiles",
            "few",
            "fields",
            "can",
            "find",
            "might"
        ]
    },
    {
        "Text": "#G10# As a site member, I want to mark my profile as private in which case only my name will appear, so that no one can learn things about me I don't want shared.",
        "Persona": [
            " site member"
        ],
        "Action": [
            "want",
            "mark",
            "profile",
            "case",
            "name",
            "will",
            "appear",
            "can",
            "learn",
            "don't",
            "want"
        ],
        "Entity": [
            "mark",
            "profile",
            "private",
            "case",
            "name",
            "will",
            "one",
            "can",
            "things",
            "don't"
        ]
    },
    {
        "Text": "#G10# As a site member, I want to mark my email address as private even if the rest of my profile is not, so that no one can contact me.",
        "Persona": [
            " site member"
        ],
        "Action": [
            "want",
            "mark",
            "address",
            "even",
            "rest",
            "profile",
            "can",
            "contact"
        ],
        "Entity": [
            "mark",
            "address",
            "private",
            "even",
            "rest",
            "profile",
            "one",
            "can",
            "contact"
        ]
    },
    {
        "Text": "#G10# As a site member, I want to send an email to any member via a form, so that we can connect.",
        "Persona": [
            " site member"
        ],
        "Action": [
            "want",
            "send",
            "form",
            "can",
            "connect"
        ],
        "Entity": [
            "send",
            "member",
            "form",
            "can"
        ]
    },
    {
        "Text": "#G10# As a site administrator, I want to read practicing and training applications and approve or reject them, so that only applicants who qualify can become CSPs or CSTs.",
        "Persona": [
            " site administrator"
        ],
        "Action": [
            "want",
            "read",
            "practicing",
            "approve",
            "reject",
            "qualify",
            "can",
            "become"
        ],
        "Entity": [
            "read",
            "training",
            "applications",
            "reject",
            "applicants",
            "who",
            "can"
        ]
    },
    {
        "Text": "#G10# As a site administrator, I want to edit any site member profile, so that I can correct problems for members.",
        "Persona": [
            " site administrator"
        ],
        "Action": [
            "want",
            "edit",
            "site",
            "profile",
            "can",
            "correct"
        ],
        "Entity": [
            "edit",
            "site",
            "member",
            "profile",
            "can",
            "problems",
            "members"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to read current news on the home page, so that I stay current on agile news.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "read",
            "home",
            "page",
            "stay"
        ],
        "Entity": [
            "read",
            "current",
            "news",
            "home",
            "page",
            "stay",
            "current",
            "news"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to access old news that is no longer on the home page, so that I can access things I remember from the past or that others mention to me.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "access",
            "home",
            "page",
            "can",
            "access",
            "remember",
            "mention"
        ],
        "Entity": [
            "access",
            "old",
            "news",
            "home",
            "page",
            "can",
            "access",
            "things",
            "past",
            "mention"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to email news items to the editor, so that they can be considered for publication.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "items",
            "can"
        ],
        "Entity": [
            "news",
            "items",
            "editor",
            "can",
            "publication"
        ]
    },
    {
        "Text": "#G10# As a site editor, I want to set the following dates on a news item: Start Publishing Date, Old News Date, Stop Publishing Date, so that articles are published on and through appropriate dates.",
        "Persona": [
            " site editor"
        ],
        "Action": [
            "want",
            "set",
            "dates",
            "start",
            "date",
            "date",
            "stop",
            "date",
            "articles",
            "are",
            "appropriate",
            "dates"
        ],
        "Entity": [
            "set",
            "following",
            "dates",
            "news",
            "start",
            "publishing",
            "date",
            "old",
            "news",
            "date",
            "stop",
            "publishing",
            "date",
            "articles",
            "dates"
        ]
    },
    {
        "Text": "#G10# As a site member, I want to subscribe to an RSS feed of news, so that I remain sufficiently and easily informed.",
        "Persona": [
            " site member"
        ],
        "Action": [
            "want",
            "subscribe",
            "feed",
            "remain"
        ],
        "Entity": [
            "feed",
            "news"
        ]
    },
    {
        "Text": "#G10# As a site editor, I want to assign priority numbers to news items, so that I can indicate which articles I want featured most prominently on the site.",
        "Persona": [
            " site editor"
        ],
        "Action": [
            "want",
            "assign",
            "numbers",
            "items",
            "can",
            "indicate",
            "articles",
            "want",
            "featured",
            "site"
        ],
        "Entity": [
            "assign",
            "priority",
            "numbers",
            "news",
            "items",
            "can",
            "articles",
            "most",
            "site"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to see a list of all upcoming Certification Courses and can page through them if there are a lot, so that I can choose the best course for me.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "see",
            "list",
            "courses",
            "can",
            "page",
            "are",
            "lot",
            "can",
            "choose",
            "best",
            "course"
        ],
        "Entity": [
            "see",
            "list",
            "all",
            "certification",
            "courses",
            "can",
            "page",
            "there",
            "lot",
            "can",
            "best",
            "course"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to see a list of all upcoming Other Courses and can page through them if necessary, so that I can choose the best course for me.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "see",
            "list",
            "courses",
            "can",
            "page",
            "can",
            "choose",
            "best",
            "course"
        ],
        "Entity": [
            "see",
            "list",
            "all",
            "courses",
            "can",
            "page",
            "necessary",
            "can",
            "best",
            "course"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to see a list of all upcoming Events, so that I can decide if I want to attend any.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "see",
            "list",
            "can",
            "decide",
            "want",
            "attend"
        ],
        "Entity": [
            "see",
            "list",
            "all",
            "events",
            "can"
        ]
    },
    {
        "Text": "#G10# As a trainer, I want to create a new course or event, so that site visitors can see it.",
        "Persona": [
            " trainer"
        ],
        "Action": [
            "want",
            "create",
            "course",
            "site",
            "can",
            "see"
        ],
        "Entity": [
            "course",
            "event",
            "site",
            "visitors",
            "can",
            "see"
        ]
    },
    {
        "Text": "#G10# As a trainer, I want to create an Other Course or Event I am charged a listing fee for that activity, so that I don't list events I don't really intend to hold.",
        "Persona": [
            " trainer"
        ],
        "Action": [
            "want",
            "create",
            "course",
            "charged",
            "fee",
            "don't",
            "list",
            "don't",
            "intend",
            "hold"
        ],
        "Entity": [
            "course",
            "event",
            "listing",
            "fee",
            "activity",
            "don't",
            "list",
            "events",
            "don't",
            "hold"
        ]
    },
    {
        "Text": "#G10# As a site administrator, I want to create an Other Course or Event that is not charged a listing fee, so that the Scrum Alliance doesn't charge itself for Scrum Gatherings that it puts on.",
        "Persona": [
            " site administrator"
        ],
        "Action": [
            "want",
            "create",
            "course",
            "charged",
            "fee",
            "scrum",
            "charge",
            "scrum",
            "puts"
        ],
        "Entity": [
            "course",
            "event",
            "listing",
            "fee",
            "scrum",
            "alliance",
            "doesn't",
            "charge",
            "scrum",
            "gatherings",
            "puts"
        ]
    },
    {
        "Text": "#G10# As a site administrator, I want to set the listing fee per Other Course or Event, so that we have flexibility on what to charge in the future.",
        "Persona": [
            " site administrator"
        ],
        "Action": [
            "want",
            "set",
            "fee",
            "course",
            "have",
            "charge"
        ],
        "Entity": [
            "set",
            "listing",
            "fee",
            "course",
            "event",
            "flexibility",
            "charge",
            "future"
        ]
    },
    {
        "Text": "#G10# As a trainer, I want to update one of my existing courses or events, so that it reflects accurate information.",
        "Persona": [
            " trainer"
        ],
        "Action": [
            "want",
            "update",
            "courses",
            "reflects"
        ],
        "Entity": [
            "update",
            "one",
            "courses",
            "events",
            "information"
        ]
    },
    {
        "Text": "#G10# As a trainer, I want to delete one of my courses or events, so that it's no longer listed if I cancel for some reason.",
        "Persona": [
            " trainer"
        ],
        "Action": [
            "want",
            "delete",
            "courses",
            "cancel",
            "reason"
        ],
        "Entity": [
            "one",
            "courses",
            "events",
            "cancel",
            "reason"
        ]
    },
    {
        "Text": "#G10# As a trainer, I want to copy one of my courses or events, so that I can create a new one.",
        "Persona": [
            " trainer"
        ],
        "Action": [
            "want",
            "copy",
            "courses",
            "can",
            "create"
        ],
        "Entity": [
            "copy",
            "one",
            "courses",
            "events",
            "can",
            "one"
        ]
    },
    {
        "Text": "#G10# As a site admin, I want to delete any course or event, so that I can remove things that will no longer occur.",
        "Persona": [
            " site admin"
        ],
        "Action": [
            "want",
            "delete",
            "course",
            "can",
            "remove",
            "will",
            "occur"
        ],
        "Entity": [
            "course",
            "event",
            "can",
            "remove",
            "things",
            "will"
        ]
    },
    {
        "Text": "#G10# As a site editor, I want to update any course or event, so that I can fix things the original author hasn't.",
        "Persona": [
            " site editor"
        ],
        "Action": [
            "want",
            "update",
            "course",
            "can",
            "fix",
            "author"
        ],
        "Entity": [
            "update",
            "course",
            "event",
            "can",
            "fix",
            "things",
            "original",
            "author",
            "hasn't"
        ]
    },
    {
        "Text": "#G10# As a trainer, I want to turn a course into an event or an event into a course, so that I can correctly classify anything that was entered incorrectly.",
        "Persona": [
            " trainer"
        ],
        "Action": [
            "want",
            "turn",
            "course",
            "course",
            "can",
            "classify",
            "was"
        ],
        "Entity": [
            "turn",
            "course",
            "event",
            "event",
            "course",
            "can",
            "anything"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to have an advanced search option that lets me fill in a form of search criteria, so that I can quickly find what I am looking for.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "have",
            "search",
            "lets",
            "fill",
            "form",
            "search",
            "can",
            "find"
        ],
        "Entity": [
            "search",
            "option",
            "lets",
            "fill",
            "form",
            "search",
            "can",
            "find",
            "looking"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to view a course I can click on the trainer's name and be taken to the trainer's profile, so that I can read more about a trainer before registering for a course.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "view",
            "course",
            "can",
            "click",
            "name",
            "taken",
            "profile",
            "can",
            "read",
            "course"
        ],
        "Entity": [
            "view",
            "course",
            "can",
            "click",
            "name",
            "profile",
            "can",
            "read",
            "more",
            "trainer",
            "course"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to subscribe to an RSS feed of upcoming courses and events, so that I am up to day without having to visit the site.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "subscribe",
            "feed",
            "courses",
            "visit",
            "site"
        ],
        "Entity": [
            "feed",
            "courses",
            "events",
            "day",
            "visit",
            "site"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to read FAQs, so that I can get quick answers.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "read",
            "can",
            "get",
            "answers"
        ],
        "Entity": [
            "read",
            "can",
            "quick",
            "answers"
        ]
    },
    {
        "Text": "#G10# As a site editor, I want to maintain a FAQ section, so that support gets fewer easily answered questions.",
        "Persona": [
            " site editor"
        ],
        "Action": [
            "want",
            "maintain",
            "section",
            "support",
            "gets",
            "questions"
        ],
        "Entity": [
            "section",
            "support",
            "gets",
            "questions"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to do a full-text search of the FAQs, so that I can find an answer quickly.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "search",
            "can",
            "find",
            "answer"
        ],
        "Entity": [
            "search",
            "can",
            "find",
            "answer"
        ]
    },
    {
        "Text": "#G10# As a site member, I want to download the latest training material and methodology PDFs, so that I have them.",
        "Persona": [
            " site member"
        ],
        "Action": [
            "want",
            "download",
            "have"
        ],
        "Entity": [
            "latest",
            "training",
            "material",
            "methodology"
        ]
    },
    {
        "Text": "#G10# As a visitor, I want to download presentations, PDFs, etc. on Scrum, so that I can learn from them or use them.",
        "Persona": [
            " visitor"
        ],
        "Action": [
            "want",
            "download",
            "scrum",
            "can",
            "learn",
            "use"
        ],
        "Entity": [
            "presentations",
            "scrum",
            "can",
            "use"
        ]
    },
    {
        "Text": "#G10# As a site member, I want to scroll through a listing of jobs, so that I can see if there any I am interested in.",
        "Persona": [
            " site member"
        ],
        "Action": [
            "want",
            "scroll",
            "jobs",
            "can",
            "see"
        ],
        "Entity": [
            "scroll",
            "listing",
            "jobs",
            "can",
            "see",
            "there"
        ]
    },
    {
        "Text": "#G10# As a recruiter, I want to post a help wanted ad, so that I can attract candidates.",
        "Persona": [
            " recruiter"
        ],
        "Action": [
            "want",
            "post",
            "help",
            "can",
            "attract"
        ],
        "Entity": [
            "post",
            "help",
            "can",
            "candidates"
        ]
    },
    {
        "Text": "#G10# As a site admin, I want to approve each help wanted ad before it gets to the site, so that we're sure of the quality of jobs being listed.",
        "Persona": [
            " site admin"
        ],
        "Action": [
            "want",
            "approve",
            "help",
            "gets",
            "site",
            "jobs"
        ],
        "Entity": [
            "help",
            "gets",
            "site",
            "quality",
            "jobs",
            "being"
        ]
    },
    {
        "Text": "#G10# As a site admin, I want to be emailed whenever a job is submitted, so that I am aware of it and can decide if I want to post it.",
        "Persona": [
            " site admin"
        ],
        "Action": [
            "want",
            "job",
            "submitted",
            "can",
            "decide",
            "want",
            "post"
        ],
        "Entity": [
            "job",
            "can",
            "post"
        ]
    },
    {
        "Text": "#G10# As a site member, I want to subscribe to an RSS feed of jobs available, so that I can read them without visiting the site.",
        "Persona": [
            " site member"
        ],
        "Action": [
            "want",
            "subscribe",
            "feed",
            "jobs",
            "can",
            "read",
            "site"
        ],
        "Entity": [
            "feed",
            "jobs",
            "can",
            "read",
            "visiting",
            "site"
        ]
    },
    {
        "Text": "#G10# As a site admin, I want to edit and delete help wanted ads, so that I can correct small problems or make sure each ad complies with site guidelines.",
        "Persona": [
            " site admin"
        ],
        "Action": [
            "want",
            "edit",
            "delete",
            "help",
            "can",
            "correct",
            "make",
            "complies",
            "site"
        ],
        "Entity": [
            "edit",
            "help",
            "ads",
            "can",
            "small",
            "problems",
            "make",
            "site",
            "guidelines"
        ]
    },
    {
        "Text": "#G10# As a site admin, I want to stop publishing jobs on the site 30 days after being posted, so that jobs that may have been filled aren't still listed when the hiring party forgets to come back and delete the ad.",
        "Persona": [
            " site admin"
        ],
        "Action": [
            "want",
            "stop",
            "jobs",
            "site",
            "jobs",
            "may",
            "have",
            "been",
            "still",
            "hiring",
            "party",
            "forgets",
            "come",
            "back",
            "delete"
        ],
        "Entity": [
            "stop",
            "publishing",
            "jobs",
            "site",
            "days",
            "being",
            "jobs",
            "may",
            "aren't",
            "still",
            "hiring",
            "party",
            "back"
        ]
    },
    {
        "Text": "#G10# As a recruiter, I want to be able to extend an ad for another 30 days by visiting the site and updating the posting, so that my ad remains active.",
        "Persona": [
            " recruiter"
        ],
        "Action": [
            "want",
            "extend",
            "site",
            "updating",
            "remains"
        ],
        "Entity": [
            "able",
            "days",
            "visiting",
            "site",
            "updating",
            "posting",
            "remains",
            "active"
        ]
    },
    {
        "Text": "#G10# As an advertiser, I want to be emailed a reminder seven day before an ad is about to expire, so that I can go extend the ad.",
        "Persona": [
            " advertiser"
        ],
        "Action": [
            "want",
            "expire",
            "can",
            "extend"
        ],
        "Entity": [
            "reminder",
            "seven",
            "day",
            "can"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to read a new article on the front page about once a week, so that I am up on all the latest happenings.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "read",
            "article",
            "front",
            "page"
        ],
        "Entity": [
            "read",
            "article",
            "front",
            "page",
            "once",
            "week",
            "all",
            "latest",
            "happenings"
        ]
    },
    {
        "Text": "#G10# As the site editor, I want to include a teaser with each article, so that site visitors can decide if they want to read the rest.",
        "Persona": [
            ""
        ],
        "Action": [
            "want",
            "include",
            "article",
            "site",
            "can",
            "decide",
            "want",
            "read",
            "rest"
        ],
        "Entity": [
            "teaser",
            "article",
            "site",
            "visitors",
            "can",
            "read",
            "rest"
        ]
    },
    {
        "Text": "#G10# As a site member who has read a teaser on the front page, I want to read the entire article so that I can finish articles that appeal to me.",
        "Persona": [
            " site member who has read a teaser on the front page"
        ],
        "Action": [
            "want",
            "read",
            "article",
            "can",
            "finish",
            "articles",
            "appeal"
        ],
        "Entity": [
            "read",
            "entire",
            "article",
            "can",
            "finish",
            "articles",
            "appeal"
        ]
    },
    {
        "Text": "#G10# As the site editor, I want to add an article to the site, so that the site has plenty of content.",
        "Persona": [
            ""
        ],
        "Action": [
            "want",
            "add",
            "article",
            "site",
            "site",
            "has",
            "content"
        ],
        "Entity": [
            "article",
            "site",
            "site",
            "plenty",
            "content"
        ]
    },
    {
        "Text": "#G10# As a site editor, I want to set start publishing dates, old article date, and stop publishing dates for articles, so that articles appear only during appropriate periods.",
        "Persona": [
            " site editor"
        ],
        "Action": [
            "want",
            "set",
            "start",
            "dates",
            "article",
            "date",
            "stop",
            "dates",
            "articles",
            "articles",
            "appear",
            "appropriate"
        ],
        "Entity": [
            "set",
            "start",
            "publishing",
            "dates",
            "old",
            "article",
            "date",
            "stop",
            "publishing",
            "dates",
            "articles",
            "articles",
            "periods"
        ]
    },
    {
        "Text": "#G10# As a site editor, I want to be able to designate whether or not an ever makes the home page, so that the best content is featured most prominently.",
        "Persona": [
            " site editor"
        ],
        "Action": [
            "want",
            "designate",
            "makes",
            "home",
            "page",
            "best",
            "content",
            "featured"
        ],
        "Entity": [
            "able",
            "makes",
            "home",
            "page",
            "best",
            "content",
            "most"
        ]
    },
    {
        "Text": "#G10# As the site editor, I want to have pretty good control over how the article, so that articles are visually appealing.",
        "Persona": [
            ""
        ],
        "Action": [
            "want",
            "have",
            "control",
            "article",
            "articles",
            "are"
        ],
        "Entity": [
            "pretty",
            "good",
            "control",
            "over",
            "how",
            "article",
            "articles"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to click the link from the article teaser to take me directly to the body of the article. not to another teaser setup, so that I can easily finish the article.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "click",
            "link",
            "article",
            "take",
            "body",
            "article",
            "can",
            "finish",
            "article"
        ],
        "Entity": [
            "click",
            "link",
            "article",
            "teaser",
            "take",
            "body",
            "article",
            "teaser",
            "can",
            "finish",
            "article"
        ]
    },
    {
        "Text": "#G10# As a site editor, I want to be able to indicate whether an article is publicly available or for members only, so that visitors are incentivized to become members.",
        "Persona": [
            " site editor"
        ],
        "Action": [
            "want",
            "indicate",
            "article",
            "are",
            "become"
        ],
        "Entity": [
            "able",
            "article",
            "members",
            "visitors",
            "members"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to be able to read some of your articles, so that I can learn without first joining the site.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "read",
            "articles",
            "can",
            "learn",
            "site"
        ],
        "Entity": [
            "able",
            "read",
            "articles",
            "can",
            "first",
            "joining",
            "site"
        ]
    },
    {
        "Text": "#G10# As a site member, I want to have full access to all articles, so that there is a benefit to being a member.",
        "Persona": [
            " site member"
        ],
        "Action": [
            "want",
            "have",
            "full",
            "access",
            "articles",
            "benefit"
        ],
        "Entity": [
            "full",
            "access",
            "all",
            "articles",
            "there",
            "benefit",
            "being",
            "member"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to do a full-text search of article body, title, and author name, so that I can find what I want.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "search",
            "article",
            "body",
            "title",
            "author",
            "name",
            "can",
            "find",
            "want"
        ],
        "Entity": [
            "search",
            "article",
            "body",
            "title",
            "author",
            "name",
            "can",
            "find"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to subscribe to an RSS feed of articles, so that I can read them without visiting the site.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "subscribe",
            "feed",
            "articles",
            "can",
            "read",
            "site"
        ],
        "Entity": [
            "feed",
            "articles",
            "can",
            "read",
            "visiting",
            "site"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to post comments about articles, so that others can read them.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "post",
            "comments",
            "articles",
            "can",
            "read"
        ],
        "Entity": [
            "post",
            "comments",
            "articles",
            "can",
            "read"
        ]
    },
    {
        "Text": "#G10# As a site editor, I want to have a prominent area on the home page where I can put special announcements not necessarily news or articles, so that I can give them additional exposure.",
        "Persona": [
            " site editor"
        ],
        "Action": [
            "want",
            "have",
            "home",
            "page",
            "can",
            "put",
            "announcements",
            "articles",
            "can",
            "give"
        ],
        "Entity": [
            "area",
            "home",
            "page",
            "where",
            "can",
            "put",
            "special",
            "announcements",
            "news",
            "articles",
            "can",
            "give",
            "exposure"
        ]
    },
    {
        "Text": "#G10# As a site editor, I want to have some flexibility as to where things appear, so that I can accommodate different types of content.",
        "Persona": [
            " site editor"
        ],
        "Action": [
            "want",
            "have",
            "appear",
            "can",
            "accommodate",
            "types",
            "content"
        ],
        "Entity": [
            "flexibility",
            "where",
            "things",
            "can",
            "types",
            "content"
        ]
    },
    {
        "Text": "#G10# As a trainer, I want to see the upcoming courses are what I want visitors to notice, so that they register and there's a benefit to my membership.",
        "Persona": [
            " trainer"
        ],
        "Action": [
            "want",
            "see",
            "courses",
            "are",
            "want",
            "notice",
            "register",
            "benefit"
        ],
        "Entity": [
            "see",
            "courses",
            "visitors",
            "notice",
            "register",
            "benefit",
            "membership"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to see new content when I come to the site, so that I come back more often.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "see",
            "content",
            "come",
            "site",
            "come",
            "back"
        ],
        "Entity": [
            "see",
            "content",
            "site",
            "back",
            "more"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to have articles that interest me and are easy to get to, so that I come to the site for my agile news and learning.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "have",
            "articles",
            "interest",
            "are",
            "easy",
            "get",
            "come",
            "site"
        ],
        "Entity": [
            "articles",
            "interest",
            "site",
            "news",
            "learning"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to know as soon as I visit what on earth Scrum is and why it needs an alliance, so that I don't bounce immediately oﬀ the page.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "know",
            "visit",
            "earth",
            "scrum",
            "needs",
            "don't",
            "bounce",
            "page"
        ],
        "Entity": [
            "know",
            "visit",
            "earth",
            "scrum",
            "why",
            "needs",
            "alliance",
            "don't",
            "bounce",
            "page"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to know as I glance around the home page what on earth a CSM is and why I'd want to be one, so that I read more.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "know",
            "glance",
            "home",
            "page",
            "earth",
            "want",
            "read"
        ],
        "Entity": [
            "know",
            "glance",
            "home",
            "page",
            "earth",
            "why",
            "one",
            "read",
            "more"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to be able to get back to the home page quickly and easily, so that I don't get lost navigating.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "get",
            "back",
            "home",
            "page",
            "don't",
            "get",
            "navigating"
        ],
        "Entity": [
            "able",
            "back",
            "home",
            "page",
            "don't",
            "lost"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to see a list of the most popular items on the site, so that I am most likely to read the most important or best content.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "see",
            "list",
            "items",
            "site",
            "read",
            "best",
            "content"
        ],
        "Entity": [
            "see",
            "list",
            "most",
            "items",
            "site",
            "most",
            "read",
            "most",
            "best",
            "content"
        ]
    },
    {
        "Text": "#G10# As a trainer, I want to be assured that no one can submit the same answers multiple time and skew my results, so that my ratings are accurate.",
        "Persona": [
            " trainer"
        ],
        "Action": [
            "want",
            "can",
            "submit",
            "answers",
            "time",
            "skew",
            "results",
            "are"
        ],
        "Entity": [
            "assured",
            "one",
            "can",
            "answers",
            "multiple",
            "time",
            "skew",
            "results",
            "ratings"
        ]
    },
    {
        "Text": "#G10# As a trainer, I want to be notified about the results of surveys about my classes, so that I can read them.",
        "Persona": [
            " trainer"
        ],
        "Action": [
            "want",
            "notified",
            "results",
            "surveys",
            "classes",
            "can",
            "read"
        ],
        "Entity": [
            "results",
            "surveys",
            "classes",
            "can",
            "read"
        ]
    },
    {
        "Text": "#G10# As a site admin, I want to see the results for each trainer and averages for the class, so that I can identify any outliers or possible problems.",
        "Persona": [
            " site admin"
        ],
        "Action": [
            "want",
            "see",
            "results",
            "averages",
            "class",
            "can",
            "identify"
        ],
        "Entity": [
            "see",
            "results",
            "trainer",
            "averages",
            "class",
            "can",
            "outliers",
            "possible",
            "problems"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to see a trainer's rating, so that I choose a course from an appropriate trainer.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "see",
            "choose",
            "course",
            "appropriate"
        ],
        "Entity": [
            "see",
            "rating",
            "course",
            "trainer"
        ]
    },
    {
        "Text": "#G10# As a trainer, I want to show my rating up on my profile page, so that site visitors can choose wisely.",
        "Persona": [
            " trainer"
        ],
        "Action": [
            "want",
            "show",
            "profile",
            "page",
            "site",
            "can",
            "choose"
        ],
        "Entity": [
            "show",
            "rating",
            "profile",
            "page",
            "site",
            "visitors",
            "can"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to view a section of the website that teaches me the basics of what Scrum is, so that I can learn that quickly.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "view",
            "section",
            "teaches",
            "scrum",
            "can",
            "learn"
        ],
        "Entity": [
            "view",
            "section",
            "teaches",
            "basics",
            "scrum",
            "can"
        ]
    },
    {
        "Text": "#G10# As a site editor, I want to create the content of the What Is Scrum section, so that it's there for visitors.",
        "Persona": [
            " site editor"
        ],
        "Action": [
            "want",
            "create",
            "content",
            "scrum",
            "section"
        ],
        "Entity": [
            "content",
            "scrum",
            "section",
            "there",
            "visitors"
        ]
    },
    {
        "Text": "#G10# As a site visitor, I want to view lists on the site of all Certified Scrum Masters, Practitioners, Trainers, and Certified Scrum Product Owners.",
        "Persona": [
            " site visitor"
        ],
        "Action": [
            "want",
            "view",
            "lists",
            "site",
            "scrum",
            "masters",
            "scrum"
        ],
        "Entity": [
            "view",
            "lists",
            "site",
            "all",
            "scrum",
            "masters",
            "practitioners",
            "trainers",
            "scrum",
            "product",
            "owners"
        ]
    },
    {
        "Text": "#G10# As a CSM, I want to have my name listed in the registry without becoming a member of the site, so that employers or others can verify my certification.",
        "Persona": [
            " CSM"
        ],
        "Action": [
            "want",
            "have",
            "name",
            "site",
            "can",
            "verify"
        ],
        "Entity": [
            "name",
            "registry",
            "becoming",
            "member",
            "site",
            "employers",
            "can",
            "certification"
        ]
    },
    {
        "Text": "#G10# As a trainer, I want to load an Excel file into the site, so that the course participants are added to the Scrum Alliance records.",
        "Persona": [
            " trainer"
        ],
        "Action": [
            "want",
            "load",
            "excel",
            "file",
            "site",
            "course",
            "are",
            "scrum",
            "records"
        ],
        "Entity": [
            "load",
            "file",
            "site",
            "course",
            "participants",
            "scrum",
            "alliance",
            "records"
        ]
    },
    {
        "Text": "#G10# As a site admin, I want to view all classes in a pending state, so that I can approve any that need to be approved.",
        "Persona": [
            " site admin"
        ],
        "Action": [
            "want",
            "view",
            "classes",
            "state",
            "can",
            "approve",
            "need",
            "approved"
        ],
        "Entity": [
            "view",
            "all",
            "classes",
            "state",
            "can",
            "need"
        ]
    },
    {
        "Text": "#G10# As a site admin, I want to move people in a trainer's class from a pending state to the registry once I have received proof of payment from the trainer.",
        "Persona": [
            " site admin"
        ],
        "Action": [
            "want",
            "move",
            "people",
            "class",
            "state",
            "have",
            "received",
            "proof"
        ],
        "Entity": [
            "move",
            "people",
            "class",
            "state",
            "registry",
            "once",
            "proof",
            "payment",
            "trainer"
        ]
    },
    {
        "Text": "#G10# As a CSM, I want to be sent an email welcoming me to the Scrum Alliance and with instructions to register or activate my membership once my name has been loaded to the registry.",
        "Persona": [
            " CSM"
        ],
        "Action": [
            "want",
            "sent",
            "scrum",
            "register",
            "activate",
            "name",
            "has",
            "been"
        ],
        "Entity": [
            "welcoming",
            "scrum",
            "alliance",
            "instructions",
            "register",
            "membership",
            "once",
            "name",
            "registry"
        ]
    },
    {
        "Text": "#G10# As a site editor, I want to edit the content of the email automatically sent to new Certified Scrum Masters and Product Owners, so that I don't need to involve a programmer on simple email edits.",
        "Persona": [
            " site editor"
        ],
        "Action": [
            "want",
            "edit",
            "content",
            "sent",
            "scrum",
            "masters",
            "don't",
            "need",
            "involve",
            "edits"
        ],
        "Entity": [
            "edit",
            "content",
            "scrum",
            "masters",
            "product",
            "owners",
            "don't",
            "need",
            "programmer",
            "simple",
            "edits"
        ]
    },
    {
        "Text": "#G10# As a company, I want to join the Scrum Alliance by paying a corporate membership fee, so that I can show the company's support of Scrum.",
        "Persona": [
            " company"
        ],
        "Action": [
            "want",
            "join",
            "scrum",
            "paying",
            "fee",
            "can",
            "show",
            "support",
            "scrum"
        ],
        "Entity": [
            "join",
            "scrum",
            "alliance",
            "paying",
            "membership",
            "fee",
            "can",
            "show",
            "support",
            "scrum"
        ]
    },
    {
        "Text": "#G10# As a corporatesponsor, I want to display my logo on a corporate sponsors page, so that others see the company's support of Scrum.",
        "Persona": [
            " corporatesponsor"
        ],
        "Action": [
            "want",
            "display",
            "sponsors",
            "page",
            "see",
            "support",
            "scrum"
        ],
        "Entity": [
            "display",
            "logo",
            "sponsors",
            "page",
            "see",
            "support",
            "scrum"
        ]
    },
    {
        "Text": "#G10# As a corporatesponsor, I want to make my logo randomly appear on the home page, so that others see the company's support of Scrum.",
        "Persona": [
            " corporatesponsor"
        ],
        "Action": [
            "want",
            "make",
            "appear",
            "home",
            "page",
            "see",
            "support",
            "scrum"
        ],
        "Entity": [
            "make",
            "logo",
            "home",
            "page",
            "see",
            "support",
            "scrum"
        ]
    },
    {
        "Text": "#G10# As a CSM, I want to be charged a fee once I am approved for Practitioner status, so that my certification status can be activated.",
        "Persona": [
            " CSM"
        ],
        "Action": [
            "want",
            "charged",
            "fee",
            "approved",
            "can",
            "activated"
        ],
        "Entity": [
            "fee",
            "once",
            "practitioner",
            "status",
            "certification",
            "status",
            "can"
        ]
    },
    {
        "Text": "#G10# As a CST, I want to pay an annual fee, so that my CST status is active.",
        "Persona": [
            " CST"
        ],
        "Action": [
            "want",
            "pay",
            "fee"
        ],
        "Entity": [
            "pay",
            "annual",
            "fee",
            "status",
            "active"
        ]
    },
    {
        "Text": "#G10# As a site administrator, I want to set the annual fees for members, Practitioners and Trainers, so that fees can be set without involving a programmer.",
        "Persona": [
            " site administrator"
        ],
        "Action": [
            "want",
            "set",
            "fees",
            "fees",
            "can",
            "set",
            "involving"
        ],
        "Entity": [
            "set",
            "annual",
            "fees",
            "members",
            "practitioners",
            "trainers",
            "fees",
            "can",
            "set",
            "programmer"
        ]
    },
    {
        "Text": "#G10# As a member, I want to receive a reminder and a link, so that I can renew my membership.",
        "Persona": [
            " member"
        ],
        "Action": [
            "want",
            "receive",
            "link",
            "can",
            "renew"
        ],
        "Entity": [
            "reminder",
            "link",
            "can",
            "membership"
        ]
    },
    {
        "Text": "#G10# As a member, I want to have the system email me a new password or a password reminder since i have short-term memory problems.",
        "Persona": [
            " member"
        ],
        "Action": [
            "want",
            "have",
            "have"
        ],
        "Entity": [
            "system",
            "password",
            "password",
            "reminder",
            "memory",
            "problems"
        ]
    },
    {
        "Text": "#G10# As a trainer, I want to read information of relevance only to trainers, so that the Scrum Alliance can share information with me easily.",
        "Persona": [
            " trainer"
        ],
        "Action": [
            "want",
            "read",
            "scrum",
            "can",
            "share"
        ],
        "Entity": [
            "read",
            "information",
            "relevance",
            "trainers",
            "scrum",
            "alliance",
            "can",
            "share",
            "information"
        ]
    },
    {
        "Text": "#G10# As a site editor, I want to post information in a trainers-only section, so that only trainers see it.",
        "Persona": [
            " site editor"
        ],
        "Action": [
            "want",
            "post",
            "section",
            "see"
        ],
        "Entity": [
            "post",
            "information",
            "section",
            "trainers",
            "see"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to see the first iteration of beta up on cloud.gov.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "see"
        ],
        "Entity": [
            "see",
            "first",
            "iteration",
            "beta"
        ]
    },
    {
        "Text": "#G11# As a developer, I want to have the subdomain beta.nsf.gov be set up, so that I can deploy a beta site to it.",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "have",
            "set",
            "can",
            "deploy",
            "site"
        ],
        "Entity": [
            "set",
            "can",
            "beta",
            "site"
        ]
    },
    {
        "Text": "#G11# As a stakeholder, I want to have a decision on whether or not the blog aggregator may work for beta, and if not what will.",
        "Persona": [
            " stakeholder"
        ],
        "Action": [
            "want",
            "have",
            "may",
            "work",
            "will"
        ],
        "Entity": [
            "decision",
            "may",
            "work",
            "beta",
            "will"
        ]
    },
    {
        "Text": "#G11# As an NSF employee, I want to understand the process of switching the cloud.gov hosting plan over from prototype to FISMA low.",
        "Persona": [
            " NSF employee"
        ],
        "Action": [
            "want",
            "understand",
            "process",
            "plan",
            "low"
        ],
        "Entity": [
            "process",
            "switching",
            "plan",
            "over",
            "prototype",
            "low"
        ]
    },
    {
        "Text": "#G11# As a stakeholder, I want to see the results of user research, so that I can determine if the CMS is right for me.",
        "Persona": [
            " stakeholder"
        ],
        "Action": [
            "want",
            "see",
            "results",
            "research",
            "can",
            "determine",
            "right"
        ],
        "Entity": [
            "see",
            "results",
            "user",
            "research",
            "can",
            "right"
        ]
    },
    {
        "Text": "#G11# As a designer, I want to have a new social media wireframe, so that I can begin implementing design.",
        "Persona": [
            " designer"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "begin",
            "design"
        ],
        "Entity": [
            "social",
            "media",
            "can",
            "design"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to have a prioritized list of features and elements of a future social element page, so that I can work with the engineers to determine feasibility.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "have",
            "list",
            "features",
            "page",
            "can",
            "work",
            "engineers",
            "determine"
        ],
        "Entity": [
            "list",
            "features",
            "elements",
            "future",
            "social",
            "element",
            "page",
            "can",
            "work",
            "engineers",
            "feasibility"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to determine a design direction for the beta social page, so that we can implement a beta site quickly without established brand guidelines.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "determine",
            "design",
            "page",
            "can",
            "implement",
            "site",
            "brand"
        ],
        "Entity": [
            "design",
            "direction",
            "beta",
            "social",
            "page",
            "can",
            "implement",
            "beta",
            "site",
            "brand",
            "guidelines"
        ]
    },
    {
        "Text": "#G11# As a user researcher, I want to test the user research plan, so that I make sure the in-person interviews are effective and capturing the right information.",
        "Persona": [
            " user researcher"
        ],
        "Action": [
            "want",
            "test",
            "research",
            "plan",
            "make",
            "interviews",
            "are",
            "capturing",
            "right"
        ],
        "Entity": [
            "test",
            "user",
            "research",
            "plan",
            "make",
            "interviews",
            "right",
            "information"
        ]
    },
    {
        "Text": "#G11# As a user researcher, I want to have the finalized OLPA task script, so that I can begin testing with internal users.",
        "Persona": [
            " user researcher"
        ],
        "Action": [
            "want",
            "have",
            "finalized",
            "task",
            "script",
            "can",
            "begin"
        ],
        "Entity": [
            "task",
            "script",
            "can",
            "testing",
            "internal",
            "users"
        ]
    },
    {
        "Text": "#G11# As a content editor, I want to be able to easily find content, so that I can edit it.",
        "Persona": [
            " content editor"
        ],
        "Action": [
            "want",
            "find",
            "content",
            "can",
            "edit"
        ],
        "Entity": [
            "able",
            "find",
            "content",
            "can",
            "edit"
        ]
    },
    {
        "Text": "#G11# As a research participant, I want to make sure that the appearance of the prototype does not distract from the workflow, so that I can complete the user interview.",
        "Persona": [
            " research participant"
        ],
        "Action": [
            "want",
            "make",
            "does",
            "distract",
            "can",
            "complete",
            "interview"
        ],
        "Entity": [
            "make",
            "appearance",
            "prototype",
            "does",
            "can",
            "user",
            "interview"
        ]
    },
    {
        "Text": "#G11# As a user researcher, I want to have the WIG prototype, so that I can finalize the second task script.",
        "Persona": [
            " user researcher"
        ],
        "Action": [
            "want",
            "have",
            "wig",
            "can",
            "finalize",
            "second",
            "task",
            "script"
        ],
        "Entity": [
            "wig",
            "prototype",
            "can",
            "second",
            "task",
            "script"
        ]
    },
    {
        "Text": "#G11# As a user, I want to add a video to my article.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "add",
            "article"
        ],
        "Entity": [
            "video",
            "article"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to meet with DIS / cloud.gov, so that I can determine the requirements for the beta.nsf.gov ATO.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "meet",
            "can",
            "determine"
        ],
        "Entity": [
            "meet",
            "can",
            "requirements"
        ]
    },
    {
        "Text": "#G11# As a user researcher, I want to have a list of priority workflow candidates that we might test, so that I can make sure we're capturing the priority areas.",
        "Persona": [
            " user researcher"
        ],
        "Action": [
            "want",
            "have",
            "list",
            "might",
            "test",
            "can",
            "make",
            "capturing"
        ],
        "Entity": [
            "list",
            "priority",
            "candidates",
            "might",
            "test",
            "can",
            "make",
            "priority",
            "areas"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to understand what the MVP should look like, so that I can begin understanding workflow needs as they pertain to any CMS decision.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "understand",
            "should",
            "look",
            "like",
            "can",
            "begin",
            "needs",
            "pertain"
        ],
        "Entity": [
            "look",
            "like",
            "can",
            "understanding",
            "needs",
            "decision"
        ]
    },
    {
        "Text": "#G11# As an NSF administrator, I want to shadow the CMS implementation, so that I can learn as the prototype is developed further.",
        "Persona": [
            " NSF administrator"
        ],
        "Action": [
            "want",
            "shadow",
            "can",
            "learn",
            "developed",
            "further"
        ],
        "Entity": [
            "shadow",
            "implementation",
            "can",
            "prototype"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to have an updated acquisitions roadmap, so that I can plan accordingly.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "have",
            "updated",
            "can",
            "plan"
        ],
        "Entity": [
            "acquisitions",
            "can",
            "plan"
        ]
    },
    {
        "Text": "#G11# As an NSF employee, I want to have an updated roadmap document, so that I can see prioritized areas to focus on for the next few months and beyond.",
        "Persona": [
            " NSF employee"
        ],
        "Action": [
            "want",
            "have",
            "updated",
            "document",
            "can",
            "see",
            "focus"
        ],
        "Entity": [
            "document",
            "can",
            "see",
            "areas",
            "focus",
            "few",
            "months",
            "beyond"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to understand how time off overlaps with plans around the user research.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "understand",
            "time",
            "overlaps",
            "plans",
            "research"
        ],
        "Entity": [
            "how",
            "time",
            "off",
            "overlaps",
            "plans",
            "user",
            "research"
        ]
    },
    {
        "Text": "#G11# As a researcher, I want to develop the user research protocol for internal workflows, so that we can begin testing against a CMS prototype.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "develop",
            "research",
            "can",
            "begin"
        ],
        "Entity": [
            "user",
            "research",
            "protocol",
            "internal",
            "can",
            "testing",
            "prototype"
        ]
    },
    {
        "Text": "#G11# As a CMS administrator, I want to have roles, so that I can assign them to my users.",
        "Persona": [
            " CMS administrator"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "assign"
        ],
        "Entity": [
            "roles",
            "can",
            "assign",
            "users"
        ]
    },
    {
        "Text": "#G11# As an NSF employee, I want to narrow down the universe of CMS options and identify/prioritize key considerations for getting to the next step.",
        "Persona": [
            " NSF employee"
        ],
        "Action": [
            "want",
            "narrow",
            "down",
            "key",
            "step"
        ],
        "Entity": [
            "narrow",
            "down",
            "universe",
            "options",
            "key",
            "considerations",
            "getting",
            "step"
        ]
    },
    {
        "Text": "#G11# As an NSF employee, I want to have a final workshop to identify key lessons and features for the content management system decision.",
        "Persona": [
            " NSF employee"
        ],
        "Action": [
            "want",
            "have",
            "identify",
            "key",
            "lessons",
            "features",
            "content"
        ],
        "Entity": [
            "final",
            "workshop",
            "key",
            "lessons",
            "features",
            "content",
            "management",
            "system",
            "decision"
        ]
    },
    {
        "Text": "#G11# As a CMS SME, I want to see the webmaster workflow report, so that I can understand how this might impact current direction.",
        "Persona": [
            " CMS SME"
        ],
        "Action": [
            "want",
            "see",
            "report",
            "can",
            "understand",
            "might",
            "impact"
        ],
        "Entity": [
            "see",
            "report",
            "can",
            "how",
            "might",
            "impact",
            "current",
            "direction"
        ]
    },
    {
        "Text": "#G11# As an NSF employee, I want to understand work performed, so that I can understand when and what I can use later.",
        "Persona": [
            " NSF employee"
        ],
        "Action": [
            "want",
            "understand",
            "work",
            "can",
            "understand",
            "can",
            "use"
        ],
        "Entity": [
            "work",
            "can",
            "can",
            "use"
        ]
    },
    {
        "Text": "#G11# As a researcher, I want to recruit for the last round of user research, so that we can summarize our findings and synthesize results.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "recruit",
            "last",
            "round",
            "research",
            "can",
            "summarize",
            "findings",
            "synthesize",
            "results"
        ],
        "Entity": [
            "recruit",
            "last",
            "round",
            "user",
            "research",
            "can",
            "findings",
            "results"
        ]
    },
    {
        "Text": "#G11# As a user researcher, I want to continue scheduling interviews for hypothesis #1, so that I can be prepared to test our first prototype.",
        "Persona": [
            " user researcher"
        ],
        "Action": [
            "want",
            "continue",
            "scheduling",
            "interviews",
            "can",
            "test"
        ],
        "Entity": [
            "scheduling",
            "interviews",
            "hypothesis",
            "can",
            "test",
            "first",
            "prototype"
        ]
    },
    {
        "Text": "#G11# As an NSF employee, I want to have high-level strategy recommendations to implement in conjunction with the new CMS.",
        "Persona": [
            " NSF employee"
        ],
        "Action": [
            "want",
            "have",
            "implement"
        ],
        "Entity": [
            "strategy",
            "recommendations",
            "implement",
            "conjunction"
        ]
    },
    {
        "Text": "#G11# As an NSF employee, I want to have editorial-planning recommendations, so that I can understand how they might impact an eventual CMS / future web presence.",
        "Persona": [
            " NSF employee"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "understand",
            "might",
            "impact",
            "web"
        ],
        "Entity": [
            "recommendations",
            "can",
            "how",
            "might",
            "impact",
            "future",
            "web",
            "presence"
        ]
    },
    {
        "Text": "#G11# As an NSF employee, I want to know how brand guidelines are developed and maintained, so that I can incorporate them throughout the project.",
        "Persona": [
            " NSF employee"
        ],
        "Action": [
            "want",
            "know",
            "brand",
            "are",
            "developed",
            "can",
            "incorporate",
            "project"
        ],
        "Entity": [
            "know",
            "how",
            "brand",
            "guidelines",
            "can",
            "project"
        ]
    },
    {
        "Text": "#G11# As a web recruiter manager, I want to confirm the recruiter is set up and working properly on Science360.gov.",
        "Persona": [
            " web recruiter manager"
        ],
        "Action": [
            "want",
            "confirm",
            "set"
        ],
        "Entity": [
            "recruiter",
            "set",
            "working"
        ]
    },
    {
        "Text": "#G11# As an NSF employee, I want to know how visual design directions were developed, so that I can make better design decisions in the future.",
        "Persona": [
            " NSF employee"
        ],
        "Action": [
            "want",
            "know",
            "design",
            "were",
            "developed",
            "can",
            "make",
            "better",
            "design"
        ],
        "Entity": [
            "know",
            "how",
            "visual",
            "design",
            "directions",
            "can",
            "make",
            "better",
            "design",
            "decisions",
            "future"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to know what the first hypothesis is, so that I can start developing a prototype to test.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "know",
            "can",
            "start",
            "developing",
            "test"
        ],
        "Entity": [
            "know",
            "first",
            "hypothesis",
            "can",
            "start",
            "developing",
            "prototype",
            "test"
        ]
    },
    {
        "Text": "#G11# As a content designer, I want to develop a better understanding of NSF's content types and editorial plan, so that I can make more informed recommendations going forward.",
        "Persona": [
            " content designer"
        ],
        "Action": [
            "want",
            "develop",
            "better",
            "content",
            "types",
            "plan",
            "can",
            "make",
            "forward"
        ],
        "Entity": [
            "better",
            "understanding",
            "content",
            "types",
            "editorial",
            "plan",
            "can",
            "make",
            "more",
            "recommendations",
            "going",
            "forward"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to have a prototype strategy, so that I understand how we will gain understandings from tests that will drive recommendations.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "have",
            "understand",
            "will",
            "gain",
            "tests",
            "will",
            "drive"
        ],
        "Entity": [
            "prototype",
            "strategy",
            "how",
            "will",
            "gain",
            "understandings",
            "tests",
            "will",
            "drive",
            "recommendations"
        ]
    },
    {
        "Text": "#G11# As a content designer, I want to demonstrate the value of user-centered content design to ensure it's an integral part of our recommendations.",
        "Persona": [
            " content designer"
        ],
        "Action": [
            "want",
            "demonstrate",
            "value",
            "content",
            "design",
            "ensure",
            "part"
        ],
        "Entity": [
            "value",
            "content",
            "design",
            "ensure",
            "integral",
            "part",
            "recommendations"
        ]
    },
    {
        "Text": "#G11# As a user researcher, I want to know when outreach to lists is successful, so that I can plan on a new release to the next listserv on the priority list.",
        "Persona": [
            " user researcher"
        ],
        "Action": [
            "want",
            "know",
            "outreach",
            "lists",
            "can",
            "plan",
            "release",
            "list"
        ],
        "Entity": [
            "know",
            "outreach",
            "lists",
            "can",
            "plan",
            "release",
            "priority",
            "list"
        ]
    },
    {
        "Text": "#G11# As an NSF employee, I want to schedule regular in-person check-ins, so that we can continue to communicate the goals of the project with our stakeholders.",
        "Persona": [
            " NSF employee"
        ],
        "Action": [
            "want",
            "schedule",
            "check-ins",
            "can",
            "continue",
            "communicate",
            "project"
        ],
        "Entity": [
            "schedule",
            "regular",
            "check-ins",
            "can",
            "goals",
            "project",
            "stakeholders"
        ]
    },
    {
        "Text": "#G11# As a developer, I want to know what the three initial hypotheses are, so that I can plan work around development of prototypes.",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "know",
            "initial",
            "are",
            "can",
            "plan",
            "work"
        ],
        "Entity": [
            "know",
            "three",
            "initial",
            "can",
            "plan",
            "work",
            "development",
            "prototypes"
        ]
    },
    {
        "Text": "#G11# As a workshop attendee, I want to have a summary of what we learned, so that I can understand our next steps and how they apply to me.",
        "Persona": [
            " workshop attendee"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "understand",
            "steps",
            "apply"
        ],
        "Entity": [
            "summary",
            "can",
            "steps",
            "how"
        ]
    },
    {
        "Text": "#G11# As a designer, I want to know what early indications of hypotheses might be, so that I can start planning for the first prototype.",
        "Persona": [
            " designer"
        ],
        "Action": [
            "want",
            "know",
            "might",
            "can",
            "start",
            "planning"
        ],
        "Entity": [
            "know",
            "indications",
            "might",
            "can",
            "start",
            "planning",
            "first",
            "prototype"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to have a schedule of more coworking slots, so that I can work in tandem with the rest of the team on a more regular basis.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "have",
            "schedule",
            "slots",
            "can",
            "work",
            "rest",
            "team"
        ],
        "Entity": [
            "schedule",
            "more",
            "slots",
            "can",
            "work",
            "tandem",
            "rest",
            "team",
            "more",
            "regular",
            "basis"
        ]
    },
    {
        "Text": "#G11# As an NSF person interested in attending user interviews, I want to know when they are scheduled and the type of user that will be interviewed.",
        "Persona": [
            " NSF person interested in attending user interviews"
        ],
        "Action": [
            "want",
            "know",
            "are",
            "scheduled",
            "type",
            "will"
        ],
        "Entity": [
            "know",
            "type",
            "user",
            "will"
        ]
    },
    {
        "Text": "#G11# As an NSF member of the team, I want to have a place where I can access all the related reports and documentation, so that I can refer to it easily now and in the future.",
        "Persona": [
            " NSF member of the team"
        ],
        "Action": [
            "want",
            "have",
            "place",
            "can",
            "access",
            "reports",
            "can",
            "refer"
        ],
        "Entity": [
            "place",
            "where",
            "can",
            "access",
            "all",
            "reports",
            "documentation",
            "can",
            "refer",
            "now",
            "future"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to know when the mid-point checkin is and what will be covered, so that I can plan accordingly.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "know",
            "will",
            "can",
            "plan"
        ],
        "Entity": [
            "know",
            "will",
            "can",
            "plan"
        ]
    },
    {
        "Text": "#G11# As an NSF employee, I want to join Github, so that I can participate in the issues as assigned.",
        "Persona": [
            " NSF employee"
        ],
        "Action": [
            "want",
            "join",
            "can",
            "participate",
            "issues"
        ],
        "Entity": [
            "join",
            "can",
            "participate",
            "issues"
        ]
    },
    {
        "Text": "#G11# As an NSF employee, I want to learn about how Github is used, so that I can participate in the issues as assigned.",
        "Persona": [
            " NSF employee"
        ],
        "Action": [
            "want",
            "learn",
            "can",
            "participate",
            "issues"
        ],
        "Entity": [
            "how",
            "can",
            "participate",
            "issues"
        ]
    },
    {
        "Text": "#G11# As a user researcher, I want to begin identifying interview participants, so that I can understand what educators and science influencers need from a future nsf.gov website.",
        "Persona": [
            " user researcher"
        ],
        "Action": [
            "want",
            "begin",
            "identifying",
            "interview",
            "can",
            "understand",
            "need"
        ],
        "Entity": [
            "interview",
            "participants",
            "can",
            "educators",
            "science",
            "need",
            "future"
        ]
    },
    {
        "Text": "#G11# As a VisualDesigner, I want to concept different styles for the nsf.gov website, so that we can discuss different design concepts with stakeholders.",
        "Persona": [
            " VisualDesigner"
        ],
        "Action": [
            "want",
            "styles",
            "can",
            "discuss",
            "design"
        ],
        "Entity": [
            "concept",
            "styles",
            "can",
            "discuss",
            "design",
            "concepts",
            "stakeholders"
        ]
    },
    {
        "Text": "#G11# As a user researcher, I want to set up a website recruitment test, so that I can see if we can recruit users in real time from the website.",
        "Persona": [
            " user researcher"
        ],
        "Action": [
            "want",
            "set",
            "test",
            "can",
            "see",
            "can",
            "recruit",
            "time"
        ],
        "Entity": [
            "set",
            "recruitment",
            "test",
            "can",
            "see",
            "can",
            "recruit",
            "users",
            "real",
            "time"
        ]
    },
    {
        "Text": "#G11# As a web recruiter manager, I want to confirm the recruiter is set up and working properly, so that I can deploy it on more pages.",
        "Persona": [
            " web recruiter manager"
        ],
        "Action": [
            "want",
            "confirm",
            "set",
            "can",
            "deploy",
            "pages"
        ],
        "Entity": [
            "recruiter",
            "set",
            "working",
            "can",
            "more",
            "pages"
        ]
    },
    {
        "Text": "#G11# As a VisualDesigner, I want to create a moodboard to aid with visual design concepts for the nsf.gov website, so that we can discuss different design concepts with stakeholders.",
        "Persona": [
            " VisualDesigner"
        ],
        "Action": [
            "want",
            "create",
            "aid",
            "design",
            "can",
            "discuss",
            "design"
        ],
        "Entity": [
            "aid",
            "visual",
            "design",
            "concepts",
            "can",
            "discuss",
            "design",
            "concepts",
            "stakeholders"
        ]
    },
    {
        "Text": "#G11# As a workshop attendee, I want to see a summary on major findings from the event.",
        "Persona": [
            " workshop attendee"
        ],
        "Action": [
            "want",
            "see",
            "major",
            "findings"
        ],
        "Entity": [
            "see",
            "summary",
            "major",
            "findings",
            "event"
        ]
    },
    {
        "Text": "#G11# As a user researcher, I want to make sure the correct NSF people are invited to user interviews, so that they can observe the interviews and make recommendations accordingly.",
        "Persona": [
            " user researcher"
        ],
        "Action": [
            "want",
            "make",
            "correct",
            "people",
            "are",
            "invited",
            "interviews",
            "can",
            "observe",
            "interviews",
            "make"
        ],
        "Entity": [
            "make",
            "people",
            "user",
            "interviews",
            "can",
            "interviews",
            "make",
            "recommendations"
        ]
    },
    {
        "Text": "#G11# As a user researcher, I want to begin drafting a research plan, so that I can begin recruiting participants.",
        "Persona": [
            " user researcher"
        ],
        "Action": [
            "want",
            "begin",
            "research",
            "plan",
            "can",
            "begin"
        ],
        "Entity": [
            "drafting",
            "research",
            "plan",
            "can",
            "participants"
        ]
    },
    {
        "Text": "#G11# As a content editor, I want to be able to add videos from Brightcove.",
        "Persona": [
            " content editor"
        ],
        "Action": [
            "want",
            "add"
        ],
        "Entity": [
            "able",
            "videos"
        ]
    },
    {
        "Text": "#G11# As an author, I want to be able to indent / outdent content.",
        "Persona": [
            " author"
        ],
        "Action": [
            "want",
            "indent",
            "content"
        ],
        "Entity": [
            "able",
            "indent",
            "content"
        ]
    },
    {
        "Text": "#G11# As a VisualDesigner, I want to demonstrate the value of visual design to the NSF project team, so that visual design is an integral part of a redesign.",
        "Persona": [
            " VisualDesigner"
        ],
        "Action": [
            "want",
            "demonstrate",
            "value",
            "design",
            "project",
            "team",
            "design",
            "part",
            "redesign"
        ],
        "Entity": [
            "value",
            "visual",
            "design",
            "project",
            "team",
            "visual",
            "design",
            "integral",
            "part"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to know what visual design related tasks we might need to plan for this sprint, so that I can assign tasks as necessary.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "know",
            "design",
            "tasks",
            "might",
            "need",
            "plan",
            "sprint",
            "can",
            "assign",
            "tasks"
        ],
        "Entity": [
            "know",
            "visual",
            "design",
            "tasks",
            "might",
            "need",
            "plan",
            "sprint",
            "can",
            "assign",
            "tasks",
            "necessary"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to have recruiting-email templates ready to go, so that I can start recruiting interviewees ASAP!.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "have",
            "ready",
            "can",
            "start"
        ],
        "Entity": [
            "templates",
            "ready",
            "can",
            "start",
            "interviewees"
        ]
    },
    {
        "Text": "#G11# As an NSF employee, I want to see how the user recruitment form looks and behaves on a sample page, so that I can understand the impact the recruitment will have on the NSF page.",
        "Persona": [
            " NSF employee"
        ],
        "Action": [
            "want",
            "see",
            "form",
            "looks",
            "behaves",
            "sample",
            "page",
            "can",
            "understand",
            "impact",
            "will",
            "have",
            "page"
        ],
        "Entity": [
            "see",
            "how",
            "user",
            "recruitment",
            "form",
            "looks",
            "sample",
            "page",
            "can",
            "impact",
            "recruitment",
            "will",
            "page"
        ]
    },
    {
        "Text": "#G11# As a potential research participant, I want to learn about the research and leave my contact information.",
        "Persona": [
            " potential research participant"
        ],
        "Action": [
            "want",
            "learn",
            "research",
            "leave",
            "contact"
        ],
        "Entity": [
            "research",
            "leave",
            "contact",
            "information"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to have a high-level sense of the project timeline, so that I can plan my work.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "have",
            "sense",
            "project",
            "can",
            "plan",
            "work"
        ],
        "Entity": [
            "sense",
            "project",
            "can",
            "plan",
            "work"
        ]
    },
    {
        "Text": "#G11# As a site administrator, I want to understand how other similar organizations are handling visual design, so that I can make informed decisions about what appears to work well and what doesn't.",
        "Persona": [
            " site administrator"
        ],
        "Action": [
            "want",
            "understand",
            "are",
            "design",
            "can",
            "make",
            "appears",
            "work",
            "well"
        ],
        "Entity": [
            "how",
            "organizations",
            "handling",
            "visual",
            "design",
            "can",
            "make",
            "decisions",
            "work",
            "well",
            "doesn't"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to have a platform that allows me to rapidly prototype HTML ideas.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "have",
            "allows"
        ],
        "Entity": [
            "platform",
            "prototype",
            "ideas"
        ]
    },
    {
        "Text": "#G11# As a site administrator, I want to understand how other similar organizations are handling content, so that I can make informed decisions about what appears to work well and what doesn't.",
        "Persona": [
            " site administrator"
        ],
        "Action": [
            "want",
            "understand",
            "are",
            "content",
            "can",
            "make",
            "appears",
            "work",
            "well"
        ],
        "Entity": [
            "how",
            "organizations",
            "handling",
            "content",
            "can",
            "make",
            "decisions",
            "work",
            "well",
            "doesn't"
        ]
    },
    {
        "Text": "#G11# As a user researcher, I want to conduct a user definition workshop with NSF, so that I can better prepare them and the team for future research work.",
        "Persona": [
            " user researcher"
        ],
        "Action": [
            "want",
            "conduct",
            "can",
            "better",
            "prepare",
            "team",
            "research",
            "work"
        ],
        "Entity": [
            "conduct",
            "user",
            "definition",
            "workshop",
            "can",
            "better",
            "team",
            "future",
            "research",
            "work"
        ]
    },
    {
        "Text": "#G11# As an NSF employee, I want to know where the initial in-person meeting will be, so that I can plan on attending.",
        "Persona": [
            " NSF employee"
        ],
        "Action": [
            "want",
            "know",
            "initial",
            "will",
            "can",
            "plan"
        ],
        "Entity": [
            "know",
            "where",
            "initial",
            "meeting",
            "will",
            "can",
            "plan",
            "attending"
        ]
    },
    {
        "Text": "#G11# As a designer, I want to have a style guide / design guide / content guide, so that we have a uniform way of delivering product.",
        "Persona": [
            " designer"
        ],
        "Action": [
            "want",
            "have",
            "style",
            "guide",
            "design",
            "guide",
            "content",
            "guide",
            "have",
            "uniform"
        ],
        "Entity": [
            "style",
            "guide",
            "design",
            "guide",
            "content",
            "guide",
            "uniform",
            "way",
            "product"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to know when meetings are, so that I can plan accordingly.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "know",
            "are",
            "can",
            "plan"
        ],
        "Entity": [
            "know",
            "meetings",
            "can",
            "plan"
        ]
    },
    {
        "Text": "#G11# As a team member, I want to understand how work moves between UX/content > visual design > front end dev for a sprint cycle.",
        "Persona": [
            " team member"
        ],
        "Action": [
            "want",
            "understand",
            "work",
            "moves",
            "design",
            "front",
            "end",
            "sprint",
            "cycle"
        ],
        "Entity": [
            "how",
            "work",
            "moves",
            "visual",
            "design",
            "front",
            "end",
            "sprint",
            "cycle"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to add campers, so that I can keep track of each individual camper.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "add",
            "can",
            "keep",
            "track"
        ],
        "Entity": [
            "able",
            "campers",
            "can",
            "keep",
            "track",
            "individual",
            "camper"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to remove campers if they don't attend the camp anymore, so that I can keep the records organized.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "remove",
            "don't",
            "attend",
            "camp",
            "can",
            "keep",
            "records",
            "organized"
        ],
        "Entity": [
            "able",
            "remove",
            "campers",
            "don't",
            "camp",
            "can",
            "keep",
            "records"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to keep camper records from previous years, so that the amount of work I need to do is lowered. ",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "keep",
            "records",
            "amount",
            "work",
            "need"
        ],
        "Entity": [
            "able",
            "keep",
            "camper",
            "records",
            "years",
            "amount",
            "work",
            "need"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to upload consent forms, so that campers or their parents can easily access the forms.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "upload",
            "consent",
            "forms",
            "parents",
            "can",
            "access",
            "forms"
        ],
        "Entity": [
            "able",
            "consent",
            "forms",
            "campers",
            "parents",
            "can",
            "access",
            "forms"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to keep track of which camper submitted which forms, so that legal issues are avoided.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "keep",
            "track",
            "submitted",
            "forms",
            "issues",
            "are"
        ],
        "Entity": [
            "able",
            "keep",
            "track",
            "camper",
            "forms",
            "issues"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to schedule activities for campers, so that camp workers can easily keep track of who is where at all times.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "schedule",
            "camp",
            "can",
            "keep",
            "track",
            "times"
        ],
        "Entity": [
            "able",
            "schedule",
            "activities",
            "campers",
            "camp",
            "workers",
            "can",
            "keep",
            "track",
            "who",
            "where",
            "all",
            "times"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to automatically create nametags for campers, so that I can lower the amount of work I need to do.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "create",
            "can",
            "lower",
            "amount",
            "work",
            "need"
        ],
        "Entity": [
            "able",
            "campers",
            "can",
            "lower",
            "amount",
            "work",
            "need"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to suspend a camper who had behavioral problems.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "suspend",
            "had"
        ],
        "Entity": [
            "able",
            "camper",
            "who",
            "problems"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to set a reminders related to specific tasks that has to be done.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "set",
            "tasks",
            "has",
            "done"
        ],
        "Entity": [
            "able",
            "set",
            "reminders",
            "specific",
            "tasks"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to assign different positions to the staff members, so that it is possible to organize activities in terms of responsibilities.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "assign",
            "positions",
            "staff",
            "organize",
            "terms"
        ],
        "Entity": [
            "able",
            "assign",
            "positions",
            "staff",
            "members",
            "possible",
            "activities",
            "terms",
            "responsibilities"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to warn a camp worker who I think did his/her job inappropriate.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "warn",
            "camp",
            "think",
            "did",
            "job"
        ],
        "Entity": [
            "able",
            "camp",
            "worker",
            "who",
            "think",
            "job"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to create, modify rules that campers and camp workers has to follow.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "create",
            "modify",
            "rules",
            "camp",
            "has",
            "follow"
        ],
        "Entity": [
            "able",
            "rules",
            "campers",
            "camp",
            "workers",
            "follow"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to keep track of the usage of internal camp facilities, so that I don't create conflicting schedules for the different camp groups.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "keep",
            "track",
            "camp",
            "don't",
            "create",
            "schedules",
            "camp",
            "groups"
        ],
        "Entity": [
            "keep",
            "track",
            "usage",
            "internal",
            "camp",
            "facilities",
            "don't",
            "schedules",
            "camp",
            "groups"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to create an avenue so parents can submit feedback and general concerns, so that I can keep improving the services I provide.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "create",
            "parents",
            "can",
            "submit",
            "general",
            "concerns",
            "can",
            "keep",
            "improving",
            "services",
            "provide"
        ],
        "Entity": [
            "avenue",
            "parents",
            "can",
            "general",
            "concerns",
            "can",
            "keep",
            "services"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to store campers' emergency information in a database, so that I can easily notify the necessary parties in case of an emergency.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "store",
            "can",
            "notify",
            "parties",
            "case"
        ],
        "Entity": [
            "store",
            "emergency",
            "information",
            "database",
            "can",
            "necessary",
            "parties",
            "case",
            "emergency"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to store camper's immediate parent/guardian's information, so that I can easily call to notify them in case a grossly unacceptable behavior.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "store",
            "can",
            "call",
            "notify",
            "case"
        ],
        "Entity": [
            "store",
            "information",
            "can",
            "call",
            "case",
            "behavior"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to provide bi-weekly feedback to camper's parents, so that they can be aware of their child's behavior and performance at camp.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "provide",
            "parents",
            "can",
            "camp"
        ],
        "Entity": [
            "parents",
            "can",
            "behavior",
            "performance",
            "camp"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to make nametags faster, so that I don't have to spend two hours making 200+ nametags",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "make",
            "don't",
            "have",
            "spend"
        ],
        "Entity": [
            "able",
            "make",
            "don't",
            "two",
            "hours",
            "making"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to create a registration form for both staff and kids, so that I can keep organized.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "create",
            "form",
            "staff",
            "kids",
            "can",
            "keep",
            "organized"
        ],
        "Entity": [
            "able",
            "registration",
            "form",
            "staff",
            "kids",
            "can",
            "keep"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to keep my information in one place, so that the admins next year can improve on the previous years.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "keep",
            "place",
            "can",
            "improve"
        ],
        "Entity": [
            "able",
            "keep",
            "information",
            "one",
            "place",
            "admins",
            "year",
            "can",
            "improve",
            "years"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to see medical forms, so that we can be prepared for an allergy attack",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "see",
            "forms",
            "can",
            "attack"
        ],
        "Entity": [
            "able",
            "see",
            "medical",
            "forms",
            "can",
            "allergy",
            "attack"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to notify parents all at once, so that they can be notified of any upcoming events.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "notify",
            "parents",
            "can",
            "notified"
        ],
        "Entity": [
            "able",
            "parents",
            "all",
            "once",
            "can",
            "events"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be quickly log attendance everyday, so that I can track which kids are coming in.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "log",
            "can",
            "track",
            "kids",
            "are"
        ],
        "Entity": [
            "log",
            "attendance",
            "can",
            "track",
            "kids",
            "coming"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to add parents, so that they can enroll their kids at camp.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "add",
            "parents",
            "can",
            "enroll",
            "kids",
            "camp"
        ],
        "Entity": [
            "able",
            "parents",
            "can",
            "kids",
            "camp"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to create groups and add campers to the groups, so that I can easily organize the campers.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "create",
            "groups",
            "add",
            "groups",
            "can",
            "organize"
        ],
        "Entity": [
            "able",
            "groups",
            "campers",
            "groups",
            "can",
            "campers"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to see all my camp groups and the events scheduled for each camp group, so that I can notify counselor of what their group will be doing for the day.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "see",
            "camp",
            "groups",
            "scheduled",
            "camp",
            "group",
            "can",
            "notify",
            "group",
            "will"
        ],
        "Entity": [
            "able",
            "see",
            "all",
            "camp",
            "groups",
            "events",
            "camp",
            "group",
            "can",
            "counselor",
            "group",
            "will",
            "doing",
            "day"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to schedule tasks/activities for a specific camp group, so that I can track each groups daily/weekly and monthly activities.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "schedule",
            "camp",
            "group",
            "can",
            "track",
            "groups"
        ],
        "Entity": [
            "able",
            "schedule",
            "specific",
            "camp",
            "group",
            "can",
            "track",
            "groups",
            "monthly",
            "activities"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to delete tasks/activities I scheduled, so that I can keep the schedule clean of unneeded activities.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "delete",
            "scheduled",
            "can",
            "keep",
            "schedule",
            "clean"
        ],
        "Entity": [
            "able",
            "can",
            "keep",
            "schedule",
            "clean",
            "activities"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to modify tasks/events I scheduled in case there is a change, so that I can always keep the schedule up to date.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "modify",
            "scheduled",
            "case",
            "change",
            "can",
            "keep",
            "schedule",
            "date"
        ],
        "Entity": [
            "able",
            "case",
            "there",
            "change",
            "can",
            "keep",
            "schedule",
            "date"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to modify the information of enrolled campers, so that I can keep the campers information up to date.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "modify",
            "enrolled",
            "can",
            "keep",
            "date"
        ],
        "Entity": [
            "able",
            "information",
            "campers",
            "can",
            "keep",
            "campers",
            "information",
            "date"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to delete campers from the database, so that I can keep my pages free of clutter.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "delete",
            "can",
            "keep",
            "pages",
            "free",
            "clutter"
        ],
        "Entity": [
            "able",
            "campers",
            "database",
            "can",
            "keep",
            "pages",
            "free",
            "clutter"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to modify the information of added parents, so that I can keep parent's information up to date.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "modify",
            "parents",
            "can",
            "keep",
            "date"
        ],
        "Entity": [
            "able",
            "information",
            "parents",
            "can",
            "keep",
            "information",
            "date"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to delete parents from the database, so that I can keep my pages free of unneeded clutter.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "delete",
            "parents",
            "can",
            "keep",
            "pages",
            "free",
            "clutter"
        ],
        "Entity": [
            "able",
            "parents",
            "database",
            "can",
            "keep",
            "pages",
            "free",
            "clutter"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to modify a group's information, so that I can keep the groups up to date.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "modify",
            "can",
            "keep",
            "groups",
            "date"
        ],
        "Entity": [
            "able",
            "information",
            "can",
            "keep",
            "groups",
            "date"
        ]
    },
    {
        "Text": "#G12# As a camp administrator, I want to be able to see only events for a specific group/groups on the event calendar, so that I can easily read the data on the calendar without too much clutter.",
        "Persona": [
            " camp administrator"
        ],
        "Action": [
            "want",
            "see",
            "calendar",
            "can",
            "read",
            "calendar",
            "clutter"
        ],
        "Entity": [
            "able",
            "see",
            "events",
            "specific",
            "event",
            "calendar",
            "can",
            "read",
            "data",
            "calendar",
            "much",
            "clutter"
        ]
    },
    {
        "Text": "#G12# As a parent, I want to be able to see which consent forms I have submitted, so that I can know what I still need to do.",
        "Persona": [
            " parent"
        ],
        "Action": [
            "want",
            "see",
            "consent",
            "forms",
            "have",
            "submitted",
            "can",
            "know",
            "still",
            "need"
        ],
        "Entity": [
            "able",
            "see",
            "consent",
            "forms",
            "can",
            "know",
            "still",
            "need"
        ]
    },
    {
        "Text": "#G12# As a parent, I want to be able to track my child's activity and schedule at camp, so that I can have peace of mind.",
        "Persona": [
            " parent"
        ],
        "Action": [
            "want",
            "track",
            "schedule",
            "camp",
            "can",
            "have",
            "peace",
            "mind"
        ],
        "Entity": [
            "able",
            "track",
            "activity",
            "schedule",
            "camp",
            "can",
            "peace",
            "mind"
        ]
    },
    {
        "Text": "#G12# As a parent, I want to be able to submit various type of forms to the camp management.",
        "Persona": [
            " parent"
        ],
        "Action": [
            "want",
            "submit",
            "type",
            "forms",
            "camp"
        ],
        "Entity": [
            "able",
            "type",
            "forms",
            "camp",
            "management"
        ]
    },
    {
        "Text": "#G12# As a parent, I want to be able to create an account, so that I can sign up my kids for camp online.",
        "Persona": [
            " parent"
        ],
        "Action": [
            "want",
            "create",
            "account",
            "can",
            "sign",
            "kids",
            "camp"
        ],
        "Entity": [
            "able",
            "account",
            "can",
            "sign",
            "kids",
            "camp"
        ]
    },
    {
        "Text": "#G12# As a parent, I want to see which counselors are assigned to my kids, so that I can have peace of mind.",
        "Persona": [
            " parent"
        ],
        "Action": [
            "want",
            "see",
            "are",
            "kids",
            "can",
            "have",
            "peace",
            "mind"
        ],
        "Entity": [
            "see",
            "counselors",
            "kids",
            "can",
            "peace",
            "mind"
        ]
    },
    {
        "Text": "#G12# As a parent, I want to be able to message my child's counselors, so that I can voice my concerns or check on my child's progress.",
        "Persona": [
            " parent"
        ],
        "Action": [
            "want",
            "message",
            "can",
            "voice",
            "concerns",
            "check",
            "progress"
        ],
        "Entity": [
            "able",
            "message",
            "counselors",
            "can",
            "voice",
            "concerns",
            "check",
            "progress"
        ]
    },
    {
        "Text": "#G12# As a parent, I want to be able to sign and submit consent forms online, so that I don't have to deal with my child losing a consent form.",
        "Persona": [
            " parent"
        ],
        "Action": [
            "want",
            "sign",
            "submit",
            "consent",
            "forms",
            "don't",
            "have",
            "deal",
            "consent",
            "form"
        ],
        "Entity": [
            "able",
            "sign",
            "consent",
            "forms",
            "don't",
            "deal",
            "child",
            "consent",
            "form"
        ]
    },
    {
        "Text": "#G12# As a parent, I want to be able to see if I made all the necessary payments.",
        "Persona": [
            " parent"
        ],
        "Action": [
            "want",
            "see",
            "made"
        ],
        "Entity": [
            "able",
            "see",
            "all",
            "necessary",
            "payments"
        ]
    },
    {
        "Text": "#G12# As a parent, I want to be able to share any photos the camp has taken of my child.",
        "Persona": [
            " parent"
        ],
        "Action": [
            "want",
            "share",
            "camp",
            "has",
            "taken"
        ],
        "Entity": [
            "able",
            "share",
            "photos",
            "camp",
            "child"
        ]
    },
    {
        "Text": "#G12# As a parent, I want to be able to connect with the staff in case of an emergency.",
        "Persona": [
            " parent"
        ],
        "Action": [
            "want",
            "connect",
            "staff",
            "case"
        ],
        "Entity": [
            "able",
            "staff",
            "case",
            "emergency"
        ]
    },
    {
        "Text": "#G12# As a parent, I want to be able to enroll my children, so that they can be admitted to camp.",
        "Persona": [
            " parent"
        ],
        "Action": [
            "want",
            "enroll",
            "can",
            "admitted",
            "camp"
        ],
        "Entity": [
            "able",
            "children",
            "can",
            "camp"
        ]
    },
    {
        "Text": "#G12# As a parent, I want to be able to see and edit my enrolled children to the camp year, so that I can know who I already enrolled to camp, who is still pending admission etc.",
        "Persona": [
            " parent"
        ],
        "Action": [
            "want",
            "see",
            "edit",
            "enrolled",
            "camp",
            "can",
            "know",
            "enrolled",
            "camp",
            "still"
        ],
        "Entity": [
            "able",
            "see",
            "edit",
            "children",
            "camp",
            "year",
            "can",
            "know",
            "who",
            "camp",
            "who",
            "still",
            "admission"
        ]
    },
    {
        "Text": "#G12# As a parent, I want to be able to see a schedule of the activities my children are involved in at camp, so that I can be more informed as to what they are doing at camp.",
        "Persona": [
            " parent"
        ],
        "Action": [
            "want",
            "see",
            "schedule",
            "are",
            "camp",
            "can",
            "are",
            "camp"
        ],
        "Entity": [
            "able",
            "see",
            "schedule",
            "activities",
            "children",
            "camp",
            "can",
            "more",
            "doing",
            "camp"
        ]
    },
    {
        "Text": "#G12# As a camp worker, I want to be able to see which campers I am in charge of and where, so that I can make sure I am doing my job properly.",
        "Persona": [
            " camp worker"
        ],
        "Action": [
            "want",
            "see",
            "charge",
            "can",
            "make",
            "job"
        ],
        "Entity": [
            "able",
            "see",
            "campers",
            "charge",
            "where",
            "can",
            "make",
            "doing",
            "job"
        ]
    },
    {
        "Text": "#G12# As a camp worker, I would be able to submit a completion report for the tasks which was assigned to me.",
        "Persona": [
            " camp worker"
        ],
        "Action": [
            "would",
            "submit",
            "report",
            "tasks",
            "was"
        ],
        "Entity": [
            "able",
            "completion",
            "report",
            "tasks"
        ]
    },
    {
        "Text": "#G12# As a camp worker, I'm able to report a camper to the manager with an inappropriate behavior.",
        "Persona": [
            " camp worker"
        ],
        "Action": [
            "report"
        ],
        "Entity": [
            "able",
            "report",
            "camper",
            "manager",
            "behavior"
        ]
    },
    {
        "Text": "#G12# As a camp worker, I'm able to report a list of supplies to the manager that the camp is short of.",
        "Persona": [
            " camp worker"
        ],
        "Action": [
            "report",
            "list",
            "supplies",
            "camp",
            "short"
        ],
        "Entity": [
            "able",
            "report",
            "list",
            "supplies",
            "manager",
            "camp",
            "short"
        ]
    },
    {
        "Text": "#G12# As a camp worker, I'm able to report necessary repairs to the manager that the camp is needed of.",
        "Persona": [
            " camp worker"
        ],
        "Action": [
            "report",
            "repairs",
            "camp"
        ],
        "Entity": [
            "able",
            "report",
            "necessary",
            "repairs",
            "manager",
            "camp"
        ]
    },
    {
        "Text": "#G12# As a camp counselor, I want to be able to take attendance of my assigned kids, so that I can make ensure everybody is accounted for.",
        "Persona": [
            " camp counselor"
        ],
        "Action": [
            "want",
            "take",
            "kids",
            "can",
            "make",
            "ensure"
        ],
        "Entity": [
            "able",
            "take",
            "attendance",
            "kids",
            "can",
            "make",
            "ensure"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to create a new game by entering a name and an optional description, so that I can start inviting estimators.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "create",
            "game",
            "name",
            "can",
            "start"
        ],
        "Entity": [
            "game",
            "entering",
            "name",
            "description",
            "can",
            "start",
            "estimators"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to invite estimators by giving them a URL where they can access the game, so that we can start the game.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "invite",
            "giving",
            "can",
            "access",
            "game",
            "can",
            "start",
            "game"
        ],
        "Entity": [
            "invite",
            "estimators",
            "giving",
            "where",
            "can",
            "access",
            "game",
            "can",
            "start",
            "game"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to start a round by entering an item in a single multi-line text field, so that we can estimate it.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "start",
            "round",
            "item",
            "single",
            "field",
            "can",
            "estimate"
        ],
        "Entity": [
            "start",
            "round",
            "entering",
            "item",
            "single",
            "text",
            "field",
            "can",
            "estimate"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to see all items we try to estimate this session, so that I can answer questions about the current story such as \"does this include ___\".",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "see",
            "items",
            "try",
            "estimate",
            "can",
            "answer",
            "questions",
            "story",
            "include"
        ],
        "Entity": [
            "see",
            "all",
            "items",
            "try",
            "estimate",
            "session",
            "can",
            "answer",
            "questions",
            "current",
            "story"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to select an item to be estimated or re-estimated, so that the team sees that item and can estimate it.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "select",
            "item",
            "estimated",
            "team",
            "sees",
            "item",
            "can",
            "estimate"
        ],
        "Entity": [
            "item",
            "team",
            "sees",
            "item",
            "can",
            "estimate"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to add an item to the list of items to be estimated, so that so that we can be flexible and accommodate situations where we think of a new story while playing.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "add",
            "item",
            "list",
            "items",
            "estimated",
            "can",
            "accommodate",
            "think",
            "story",
            "while"
        ],
        "Entity": [
            "item",
            "list",
            "items",
            "can",
            "situations",
            "where",
            "think",
            "story",
            "while",
            "playing"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to edit an item in the list of items to be estimated, so that I can make it better reflect the team's understanding of the item.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "edit",
            "item",
            "list",
            "items",
            "estimated",
            "can",
            "make",
            "better",
            "reflect",
            "item"
        ],
        "Entity": [
            "edit",
            "item",
            "list",
            "items",
            "can",
            "make",
            "better",
            "understanding",
            "item"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to delete an item from the list of items to be estimated, so that we can remove it and not estimate it.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "delete",
            "item",
            "list",
            "items",
            "estimated",
            "can",
            "remove",
            "estimate"
        ],
        "Entity": [
            "item",
            "list",
            "items",
            "can",
            "remove",
            "estimate"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to show all estimates immediately, so that I can decide to show the estimates that have been given even though not all estimators have given their estimate.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "show",
            "estimates",
            "can",
            "decide",
            "show",
            "estimates",
            "have",
            "been",
            "given",
            "even",
            "have",
            "given",
            "estimate"
        ],
        "Entity": [
            "show",
            "all",
            "estimates",
            "can",
            "show",
            "estimates",
            "given",
            "even",
            "all",
            "estimators",
            "given",
            "estimate"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to accept the average of all estimates, so that we can move on to the next item when we agree.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "accept",
            "average",
            "estimates",
            "can",
            "move",
            "item",
            "agree"
        ],
        "Entity": [
            "average",
            "all",
            "estimates",
            "can",
            "move",
            "item"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to have the \"estimate\" field filled in automatically if all estimators show the same card, so that I can accept it more quickly.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "have",
            "field",
            "show",
            "card",
            "can",
            "accept"
        ],
        "Entity": [
            "field",
            "all",
            "estimators",
            "show",
            "card",
            "can",
            "more"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to enter the agreed-upon estimate, so that we can move on to the next item when we agree.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "enter",
            "estimate",
            "can",
            "move",
            "item",
            "agree"
        ],
        "Entity": [
            "estimate",
            "can",
            "move",
            "item"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to estimate a story we estimated earlier in the session again, so that we can give a new estimate if we feel different about the story after estimating other related stories.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "estimate",
            "story",
            "estimated",
            "can",
            "give",
            "estimate",
            "feel",
            "story",
            "estimating",
            "stories"
        ],
        "Entity": [
            "estimate",
            "story",
            "session",
            "can",
            "give",
            "estimate",
            "feel",
            "story",
            "stories"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to import stories from a spreadsheet, so that I don't have to copy and paste each individual story.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "import",
            "stories",
            "don't",
            "have",
            "copy",
            "paste",
            "story"
        ],
        "Entity": [
            "import",
            "stories",
            "spreadsheet",
            "don't",
            "copy",
            "paste",
            "individual",
            "story"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to copy/paste stories from a spreadsheet, so that I can get started more quickly.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "stories",
            "can",
            "get"
        ],
        "Entity": [
            "stories",
            "spreadsheet",
            "can",
            "more"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to browse through previous games, so that I can find the previous game I'm looking for.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "browse",
            "games",
            "can",
            "find",
            "game"
        ],
        "Entity": [
            "browse",
            "games",
            "can",
            "find",
            "game",
            "looking"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to view a transcript of a game, so that I can see the stories and estimates.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "view",
            "game",
            "can",
            "see",
            "stories",
            "estimates"
        ],
        "Entity": [
            "view",
            "transcript",
            "game",
            "can",
            "see",
            "stories",
            "estimates"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to export a transcript of a game as a HTML file, so that I can save the stories and estimates locally.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "export",
            "game",
            "file",
            "can",
            "save",
            "stories",
            "estimates"
        ],
        "Entity": [
            "export",
            "transcript",
            "game",
            "file",
            "can",
            "save",
            "stories",
            "estimates"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to export a transcript of a game as a CSV file, so that I can further process the stories and estimates.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "export",
            "game",
            "file",
            "can",
            "further",
            "process",
            "stories",
            "estimates"
        ],
        "Entity": [
            "export",
            "transcript",
            "game",
            "file",
            "can",
            "process",
            "stories",
            "estimates"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to delete a game, so that stories and estimates for this game are no longer stored.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "delete",
            "game",
            "stories",
            "estimates",
            "game",
            "are",
            "stored"
        ],
        "Entity": [
            "game",
            "stories",
            "estimates",
            "game"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to create an account for the application by entering my name, email address, a password and a username, so that I can start using the application.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "create",
            "account",
            "name",
            "address",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "account",
            "application",
            "entering",
            "name",
            "address",
            "password",
            "can",
            "start",
            "using",
            "application"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to log in using my account name and password, so that I can start using the application.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "log",
            "using",
            "account",
            "name",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "log",
            "using",
            "account",
            "name",
            "password",
            "can",
            "start",
            "using",
            "application"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to change my account details, so that I can keep my account details up-to-date.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "change",
            "account",
            "details",
            "can",
            "keep",
            "account",
            "details"
        ],
        "Entity": [
            "change",
            "account",
            "details",
            "can",
            "keep",
            "account",
            "details"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to delete my account, so that account information and games are no longer stored.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "delete",
            "account",
            "account",
            "games",
            "are",
            "stored"
        ],
        "Entity": [
            "account",
            "account",
            "information",
            "games"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to see dates and times in my local timezone, so that I don't have to do timezone conversion myself.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "see",
            "dates",
            "times",
            "don't",
            "have"
        ],
        "Entity": [
            "see",
            "dates",
            "times",
            "local",
            "don't",
            "conversion"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to get a password reminder by email, so that I can get back to using the application when I've forgotten my password.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "get",
            "can",
            "get",
            "back",
            "using",
            "forgotten"
        ],
        "Entity": [
            "password",
            "reminder",
            "can",
            "back",
            "using",
            "application",
            "password"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to select whether to have the team estimate with {0, 1/2, 1, 2, 3, 5, 8, etc.} or {0, 1, 2, 4, 8, 16, 32, etc.}, so that the team can use either the modified Fibonacci sequence or powers of 2.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "select",
            "have",
            "team",
            "estimate",
            "team",
            "can",
            "use",
            "modified",
            "sequence",
            "powers"
        ],
        "Entity": [
            "team",
            "estimate",
            "team",
            "can",
            "use",
            "sequence",
            "powers"
        ]
    },
    {
        "Text": "#G13# As a moderator, I want to invite up to 15 estimators, so that we can play with large but not immense teams.",
        "Persona": [
            " moderator"
        ],
        "Action": [
            "want",
            "invite",
            "can",
            "play",
            "teams"
        ],
        "Entity": [
            "invite",
            "estimators",
            "can",
            "play",
            "large",
            "but",
            "teams"
        ]
    },
    {
        "Text": "#G13# As an estimator, I want to join a game by entering my name on the page I received the URL for, so that I can participate.",
        "Persona": [
            " estimator"
        ],
        "Action": [
            "want",
            "join",
            "game",
            "name",
            "page",
            "received",
            "can",
            "participate"
        ],
        "Entity": [
            "join",
            "game",
            "entering",
            "name",
            "page",
            "can",
            "participate"
        ]
    },
    {
        "Text": "#G13# As an estimator, I want to see the item we're estimating, so that I know what I'm giving an estimate for.",
        "Persona": [
            " estimator"
        ],
        "Action": [
            "want",
            "see",
            "item",
            "estimating",
            "know",
            "giving",
            "estimate"
        ],
        "Entity": [
            "see",
            "item",
            "know",
            "giving",
            "estimate"
        ]
    },
    {
        "Text": "#G13# As an estimator, I want to see all items we will try to estimate this session, so that I have a feel for the sizes of the various items.",
        "Persona": [
            " estimator"
        ],
        "Action": [
            "want",
            "see",
            "items",
            "will",
            "try",
            "estimate",
            "have",
            "feel",
            "sizes",
            "items"
        ],
        "Entity": [
            "see",
            "all",
            "items",
            "will",
            "try",
            "estimate",
            "session",
            "feel",
            "sizes",
            "items"
        ]
    },
    {
        "Text": "#G13# As a participant, I want to immediately see that an estimate has been given by a specific estimator, so that I know who has already given an estimate and who we're still waiting for.",
        "Persona": [
            " participant"
        ],
        "Action": [
            "want",
            "see",
            "estimate",
            "has",
            "been",
            "given",
            "know",
            "has",
            "given",
            "estimate",
            "still"
        ],
        "Entity": [
            "see",
            "estimate",
            "given",
            "specific",
            "estimator",
            "know",
            "who",
            "given",
            "estimate",
            "who",
            "still",
            "waiting"
        ]
    },
    {
        "Text": "#G13# As a participant, I want to be shown all estimates at the same time after all estimators have given their estimate, so that I can be sure estimates are independent and not influenced by other estimates given in the same draw.",
        "Persona": [
            " participant"
        ],
        "Action": [
            "want",
            "shown",
            "estimates",
            "time",
            "have",
            "given",
            "estimate",
            "can",
            "estimates",
            "are",
            "influenced",
            "estimates",
            "given",
            "draw"
        ],
        "Entity": [
            "all",
            "estimates",
            "time",
            "all",
            "estimators",
            "given",
            "estimate",
            "can",
            "estimates",
            "independent",
            "estimates",
            "given",
            "draw"
        ]
    },
    {
        "Text": "#G13# As a participant, I want to be able to change my estimate up until the last person selects a card and all are shown, so that I can change my mind based on information I hear.",
        "Persona": [
            " participant"
        ],
        "Action": [
            "want",
            "change",
            "estimate",
            "last",
            "selects",
            "card",
            "are",
            "shown",
            "can",
            "change",
            "mind",
            "based",
            "hear"
        ],
        "Entity": [
            "able",
            "change",
            "estimate",
            "last",
            "person",
            "card",
            "all",
            "can",
            "change",
            "mind",
            "information"
        ]
    },
    {
        "Text": "#G13# As a participant, I want to be able to see each estimator's prior estimates for the story being estimated, so that I can see how his or her opinion has changed so I can ask questions.",
        "Persona": [
            " participant"
        ],
        "Action": [
            "want",
            "see",
            "estimates",
            "story",
            "estimated",
            "can",
            "see",
            "has",
            "changed",
            "can",
            "ask",
            "questions"
        ],
        "Entity": [
            "able",
            "see",
            "prior",
            "estimates",
            "story",
            "being",
            "can",
            "see",
            "how",
            "opinion",
            "can",
            "questions"
        ]
    },
    {
        "Text": "#G13# As a participant, I want to see who gave what estimates during the current round, so that I know this when we're discussing the estimates.",
        "Persona": [
            " participant"
        ],
        "Action": [
            "want",
            "see",
            "gave",
            "estimates",
            "round",
            "know",
            "estimates"
        ],
        "Entity": [
            "see",
            "who",
            "estimates",
            "current",
            "round",
            "know",
            "estimates"
        ]
    },
    {
        "Text": "#G13# As a participant, I want to be able start a two-minute countdown timer that all participants can see, so that I can limit the time spent discussing the estimates when I think we've talked long enough.",
        "Persona": [
            " participant"
        ],
        "Action": [
            "want",
            "start",
            "can",
            "see",
            "can",
            "limit",
            "time",
            "spent",
            "estimates",
            "think",
            "long"
        ],
        "Entity": [
            "able",
            "start",
            "timer",
            "all",
            "participants",
            "can",
            "see",
            "can",
            "limit",
            "time",
            "estimates",
            "think",
            "we've",
            "long",
            "enough"
        ]
    },
    {
        "Text": "#G13# As a participant, I want to have the two-minute timer reset itself as soon as we all play an estimate, so that it's ready for use on the next round.",
        "Persona": [
            " participant"
        ],
        "Action": [
            "want",
            "have",
            "reset",
            "play",
            "estimate",
            "ready",
            "use",
            "round"
        ],
        "Entity": [
            "timer",
            "reset",
            "all",
            "play",
            "estimate",
            "ready",
            "use",
            "round"
        ]
    },
    {
        "Text": "#G13# As a participant, I want to scroll back through the stories and estimates from prior rounds, so that I can use this information when I estimate the item of the current round.",
        "Persona": [
            " participant"
        ],
        "Action": [
            "want",
            "scroll",
            "back",
            "stories",
            "estimates",
            "rounds",
            "can",
            "use",
            "estimate",
            "item",
            "round"
        ],
        "Entity": [
            "scroll",
            "back",
            "stories",
            "estimates",
            "prior",
            "rounds",
            "can",
            "use",
            "information",
            "estimate",
            "item",
            "current",
            "round"
        ]
    },
    {
        "Text": "#G13# As a participant, I want to always have the cards in the same order across multiple draws, so that it's easy to compare estimates.",
        "Persona": [
            " participant"
        ],
        "Action": [
            "want",
            "have",
            "cards",
            "order",
            "draws",
            "easy",
            "compare",
            "estimates"
        ],
        "Entity": [
            "cards",
            "order",
            "multiple",
            "draws",
            "compare",
            "estimates"
        ]
    },
    {
        "Text": "#G13# As a participant, I want to change my estimate as long as the draw has not been completed, so that I can change my mind.",
        "Persona": [
            " participant"
        ],
        "Action": [
            "want",
            "change",
            "estimate",
            "long",
            "draw",
            "has",
            "been",
            "completed",
            "can",
            "change",
            "mind"
        ],
        "Entity": [
            "change",
            "estimate",
            "long",
            "draw",
            "can",
            "change",
            "mind"
        ]
    },
    {
        "Text": "#G13# As a participant, I want to have a small thumbnail photo displayed near where my cards are played, so that the game is more personal because I see who I'm estimating with.",
        "Persona": [
            " participant"
        ],
        "Action": [
            "want",
            "have",
            "near",
            "cards",
            "are",
            "game",
            "see",
            "estimating"
        ],
        "Entity": [
            "small",
            "thumbnail",
            "photo",
            "near",
            "where",
            "cards",
            "game",
            "more",
            "personal",
            "see",
            "who"
        ]
    },
    {
        "Text": "#G13# As a developer, I want to have written a site which is compliant with XHTML and CSS standards, so that as many people as possible can access the site and view it as intended.",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "have",
            "written",
            "site",
            "people",
            "can",
            "access",
            "site",
            "view"
        ],
        "Entity": [
            "written",
            "site",
            "standards",
            "many",
            "people",
            "possible",
            "can",
            "access",
            "site",
            "view",
            "intended"
        ]
    },
    {
        "Text": "#G13# As a developer, I want to have a list of definitions for commonly used terms, so that everyone working on the project can understand each other more easily.",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "have",
            "list",
            "terms",
            "project",
            "can",
            "understand"
        ],
        "Entity": [
            "list",
            "definitions",
            "terms",
            "working",
            "project",
            "can",
            "more"
        ]
    },
    {
        "Text": "#G13# As a developer, I want to have created database indexes, so that the queries run as fast as possible.",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "have",
            "created",
            "indexes",
            "queries",
            "run",
            "fast"
        ],
        "Entity": [
            "database",
            "indexes",
            "queries",
            "run",
            "fast",
            "possible"
        ]
    },
    {
        "Text": "#G13# As a developer, I want to have the application function correctly in Internet Explorer 6 and 7, Firefox 1.5 and 2, and Safari 2, so that as many people as possible can fully use the application.",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "have",
            "function",
            "people",
            "can",
            "use"
        ],
        "Entity": [
            "application",
            "function",
            "internet",
            "explorer",
            "safari",
            "many",
            "people",
            "possible",
            "can",
            "use",
            "application"
        ]
    },
    {
        "Text": "#G13# As a developer, I want to have the site comply with the W3C accessibility guidelines where possible, so that people with accessibility issues can use the application.",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "have",
            "site",
            "comply",
            "people",
            "issues",
            "can",
            "use"
        ],
        "Entity": [
            "site",
            "accessibility",
            "guidelines",
            "where",
            "possible",
            "people",
            "accessibility",
            "issues",
            "can",
            "use",
            "application"
        ]
    },
    {
        "Text": "#G13# As a user, I want to have the application respond quickly to my actions, so that I don't get bored.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "respond",
            "don't",
            "get",
            "bored"
        ],
        "Entity": [
            "application",
            "respond",
            "actions",
            "don't"
        ]
    },
    {
        "Text": "#G13# As a user, I want to be able to use Unicode, so that I can use any language I like.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "use",
            "can",
            "use",
            "like"
        ],
        "Entity": [
            "able",
            "use",
            "can",
            "use",
            "language",
            "like"
        ]
    },
    {
        "Text": "#G13# As a user, I want to see sensible and predictable URLs, so that the application feels logical and transparent.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "see",
            "feels"
        ],
        "Entity": [
            "see",
            "sensible",
            "application",
            "feels"
        ]
    },
    {
        "Text": "#G13# As a user, I want to have nice error pages when something goes wrong, so that I can trust the system and its developers.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "pages",
            "goes",
            "wrong",
            "can",
            "trust"
        ],
        "Entity": [
            "nice",
            "error",
            "pages",
            "something",
            "goes",
            "wrong",
            "can",
            "trust",
            "system",
            "developers"
        ]
    },
    {
        "Text": "#G13# As a Researcher, I want results to be stored in a non-identifiable way, so that I can study the data to see things like whether estimates converged around the first opinion given by \"estimator A\" for example.",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "results",
            "stored",
            "can",
            "study",
            "see",
            "like",
            "estimates",
            "converged",
            "given",
            "example"
        ],
        "Entity": [
            "results",
            "way",
            "can",
            "study",
            "data",
            "see",
            "things",
            "like",
            "estimates",
            "first",
            "opinion",
            "given",
            "example"
        ]
    },
    {
        "Text": "#G13# As a Mike, I want to be able to see some metrics on use of the game, so that I can see how much it is being used.",
        "Persona": [
            " Mike"
        ],
        "Action": [
            "want",
            "see",
            "use",
            "game",
            "can",
            "see"
        ],
        "Entity": [
            "able",
            "see",
            "metrics",
            "use",
            "game",
            "can",
            "see",
            "how",
            "much",
            "being"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to publish a dataset, so that I can view just the dataset with a few people.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "publish",
            "can",
            "view",
            "people"
        ],
        "Entity": [
            "can",
            "view",
            "few",
            "people"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to publish a dataset, so that I can share the dataset publicly with everyone.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "publish",
            "can",
            "share"
        ],
        "Entity": [
            "can",
            "share"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to sign up for an account, so that that I can publish my data package to the registry and to have a publisher account to publish my data package under.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "sign",
            "account",
            "can",
            "publish",
            "package",
            "have",
            "account",
            "publish",
            "package"
        ],
        "Entity": [
            "sign",
            "account",
            "can",
            "data",
            "package",
            "registry",
            "publisher",
            "account",
            "data",
            "package"
        ]
    },
    {
        "Text": "#G14# As a Visitor, I want to sign up via github or google, so that that I don't have to enter lots of information and remember my password for yet another website.",
        "Persona": [
            " Visitor"
        ],
        "Action": [
            "want",
            "sign",
            "don't",
            "have",
            "enter",
            "lots",
            "remember"
        ],
        "Entity": [
            "sign",
            "don't",
            "lots",
            "information",
            "password"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to know what do next after signing up, so that that I can get going quickly.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "know",
            "can",
            "get"
        ],
        "Entity": [
            "know",
            "signing",
            "can",
            "going"
        ]
    },
    {
        "Text": "#G14# As an Admin, I want to invite someone to join the platform, so that that they can start contributing or using data.",
        "Persona": [
            " Admin"
        ],
        "Action": [
            "want",
            "invite",
            "join",
            "can",
            "start",
            "contributing",
            "using"
        ],
        "Entity": [
            "invite",
            "someone",
            "join",
            "platform",
            "can",
            "start",
            "using",
            "data"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to import my data package into the registry, so that my data has a permanent online home to access. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "import",
            "package",
            "has",
            "home",
            "access"
        ],
        "Entity": [
            "import",
            "data",
            "package",
            "registry",
            "data",
            "permanent",
            "home",
            "access"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to configure my client, so that I can start publishing data packages.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "configure",
            "can",
            "start",
            "packages"
        ],
        "Entity": [
            "client",
            "can",
            "start",
            "publishing",
            "data",
            "packages"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to use a publish command to update a data package that is already in the registry, so that it appears there.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "use",
            "publish",
            "command",
            "update",
            "package",
            "appears"
        ],
        "Entity": [
            "use",
            "command",
            "update",
            "data",
            "package",
            "registry",
            "there"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to unpublish a data package, so that it is no longer visible to anyone.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "package"
        ],
        "Entity": [
            "data",
            "package",
            "visible"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to permanently delete a data package, so that that it no longer takes up storage space.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "delete",
            "package",
            "takes",
            "space"
        ],
        "Entity": [
            "data",
            "package",
            "takes",
            "storage",
            "space"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to validate the data I am about to publish to the registry, so that that I publish good data and know that I am doing.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "validate",
            "publish",
            "publish",
            "know"
        ],
        "Entity": [
            "data",
            "registry",
            "good",
            "data",
            "know",
            "doing"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to data to be validated when I publish it, so that that I know immediately if I have accidentally broken my data or have bugs and can take action to correct.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "publish",
            "know",
            "have",
            "broken",
            "have",
            "bugs",
            "can",
            "take",
            "correct"
        ],
        "Entity": [
            "data",
            "know",
            "data",
            "bugs",
            "can",
            "take",
            "action"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to know that the data I am downloading is good and can be relied on, so that that I don't have to check it myself or run into annoying bugs later on.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "know",
            "can",
            "relied",
            "don't",
            "have",
            "check",
            "run",
            "bugs"
        ],
        "Entity": [
            "know",
            "data",
            "good",
            "can",
            "don't",
            "check",
            "run",
            "annoying",
            "bugs"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to publish a data package where its resource data is stored on my servers but the registry caches a copy of that data, so that that if my data is lost or gets broken I still have a copy people can use.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "publish",
            "package",
            "stored",
            "caches",
            "copy",
            "gets",
            "broken",
            "still",
            "have",
            "copy",
            "people",
            "can",
            "use"
        ],
        "Entity": [
            "data",
            "package",
            "where",
            "resource",
            "data",
            "servers",
            "but",
            "registry",
            "caches",
            "copy",
            "data",
            "data",
            "lost",
            "gets",
            "still",
            "copy",
            "people",
            "can",
            "use"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to be able to get the data for a data package even if the original data has been moved or removed, so that that I can still use is and my app or analysis keeps working.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "even",
            "has",
            "been",
            "moved",
            "can",
            "still",
            "use",
            "keeps"
        ],
        "Entity": [
            "able",
            "data",
            "data",
            "package",
            "even",
            "original",
            "data",
            "can",
            "still",
            "use",
            "analysis",
            "keeps",
            "working"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to publish a data package in the UI, so that that it is available and published.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "publish",
            "package"
        ],
        "Entity": [
            "data",
            "package"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to create a data package in the UI so that it is available and published.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "create",
            "package"
        ],
        "Entity": [
            "data",
            "package"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to be able to restore the deleted data package via cli, so that that it is back visible and available to view, download.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "restore",
            "deleted",
            "package",
            "back",
            "view",
            "download"
        ],
        "Entity": [
            "able",
            "data",
            "package",
            "back",
            "visible",
            "view"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to undelete the deleted data packages, so that that the deleted data packages is now visible again.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "deleted",
            "packages",
            "deleted",
            "packages"
        ],
        "Entity": [
            "data",
            "packages",
            "data",
            "packages",
            "now",
            "visible"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to be able to preview the views of the current data package using cli prior to publishing, so that that I can refine the json declarations of datapackage view section to achieve a great looking result.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "preview",
            "views",
            "package",
            "using",
            "can",
            "refine",
            "view",
            "section",
            "achieve",
            "result"
        ],
        "Entity": [
            "able",
            "preview",
            "views",
            "current",
            "data",
            "package",
            "using",
            "prior",
            "publishing",
            "can",
            "declarations",
            "view",
            "section",
            "great",
            "looking",
            "result"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to view a data package online, so that I can get a sense of whether this is the dataset I want.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "view",
            "package",
            "can",
            "get",
            "sense",
            "want"
        ],
        "Entity": [
            "view",
            "data",
            "package",
            "can",
            "sense"
        ]
    },
    {
        "Text": "#G14# As a publisher, I want to show the world how my published data is, so that that it immediately catches consumer's attention. ",
        "Persona": [
            " publisher"
        ],
        "Action": [
            "want",
            "show",
            "catches"
        ],
        "Entity": [
            "show",
            "world",
            "how",
            "data",
            "catches",
            "attention"
        ]
    },
    {
        "Text": "#G14# As a consumer, I want to view the data package, so that that I can get a sense of whether I want this dataset or not.",
        "Persona": [
            " consumer"
        ],
        "Action": [
            "want",
            "view",
            "package",
            "can",
            "get",
            "sense",
            "want"
        ],
        "Entity": [
            "view",
            "data",
            "package",
            "can",
            "sense"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to preview a datapackage I have prepared, so that that I can check it works and share the results.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "preview",
            "have",
            "can",
            "check",
            "works",
            "share",
            "results"
        ],
        "Entity": [
            "preview",
            "can",
            "check",
            "works",
            "share",
            "results"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to see how much the data has been downloaded, so that that I can choose most popular in the case when there are several alternatives for my use case.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "see",
            "has",
            "been",
            "can",
            "choose",
            "case",
            "are",
            "use",
            "case"
        ],
        "Entity": [
            "see",
            "how",
            "much",
            "data",
            "can",
            "most",
            "case",
            "there",
            "alternatives",
            "use",
            "case"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to see real examples of published packages so that I can understand how useful and simple the datapackage format and the registry is.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "see",
            "examples",
            "packages",
            "can",
            "understand",
            "format"
        ],
        "Entity": [
            "see",
            "real",
            "examples",
            "packages",
            "can",
            "how",
            "useful",
            "simple",
            "format",
            "registry"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to see some example data packages quickly, so that I get a sense of what is on this site and if it is useful to look further.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "see",
            "example",
            "packages",
            "get",
            "sense",
            "site",
            "look",
            "further"
        ],
        "Entity": [
            "see",
            "example",
            "data",
            "packages",
            "sense",
            "site",
            "useful",
            "look"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to search data packages, so that that I can find the ones I want.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "search",
            "packages",
            "can",
            "find",
            "want"
        ],
        "Entity": [
            "search",
            "data",
            "packages",
            "can",
            "find",
            "ones"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to search based on description of data package, so that that I can find package which related to some key words.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "search",
            "based",
            "package",
            "can",
            "find",
            "package",
            "key",
            "words"
        ],
        "Entity": [
            "search",
            "description",
            "data",
            "package",
            "can",
            "find",
            "package",
            "key",
            "words"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to download the data package in one file, so that that I don't have to download descriptor and each resource by hand.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "download",
            "package",
            "file",
            "don't",
            "have",
            "download",
            "hand"
        ],
        "Entity": [
            "data",
            "package",
            "one",
            "file",
            "don't",
            "resource",
            "hand"
        ]
    },
    {
        "Text": "#G14# As a Developer, I want to use data package as a node lib in my project, so that that I can depend on it using my normal dependency framework.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "use",
            "package",
            "project",
            "can",
            "depend",
            "using"
        ],
        "Entity": [
            "use",
            "data",
            "package",
            "node",
            "lib",
            "project",
            "can",
            "using",
            "normal",
            "dependency",
            "framework"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to load a Data Package from R, so that that I can immediately start playing with it.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "load",
            "package",
            "can",
            "start"
        ],
        "Entity": [
            "load",
            "data",
            "package",
            "can",
            "start",
            "playing"
        ]
    },
    {
        "Text": "#G14# As a Data Analyst I want to download a data package, so that that I can study it and wrangle with it to infer new data or generate new insights.",
        "Persona": [
            " Data Analyst I want to download a data package"
        ],
        "Action": [
            "can",
            "study",
            "wrangle",
            "infer",
            "generate"
        ],
        "Entity": [
            "can",
            "study",
            "wrangle",
            "data",
            "insights"
        ]
    },
    {
        "Text": "#G14# As a Data Analyst, I want to update previously downloaded data package, so that that I can work with the most recent data.",
        "Persona": [
            " Data Analyst"
        ],
        "Action": [
            "want",
            "update",
            "package",
            "can",
            "work"
        ],
        "Entity": [
            "update",
            "data",
            "package",
            "can",
            "work",
            "most",
            "data"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to download a DataPackage's data one coherent SQLite database, so that that I can get it easily in one form.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "download",
            "can",
            "get",
            "form"
        ],
        "Entity": [
            "data",
            "one",
            "database",
            "can",
            "one",
            "form"
        ]
    },
    {
        "Text": "#G14# As a Data Analyst, I want to compare different versions of some datapackage locally, so that that I can see schema changes clearly and adjust my analytics code to the desired schema version.",
        "Persona": [
            " Data Analyst"
        ],
        "Action": [
            "want",
            "compare",
            "can",
            "see",
            "changes",
            "adjust",
            "code"
        ],
        "Entity": [
            "compare",
            "versions",
            "can",
            "see",
            "schema",
            "changes",
            "analytics",
            "code",
            "schema",
            "version"
        ]
    },
    {
        "Text": "#G14# As a Web Developer, I want to be able to install multiple versions of the same datapackage separately, so that that all my projects could be developed independently and deployed locally.",
        "Persona": [
            " Web Developer"
        ],
        "Action": [
            "want",
            "install",
            "projects",
            "could",
            "developed"
        ],
        "Entity": [
            "able",
            "multiple",
            "versions",
            "all",
            "projects"
        ]
    },
    {
        "Text": "#G14# As a Developer, I want to list all DataPackages requirements for my project in the file and pin the exact versions of any DataPackage that my project depends on, so that that the project can be deterministically deployed locally and won't break because of the DataPackage schema changes. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "list",
            "project",
            "file",
            "pin",
            "exact",
            "project",
            "depends",
            "project",
            "can",
            "break",
            "changes"
        ],
        "Entity": [
            "list",
            "all",
            "requirements",
            "project",
            "file",
            "pin",
            "versions",
            "project",
            "project",
            "can",
            "break",
            "schema",
            "changes"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to tag datapackage to create a snapshot of data on the registry server, so that that consumers can refer to it.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "tag",
            "create",
            "can",
            "refer"
        ],
        "Entity": [
            "tag",
            "snapshot",
            "data",
            "registry",
            "server",
            "consumers",
            "can",
            "refer"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to be warned that a tag exists when I try to overwrite it, so that that I don't accidentally overwrite stable tagged data which is relied on by consumers.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "tag",
            "exists",
            "try",
            "overwrite",
            "don't",
            "overwrite",
            "stable",
            "tagged",
            "relied"
        ],
        "Entity": [
            "tag",
            "try",
            "don't",
            "stable",
            "data",
            "consumers"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to be able to overwrite the previously tagged datapackage, so that that I can fix it if I mess up.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "overwrite",
            "tagged",
            "can",
            "fix",
            "mess"
        ],
        "Entity": [
            "able",
            "can",
            "fix",
            "mess"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to version my Data Package and keep multiple versions around including older versions, so that that I do not break consumer systems when I change my datapackage.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "package",
            "keep",
            "including",
            "break",
            "change"
        ],
        "Entity": [
            "version",
            "data",
            "package",
            "keep",
            "multiple",
            "versions",
            "versions",
            "break",
            "consumer",
            "systems",
            "change"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to be able to get access to a previous version I tagged, so that that I can return to it and review it. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "get",
            "access",
            "tagged",
            "can",
            "return",
            "review"
        ],
        "Entity": [
            "able",
            "access",
            "version",
            "can",
            "return",
            "review"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to know full details of how the data package schema has changed, so that that I can adjust my scripts to handle it.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "know",
            "full",
            "details",
            "package",
            "has",
            "changed",
            "can",
            "adjust",
            "scripts",
            "handle"
        ],
        "Entity": [
            "know",
            "full",
            "details",
            "how",
            "data",
            "package",
            "schema",
            "can",
            "scripts",
            "handle"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to get a sense of the age of the datapackage that I have downloaded before, so that that I can decide if I should update or not.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "get",
            "sense",
            "age",
            "have",
            "can",
            "decide",
            "should",
            "update"
        ],
        "Entity": [
            "sense",
            "age",
            "can",
            "update"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to view a Datapackage at a particular version online, so that that I can present/discuss the particular data timeslice of interest with other people.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "view",
            "can",
            "interest",
            "people"
        ],
        "Entity": [
            "view",
            "particular",
            "version",
            "can",
            "particular",
            "data",
            "interest",
            "people"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to download a Data package at a particular version, so that that I know it is compatible with my scripts and system.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "download",
            "package",
            "know",
            "scripts"
        ],
        "Entity": [
            "data",
            "package",
            "particular",
            "version",
            "know",
            "scripts",
            "system"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to be notified of changes to a package I care about, so that that I can check out what has changed and take action.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "notified",
            "changes",
            "package",
            "care",
            "can",
            "check",
            "out",
            "has",
            "changed",
            "take"
        ],
        "Entity": [
            "changes",
            "package",
            "care",
            "can",
            "check",
            "out",
            "take",
            "action"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to see how active the site is, so that I can decide if I should get involved.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "see",
            "site",
            "can",
            "decide",
            "should",
            "get"
        ],
        "Entity": [
            "see",
            "how",
            "active",
            "site",
            "can"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to browse and find publishers, so that that I can find interesting publishers and their packages.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "browse",
            "find",
            "can",
            "find",
            "packages"
        ],
        "Entity": [
            "browse",
            "find",
            "publishers",
            "can",
            "find",
            "publishers",
            "packages"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to see a publisher's profile, so that that I can discover their packages and get a sense of how active and good they are.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "see",
            "profile",
            "can",
            "discover",
            "packages",
            "get",
            "sense",
            "are"
        ],
        "Entity": [
            "see",
            "profile",
            "can",
            "packages",
            "sense",
            "how",
            "active",
            "good"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to view a publisher's profile, so that that I can see who is behind a particular package or to see what other packages they produce. ",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "view",
            "profile",
            "can",
            "see",
            "package",
            "see",
            "packages",
            "produce"
        ],
        "Entity": [
            "view",
            "profile",
            "can",
            "see",
            "who",
            "behind",
            "particular",
            "package",
            "see",
            "packages",
            "produce"
        ]
    },
    {
        "Text": "#G14# As a Consumer, I want to search among all data packages owned by a publisher, so that that I can easily find one data package amongst all the data packages by this publisher.",
        "Persona": [
            " Consumer"
        ],
        "Action": [
            "want",
            "search",
            "packages",
            "can",
            "find",
            "package",
            "packages"
        ],
        "Entity": [
            "search",
            "all",
            "data",
            "packages",
            "publisher",
            "can",
            "find",
            "one",
            "data",
            "package",
            "all",
            "data",
            "packages",
            "publisher"
        ]
    },
    {
        "Text": "#G14# As an Owner, I want to edit my profile, so that that it is updated with new information.",
        "Persona": [
            " Owner"
        ],
        "Action": [
            "want",
            "edit",
            "profile",
            "updated"
        ],
        "Entity": [
            "edit",
            "profile",
            "information"
        ]
    },
    {
        "Text": "#G14# As an Owner, I want to invite an existing user, so that the user can become a member of my publisher.",
        "Persona": [
            " Owner"
        ],
        "Action": [
            "want",
            "invite",
            "can",
            "become"
        ],
        "Entity": [
            "invite",
            "user",
            "user",
            "can",
            "member",
            "publisher"
        ]
    },
    {
        "Text": "#G14# As an owner, I want to invite someone using their email to sign up and become a member of my Publisher, so that that they are authorized to publish data packages under my Publisher.",
        "Persona": [
            " owner"
        ],
        "Action": [
            "want",
            "invite",
            "using",
            "sign",
            "become",
            "are",
            "publish",
            "packages"
        ],
        "Entity": [
            "invite",
            "someone",
            "using",
            "sign",
            "member",
            "publisher",
            "data",
            "packages",
            "publisher"
        ]
    },
    {
        "Text": "#G14# As an owner, I want to remove someone from membership in my publisher, so that they no longer have ability to publish or modify my data packages.",
        "Persona": [
            " owner"
        ],
        "Action": [
            "want",
            "remove",
            "have",
            "publish",
            "modify",
            "packages"
        ],
        "Entity": [
            "remove",
            "someone",
            "membership",
            "publisher",
            "ability",
            "data",
            "packages"
        ]
    },
    {
        "Text": "#G14# As an owner, I want to view all the people in my organization and what roles they have, so that that I can change these if I want.",
        "Persona": [
            " owner"
        ],
        "Action": [
            "want",
            "view",
            "people",
            "have",
            "can",
            "change",
            "want"
        ],
        "Entity": [
            "view",
            "all",
            "people",
            "organization",
            "roles",
            "can",
            "change"
        ]
    },
    {
        "Text": "#G14# As an owner, I want to make a user an owner, so that they have full control.",
        "Persona": [
            " owner"
        ],
        "Action": [
            "want",
            "make",
            "have",
            "full",
            "control"
        ],
        "Entity": [
            "make",
            "user",
            "owner",
            "full",
            "control"
        ]
    },
    {
        "Text": "#G14# As an owner, I want to remove a user as an owner, so that they are just a member and no longer have full control.",
        "Persona": [
            " owner"
        ],
        "Action": [
            "want",
            "remove",
            "are",
            "have",
            "full",
            "control"
        ],
        "Entity": [
            "remove",
            "user",
            "owner",
            "member",
            "full",
            "control"
        ]
    },
    {
        "Text": "#G14# As an Admin, I want to set key configuration parameters for my site deployment, so that that I can change key information like the site title.",
        "Persona": [
            " Admin"
        ],
        "Action": [
            "want",
            "set",
            "key",
            "site",
            "can",
            "change",
            "key",
            "like",
            "site",
            "title"
        ],
        "Entity": [
            "set",
            "key",
            "configuration",
            "parameters",
            "site",
            "deployment",
            "can",
            "change",
            "key",
            "information",
            "like",
            "site",
            "title"
        ]
    },
    {
        "Text": "#G14# As an Admin, I want to see key metrics about usage such as users, API usage, downloads, so that that I know how things are going.",
        "Persona": [
            " Admin"
        ],
        "Action": [
            "want",
            "see",
            "key",
            "downloads",
            "know",
            "are"
        ],
        "Entity": [
            "see",
            "key",
            "metrics",
            "usage",
            "users",
            "usage",
            "know",
            "how",
            "things",
            "going"
        ]
    },
    {
        "Text": "#G14# As an Admin, I want to have a pricing plan and billing system, so that that I can charge users and make my platform sustainable.",
        "Persona": [
            " Admin"
        ],
        "Action": [
            "want",
            "have",
            "pricing",
            "plan",
            "can",
            "charge",
            "make"
        ],
        "Entity": [
            "pricing",
            "plan",
            "billing",
            "system",
            "can",
            "charge",
            "users",
            "make",
            "platform"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to know if this site has a pricing plan and what the prices are, so that that I can work out what this will cost me in the future and have a sense that these guys are sustainable. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "know",
            "site",
            "has",
            "pricing",
            "plan",
            "prices",
            "are",
            "can",
            "work",
            "out",
            "will",
            "cost",
            "have",
            "sense",
            "guys",
            "are"
        ],
        "Entity": [
            "know",
            "site",
            "pricing",
            "plan",
            "prices",
            "can",
            "work",
            "out",
            "will",
            "cost",
            "future",
            "sense",
            "guys"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to sign up for a given pricing plan, so that that I am entitled to what it allows.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "sign",
            "given",
            "pricing",
            "plan",
            "entitled",
            "allows"
        ],
        "Entity": [
            "sign",
            "given",
            "pricing",
            "plan"
        ]
    },
    {
        "Text": "#G14# As a Publisher, I want to have private data packages, so that I can share just with my team.",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "have",
            "packages",
            "can",
            "share",
            "team"
        ],
        "Entity": [
            "private",
            "data",
            "packages",
            "can",
            "share",
            "team"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to set a date after which data will expire and be deleted or hidden then deleted.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "set",
            "date",
            "will",
            "expire",
            "deleted",
            "hidden",
            "deleted"
        ],
        "Entity": [
            "set",
            "date",
            "data",
            "will",
            "then"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to see the scheduled records deletion date be displayed on the item and component pages.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "see",
            "scheduled",
            "records",
            "date",
            "item",
            "pages"
        ],
        "Entity": [
            "see",
            "records",
            "deletion",
            "date",
            "item",
            "component",
            "pages"
        ]
    },
    {
        "Text": "#G16# As a repository manager, I want to track who is financially responsible for each item in the repository, who should probably be a person contact including name, phone, email, maybe title and address.",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "track",
            "item",
            "should",
            "contact",
            "including",
            "name",
            "phone",
            "title",
            "address"
        ],
        "Entity": [
            "track",
            "who",
            "responsible",
            "item",
            "repository",
            "who",
            "person",
            "contact",
            "name",
            "phone",
            "title",
            "address"
        ]
    },
    {
        "Text": "#G16# As a repository manager, I want to be able t run a report periodically showing the storage consumed by each financial contact.",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "run",
            "report",
            "consumed",
            "contact"
        ],
        "Entity": [
            "able",
            "run",
            "report",
            "showing",
            "storage",
            "contact"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to map an item or items from one collection to another, so that an item may administratively belong to one collection but could appear in other collections.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "map",
            "item",
            "items",
            "item",
            "may",
            "belong",
            "could",
            "appear"
        ],
        "Entity": [
            "map",
            "item",
            "items",
            "one",
            "collection",
            "item",
            "may",
            "one",
            "collection",
            "but",
            "collections"
        ]
    },
    {
        "Text": "#G16# As a faculty member, I want to add a date delimiter to a search string, so that I can limit a search to return only results from before, after, or between a given date or dates.",
        "Persona": [
            " faculty member"
        ],
        "Action": [
            "want",
            "add",
            "date",
            "search",
            "string",
            "can",
            "limit",
            "search",
            "return",
            "results",
            "given",
            "date",
            "dates"
        ],
        "Entity": [
            "date",
            "search",
            "string",
            "can",
            "limit",
            "search",
            "return",
            "results",
            "given",
            "date",
            "dates"
        ]
    },
    {
        "Text": "#G16# As a developer, I want to determine if we can use the in-built Fedora 4 event audit services.",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "determine",
            "can",
            "use",
            "audit",
            "services"
        ],
        "Entity": [
            "can",
            "use",
            "fedora",
            "event",
            "audit",
            "services"
        ]
    },
    {
        "Text": "#G16# As a DPC, I want events to be created when a publication is published and unpublished, who did it, comment, so that I can record when and why something was made unavailable.  ",
        "Persona": [
            " DPC"
        ],
        "Action": [
            "want",
            "created",
            "did",
            "comment",
            "can",
            "record",
            "was",
            "made"
        ],
        "Entity": [
            "events",
            "publication",
            "who",
            "comment",
            "can",
            "record",
            "why",
            "something"
        ]
    },
    {
        "Text": "#G16# As a repository manager, I want to specify the remote replication policy for each collection.",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "specify"
        ],
        "Entity": [
            "remote",
            "replication",
            "policy",
            "collection"
        ]
    },
    {
        "Text": "#G16# As a repository manager, I want to elect to either replicate remotely or not and possibly to replicate beyond the primary remote site.",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "elect",
            "replicate",
            "replicate",
            "site"
        ],
        "Entity": [
            "elect",
            "beyond",
            "primary",
            "remote",
            "site"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to have the repository queue my collection for replication upon ingest to our remote storage site and to display the remote replication status in each item and component page in the staff interface.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "have",
            "queue",
            "ingest",
            "site",
            "display",
            "item",
            "page",
            "staff"
        ],
        "Entity": [
            "repository",
            "queue",
            "collection",
            "replication",
            "remote",
            "storage",
            "site",
            "display",
            "remote",
            "replication",
            "status",
            "item",
            "component",
            "page",
            "staff",
            "interface"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to have a summary of all remote replication status at collection level on my dashboard.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "have",
            "level"
        ],
        "Entity": [
            "summary",
            "all",
            "remote",
            "replication",
            "status",
            "collection",
            "level",
            "dashboard"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to have my collection be encrypted with a key maintained on that server, a checksum made and stored of the encrypted file, and the encrypted file replicated to our remote storage site.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "have",
            "key",
            "made",
            "stored",
            "file",
            "file",
            "site"
        ],
        "Entity": [
            "collection",
            "key",
            "server",
            "file",
            "file",
            "remote",
            "storage",
            "site"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to lift an embargo for an object in a simple way.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "lift",
            "embargo",
            "object"
        ],
        "Entity": [
            "lift",
            "embargo",
            "object",
            "simple",
            "way"
        ]
    },
    {
        "Text": "#G16# As a repoadmin, I want to have Symplectic Elements bidirectionally communicate and integrate with DDR, which  provide a Fedora Connector and Emory is using a hidden Fedora instance that Hydra collects objects for.",
        "Persona": [
            " repoadmin"
        ],
        "Action": [
            "want",
            "have",
            "communicate",
            "integrate",
            "provide",
            "using",
            "hidden",
            "instance",
            "collects",
            "objects"
        ],
        "Entity": [
            "elements",
            "fedora",
            "connector",
            "using",
            "fedora",
            "instance",
            "hydra",
            "collects",
            "objects"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to have items be made available under the permissions they were configured once the embargo date has been reached.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "have",
            "items",
            "made",
            "were",
            "embargo",
            "date",
            "has",
            "been"
        ],
        "Entity": [
            "items",
            "permissions",
            "once",
            "embargo",
            "date"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to create deposit forms specific to the collection.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "create",
            "deposit",
            "forms"
        ],
        "Entity": [
            "deposit",
            "forms",
            "specific",
            "collection"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to allow some collections the option of setting an embargo date at deposit.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "allow",
            "embargo",
            "date",
            "deposit"
        ],
        "Entity": [
            "collections",
            "option",
            "setting",
            "embargo",
            "date",
            "deposit"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to have item metadata to be discoverable while the item is under embargo.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "have",
            "item",
            "while",
            "item",
            "embargo"
        ],
        "Entity": [
            "item",
            "while",
            "item",
            "embargo"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to have the item to be allowed under the access permissions set on the object after the embargo data is reached.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "have",
            "item",
            "access",
            "set",
            "object",
            "embargo"
        ],
        "Entity": [
            "item",
            "access",
            "permissions",
            "set",
            "object",
            "embargo",
            "data"
        ]
    },
    {
        "Text": "#G16# As a repoadmin, I want to have users to be presented with a license or a selection of licenses, specific to the collection, and deposit to be denied if the submitter does not accept the license.",
        "Persona": [
            " repoadmin"
        ],
        "Action": [
            "want",
            "have",
            "license",
            "licenses",
            "deposit",
            "denied",
            "does",
            "accept",
            "license"
        ],
        "Entity": [
            "users",
            "license",
            "selection",
            "licenses",
            "specific",
            "collection",
            "deposit",
            "does",
            "license"
        ]
    },
    {
        "Text": "#G16# As a repoadmin, I want to have the license be recorded in metadata and displayed alongside the item.",
        "Persona": [
            " repoadmin"
        ],
        "Action": [
            "want",
            "have",
            "license",
            "item"
        ],
        "Entity": [
            "license",
            "item"
        ]
    },
    {
        "Text": "#G16# As a DigitalRecords Archivist, I want to have a method to batch ingest ETDs we receive from ProQuest.",
        "Persona": [
            " DigitalRecords Archivist"
        ],
        "Action": [
            "want",
            "have",
            "batch",
            "ingest",
            "receive"
        ],
        "Entity": [
            "method",
            "batch"
        ]
    },
    {
        "Text": "#G16# As a DigitalRecords Archivist, I want to have the batch ingest tool to recognize and set embargoes, permissions for embargoed items should be allow everyone to view metadata, and collection curator and repository administrators to download the files.",
        "Persona": [
            " DigitalRecords Archivist"
        ],
        "Action": [
            "want",
            "have",
            "batch",
            "ingest",
            "tool",
            "recognize",
            "set",
            "embargoes",
            "items",
            "should",
            "allow",
            "view",
            "download",
            "files"
        ],
        "Entity": [
            "batch",
            "tool",
            "set",
            "embargoes",
            "permissions",
            "items",
            "view",
            "collection",
            "curator",
            "repository",
            "administrators",
            "files"
        ]
    },
    {
        "Text": "#G16# As a DigitalRecords Archivist, I want to have the repository to lift embargoes on the release date and set the access controls to the configuration set on item on that date.",
        "Persona": [
            " DigitalRecords Archivist"
        ],
        "Action": [
            "want",
            "have",
            "lift",
            "embargoes",
            "release",
            "date",
            "set",
            "access",
            "controls",
            "set",
            "item",
            "date"
        ],
        "Entity": [
            "repository",
            "lift",
            "embargoes",
            "release",
            "date",
            "set",
            "access",
            "controls",
            "configuration",
            "set",
            "item",
            "date"
        ]
    },
    {
        "Text": "#G16# As a visitor, I want to see the embargo status and release date clearly displayed and perhaps highlighted in some way.",
        "Persona": [
            " visitor"
        ],
        "Action": [
            "want",
            "see",
            "embargo",
            "release",
            "date",
            "highlighted"
        ],
        "Entity": [
            "see",
            "embargo",
            "status",
            "release",
            "date",
            "way"
        ]
    },
    {
        "Text": "#G16# As a DigitalRecords Archivist, I want to have a method to add and remove multiple people to deposit groups in specific collections, to set a date that the deposit window closes, and to have these permissions conferred on these depositors should pick up on the collection's default permission.",
        "Persona": [
            " DigitalRecords Archivist"
        ],
        "Action": [
            "want",
            "have",
            "add",
            "remove",
            "people",
            "deposit",
            "groups",
            "set",
            "date",
            "deposit",
            "window",
            "closes",
            "have",
            "conferred",
            "should",
            "pick",
            "default"
        ],
        "Entity": [
            "method",
            "remove",
            "multiple",
            "people",
            "deposit",
            "groups",
            "specific",
            "collections",
            "set",
            "date",
            "deposit",
            "window",
            "closes",
            "permissions",
            "depositors",
            "pick",
            "default",
            "permission"
        ]
    },
    {
        "Text": "#G16# As a DigitalRecords Archivist, I want to edit the length of embargoes.",
        "Persona": [
            " DigitalRecords Archivist"
        ],
        "Action": [
            "want",
            "edit",
            "embargoes"
        ],
        "Entity": [
            "edit",
            "length",
            "embargoes"
        ]
    },
    {
        "Text": "#G16# As a DigitalRecords Archivist, I want to expose the descriptive record for each ETD item for re-use external to Fedora.",
        "Persona": [
            " DigitalRecords Archivist"
        ],
        "Action": [
            "want",
            "expose",
            "record",
            "item"
        ],
        "Entity": [
            "expose",
            "record",
            "item",
            "external",
            "fedora"
        ]
    },
    {
        "Text": "#G16# As a DigitalRecords Archivist, I want to grant embargo privileges to other repository administrators.",
        "Persona": [
            " DigitalRecords Archivist"
        ],
        "Action": [
            "want",
            "grant",
            "embargo",
            "privileges"
        ],
        "Entity": [
            "grant",
            "embargo",
            "privileges",
            "repository",
            "administrators"
        ]
    },
    {
        "Text": "#G16# As a DigitalRecords Archivist, I want to have a method to add and remove individual people from deposit groups.",
        "Persona": [
            " DigitalRecords Archivist"
        ],
        "Action": [
            "want",
            "have",
            "add",
            "remove",
            "people",
            "deposit",
            "groups"
        ],
        "Entity": [
            "method",
            "remove",
            "individual",
            "people",
            "deposit",
            "groups"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to have a tool to perform author authority control.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "have",
            "tool",
            "perform",
            "author",
            "control"
        ],
        "Entity": [
            "tool",
            "author",
            "authority",
            "control"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to move items from one collection to another.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "move",
            "items"
        ],
        "Entity": [
            "move",
            "items",
            "one",
            "collection"
        ]
    },
    {
        "Text": "#G16# As a repoadmin, I want to expose repository contents via OAI-PMH.",
        "Persona": [
            " repoadmin"
        ],
        "Action": [
            "want",
            "expose",
            "contents"
        ],
        "Entity": [
            "expose",
            "repository",
            "contents"
        ]
    },
    {
        "Text": "#G16# Auditing & Reporting.",
        "Persona": [
            ""
        ],
        "Action": [],
        "Entity": []
    },
    {
        "Text": "#G16# As a DigitalRecords Archivist, I want to view and download summary embargo metadata for all ETDs in the repository.",
        "Persona": [
            " DigitalRecords Archivist"
        ],
        "Action": [
            "want",
            "view",
            "download",
            "embargo"
        ],
        "Entity": [
            "view",
            "summary",
            "embargo",
            "all",
            "repository"
        ]
    },
    {
        "Text": "#G16# As a batch submitter, I want to provide my data and metadata in a simple, documented format to the repository staff for ingest.",
        "Persona": [
            " batch submitter"
        ],
        "Action": [
            "want",
            "provide",
            "format",
            "staff",
            "ingest"
        ],
        "Entity": [
            "data",
            "simple",
            "format",
            "repository",
            "staff"
        ]
    },
    {
        "Text": "#G16# As repository manager, I want to view authenticated, active users and anonymous users.",
        "Persona": [
            "nager"
        ],
        "Action": [
            "want",
            "view"
        ],
        "Entity": [
            "view",
            "active",
            "users",
            "users"
        ]
    },
    {
        "Text": "#G16# As a repository manager, I want to schedule a message to users to be displayed on each page on the repository between select times for things like notification of upcoming downtime.",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "schedule",
            "message",
            "page",
            "select",
            "times",
            "like"
        ],
        "Entity": [
            "schedule",
            "message",
            "users",
            "page",
            "repository",
            "times",
            "things",
            "like",
            "notification",
            "downtime"
        ]
    },
    {
        "Text": "#G16# As a repository manager, I want to see a display of recent errors deduplicated for easy comprehension like Symplectic Elements provides.",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "see",
            "display",
            "easy",
            "like",
            "provides"
        ],
        "Entity": [
            "see",
            "display",
            "errors",
            "comprehension",
            "like",
            "elements"
        ]
    },
    {
        "Text": "#G16# As a repository manager, I want to view a dashboard statistics about collections size including a list of collections, the number of items and components in each, total storage consumed by each collection, visualization of deposit activity.",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "view",
            "size",
            "including",
            "list",
            "number",
            "items",
            "total",
            "consumed",
            "deposit"
        ],
        "Entity": [
            "view",
            "dashboard",
            "statistics",
            "collections",
            "size",
            "list",
            "collections",
            "number",
            "items",
            "components",
            "total",
            "storage",
            "collection",
            "visualization",
            "deposit",
            "activity"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to see a dashboard widget showing a summary of recent submissions to my collection.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "see"
        ],
        "Entity": [
            "see",
            "dashboard",
            "widget",
            "showing",
            "summary",
            "submissions",
            "collection"
        ]
    },
    {
        "Text": "#G16# As a repoadmin, I want to continue to provide access to the repository in the event that the server fails.",
        "Persona": [
            " repoadmin"
        ],
        "Action": [
            "want",
            "continue",
            "provide",
            "access",
            "fails"
        ],
        "Entity": [
            "access",
            "repository",
            "event",
            "server",
            "fails"
        ]
    },
    {
        "Text": "#G16# As a repoadmin, I want to provide the server SLA to data contributors.",
        "Persona": [
            " repoadmin"
        ],
        "Action": [
            "want",
            "provide"
        ],
        "Entity": [
            "server",
            "data",
            "contributors"
        ]
    },
    {
        "Text": "#G16# As a repoadmin, I want to update the repository index without disrupting access to the public interface.",
        "Persona": [
            " repoadmin"
        ],
        "Action": [
            "want",
            "update",
            "index",
            "access"
        ],
        "Entity": [
            "update",
            "repository",
            "index",
            "access",
            "public",
            "interface"
        ]
    },
    {
        "Text": "#G16# As a repoadmin, I want to provide a Linked Data interface to the repository.",
        "Persona": [
            " repoadmin"
        ],
        "Action": [
            "want",
            "provide"
        ],
        "Entity": [
            "data",
            "interface",
            "repository"
        ]
    },
    {
        "Text": "#G16# As a repoadmin, I want to have Symplectic Elements to communicate",
        "Persona": [
            " repoadmin"
        ],
        "Action": [
            "want",
            "have",
            "communicate"
        ],
        "Entity": [
            "elements"
        ]
    },
    {
        "Text": "#G16# bidirectionally with the repository.",
        "Persona": [
            "lly with the repository."
        ],
        "Action": [],
        "Entity": []
    },
    {
        "Text": "#G16# As a developer, I want to upgrade to Fedora 4 and migrate our applications and data.",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "upgrade",
            "migrate"
        ],
        "Entity": [
            "upgrade",
            "fedora",
            "applications",
            "data"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to have metadata changes made to items with repository-assigned DOIs to be propagated to the EZID.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "have",
            "changes",
            "made",
            "items"
        ],
        "Entity": [
            "changes",
            "items"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to canonically identify authors and creators of my items by unique identifier, so that it's easier to view all of the works by that person together.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "identify",
            "authors",
            "items",
            "view",
            "works"
        ],
        "Entity": [
            "authors",
            "creators",
            "items",
            "unique",
            "identifier",
            "view",
            "all",
            "works",
            "person"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to see the referers for visitors who use resolver-abstracted links to reach my items.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "see",
            "use",
            "links",
            "reach",
            "items"
        ],
        "Entity": [
            "see",
            "visitors",
            "who",
            "use",
            "links",
            "reach",
            "items"
        ]
    },
    {
        "Text": "#G16# As a data contributor, I want to refer to the Disaster Recovery Plan in grant proposals and Data Management Plans.",
        "Persona": [
            " data contributor"
        ],
        "Action": [
            "want",
            "refer",
            "plan",
            "grant",
            "plans"
        ],
        "Entity": [
            "refer",
            "disaster",
            "recovery",
            "plan",
            "grant",
            "proposals",
            "data",
            "management",
            "plans"
        ]
    },
    {
        "Text": "#G16# As a depositor, I want to get feedback post-ingest alerting me if files I submitted do not conform to their format specifications, if they are not valid, or if they are not wellformed.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "get",
            "files",
            "submitted",
            "conform",
            "format",
            "are",
            "are"
        ],
        "Entity": [
            "alerting",
            "files",
            "format",
            "specifications"
        ]
    },
    {
        "Text": "#G16# As a batch submitter, I want to access documentation describing the folder ingest process.",
        "Persona": [
            " batch submitter"
        ],
        "Action": [
            "want",
            "access",
            "describing",
            "ingest",
            "process"
        ],
        "Entity": [
            "access",
            "documentation",
            "folder",
            "process"
        ]
    },
    {
        "Text": "#G16# As a depositor, I want to see what kinds of things the repository accepts and what formats are accepted and recommended.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "see",
            "accepts",
            "formats",
            "are"
        ],
        "Entity": [
            "see",
            "kinds",
            "things",
            "repository",
            "formats"
        ]
    },
    {
        "Text": "#G16# As a depositor, I want to easily find information about which data can be assigned a DOI, how to get one, and what metadata are required.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "find",
            "can",
            "get",
            "are",
            "required"
        ],
        "Entity": [
            "find",
            "information",
            "data",
            "can",
            "how",
            "one"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to create groups of users to manage permissions in the repository in an easy way.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "create",
            "groups",
            "manage",
            "easy"
        ],
        "Entity": [
            "groups",
            "users",
            "manage",
            "permissions",
            "repository",
            "way"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to restrict access to my collection or items to Duke IP addresses.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "restrict",
            "access",
            "items",
            "addresses"
        ],
        "Entity": [
            "access",
            "collection",
            "items",
            "duke",
            "addresses"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want users to contact me directly from the repository to request access to restricted objects.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "contact",
            "request",
            "access",
            "objects"
        ],
        "Entity": [
            "users",
            "contact",
            "repository",
            "request",
            "access",
            "objects"
        ]
    },
    {
        "Text": "#G16# As a collection owner, I want to have submitters to my collection to be unable to modify existing items in that collection.",
        "Persona": [
            " collection owner"
        ],
        "Action": [
            "want",
            "have",
            "modify",
            "items"
        ],
        "Entity": [
            "collection",
            "items",
            "collection"
        ]
    },
    {
        "Text": "#G16# As a superuser, I want to enter and exit the superuser scope.",
        "Persona": [
            " superuser"
        ],
        "Action": [
            "want",
            "enter",
            "exit"
        ],
        "Entity": [
            "exit",
            "scope"
        ]
    },
    {
        "Text": "#G16# As a collection curator I want to change permissions on one or more items simultaneously.",
        "Persona": [
            " collection curator I want to change permissions on one or more items simultaneously."
        ],
        "Action": [],
        "Entity": []
    },
    {
        "Text": "#G16# As a collection curator, I want to be able require authentication to access objects unless the request is coming from a whitelisted IP address, list of addresses.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "require",
            "access",
            "objects",
            "request",
            "address",
            "list",
            "addresses"
        ],
        "Entity": [
            "able",
            "authentication",
            "access",
            "objects",
            "request",
            "coming",
            "address",
            "list",
            "addresses"
        ]
    },
    {
        "Text": "#G16# As a repository manager, I want to view available versions of an object and restore a version from the staff interface.",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "view",
            "object",
            "restore",
            "staff"
        ],
        "Entity": [
            "view",
            "versions",
            "object",
            "version",
            "staff",
            "interface"
        ]
    },
    {
        "Text": "#G16# As a collection curator, I want to view the permission on my objects all together.",
        "Persona": [
            " collection curator"
        ],
        "Action": [
            "want",
            "view",
            "objects"
        ],
        "Entity": [
            "view",
            "permission",
            "objects",
            "all"
        ]
    },
    {
        "Text": "#G16# As a non-Duke researcher, I want to describe my team and mine's objects in the repository after they've been deposited if we've been assigned permission to edit metadata.",
        "Persona": [
            " non-Duke researcher"
        ],
        "Action": [
            "want",
            "describe",
            "team",
            "objects",
            "been",
            "been",
            "edit"
        ],
        "Entity": [
            "team",
            "objects",
            "repository",
            "they've",
            "we've",
            "permission",
            "edit"
        ]
    },
    {
        "Text": "#G16# As a faculty member, I want to go to my repository dashboard to manage members of my classes, grant submit permissions by pasting in a list of NetIDs, see confirmation that DDR recognizes the NetIDs, ability to manually remove permissions, ability to set begin and end dates for a submission window, and a have a status screen to clearly illustrate who has and hasn't submitted.",
        "Persona": [
            " faculty member"
        ],
        "Action": [
            "want",
            "manage",
            "classes",
            "grant",
            "submit",
            "list",
            "see",
            "recognizes",
            "remove",
            "set",
            "begin",
            "end",
            "dates",
            "window",
            "have",
            "screen",
            "illustrate",
            "has",
            "submitted"
        ],
        "Entity": [
            "repository",
            "dashboard",
            "manage",
            "members",
            "classes",
            "grant",
            "permissions",
            "list",
            "see",
            "confirmation",
            "ability",
            "remove",
            "permissions",
            "ability",
            "set",
            "end",
            "dates",
            "submission",
            "window",
            "status",
            "screen",
            "who",
            "hasn't"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to include the code of a dataset type in my app artifact and create a dataset of that type when deploying the app.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "include",
            "code",
            "type",
            "create",
            "type"
        ],
        "Entity": [
            "code",
            "type",
            "artifact",
            "type"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to deploy a new version of a dataset type as part of deploying a new version of the app that includes it and I expect that all dataset instances of that type that were created as part of the app deployment start using the new code.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "deploy",
            "type",
            "part",
            "includes",
            "expect",
            "instances",
            "type",
            "were",
            "created",
            "part",
            "start",
            "using",
            "code"
        ],
        "Entity": [
            "version",
            "type",
            "part",
            "version",
            "all",
            "instances",
            "type",
            "part",
            "deployment",
            "start",
            "using",
            "code"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to deploy a new version of a dataset type as part of an app artifact, without affecting other datasets of this type.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "deploy",
            "type",
            "part",
            "type"
        ],
        "Entity": [
            "version",
            "type",
            "part",
            "artifact",
            "type"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to explore a dataset instance of a type that was deployed as part of an app.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "explore",
            "instance",
            "type",
            "was",
            "part"
        ],
        "Entity": [
            "instance",
            "type",
            "part"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that when I deploy an artifact without creating an app this will not create any dataset types or instances.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "ensure",
            "deploy",
            "creating",
            "will",
            "create",
            "types",
            "instances"
        ],
        "Entity": [
            "ensure",
            "artifact",
            "will",
            "types",
            "instances"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to share a dataset type across multiple applications that include the dataset type's code in their artifacts.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "share",
            "type",
            "include",
            "code"
        ],
        "Entity": [
            "share",
            "type",
            "multiple",
            "applications",
            "code",
            "artifacts"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that when I deploy a new version of an app that includes a shared dataset type that all dataset instances created by this app start using the new code but all dataset instances created by other apps remain unchanged.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "ensure",
            "deploy",
            "includes",
            "type",
            "instances",
            "created",
            "start",
            "using",
            "code",
            "instances",
            "created",
            "remain"
        ],
        "Entity": [
            "ensure",
            "version",
            "type",
            "all",
            "instances",
            "start",
            "using",
            "code",
            "but",
            "all",
            "instances"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that when I deploy a new version of an app that includes an older version of a dataset type deployed by another app and I expect that the dataset instances created by this app use the dataset type code included in this app.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "ensure",
            "deploy",
            "includes",
            "type",
            "expect",
            "instances",
            "created",
            "use",
            "type",
            "code"
        ],
        "Entity": [
            "ensure",
            "version",
            "version",
            "type",
            "instances",
            "use",
            "type",
            "code"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that when I deploy a new version of an app that includes a different version of a dataset type deployed by another app and this app shares a dataset instance of this type with the other app the deployment will fail with a version conflict error. ",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "ensure",
            "deploy",
            "includes",
            "type",
            "shares",
            "instance",
            "type",
            "will",
            "fail",
            "conflict"
        ],
        "Entity": [
            "ensure",
            "version",
            "version",
            "type",
            "shares",
            "instance",
            "type",
            "deployment",
            "will",
            "fail",
            "version",
            "conflict",
            "error"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to share a dataset type that I had previously deployed as part of an app.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "share",
            "type",
            "had",
            "part"
        ],
        "Entity": [
            "share",
            "type",
            "part"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to deploy a dataset type independent from any app and allow apps to create and use dataset instances of that type.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "deploy",
            "type",
            "allow",
            "create",
            "use",
            "instances",
            "type"
        ],
        "Entity": [
            "type",
            "independent",
            "use",
            "instances",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to have the option of forcing applications to have the dataset code injected at runtime.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "have",
            "forcing",
            "have",
            "code"
        ],
        "Entity": [
            "option",
            "applications",
            "code"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to have an archetype that helps me package my dataset type properly.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "have",
            "helps",
            "package",
            "type"
        ],
        "Entity": [
            "archetype",
            "helps",
            "package",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to separate the interface from the implementation of a dataset type.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "separate",
            "type"
        ],
        "Entity": [
            "separate",
            "interface",
            "implementation",
            "type"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to only depend on the interface of a dataset type in my app and have the system inject the implementation at runtime.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "depend",
            "type",
            "have",
            "inject"
        ],
        "Entity": [
            "interface",
            "type",
            "system",
            "implementation"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to write unit tests for an app that depends on the interface of a dataset type.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "write",
            "tests",
            "depends",
            "type"
        ],
        "Entity": [
            "unit",
            "tests",
            "interface",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to assign explicit versions to the code of a dataset type.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "assign",
            "code",
            "type"
        ],
        "Entity": [
            "assign",
            "versions",
            "code",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to deploy a new version of a dataset type without affecting the dataset instances of that type.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "deploy",
            "type",
            "instances",
            "type"
        ],
        "Entity": [
            "version",
            "type",
            "instances",
            "type"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to create a dataset instance with a specific version of a dataset type.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "create",
            "instance",
            "type"
        ],
        "Entity": [
            "instance",
            "specific",
            "version",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to explore a dataset instance created from a dataset type that was deployed by itself.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "explore",
            "instance",
            "created",
            "type",
            "was"
        ],
        "Entity": [
            "instance",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to delete outdated versions of a dataset type and I expect this to fail if there are any dataset instances with that version of the type.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "delete",
            "type",
            "expect",
            "fail",
            "are",
            "instances",
            "type"
        ],
        "Entity": [
            "versions",
            "type",
            "fail",
            "there",
            "instances",
            "version",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to list all dataset instances that use a dataset type or a specific version of a type.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "list",
            "instances",
            "use",
            "type",
            "type"
        ],
        "Entity": [
            "list",
            "all",
            "instances",
            "use",
            "type",
            "specific",
            "version",
            "type"
        ]
    },
    {
        "Text": "#G17# As a data scientist, I want to be able to create a dataset instance of an existing dataset type without writing code.",
        "Persona": [
            " data scientist"
        ],
        "Action": [
            "want",
            "create",
            "instance",
            "type",
            "code"
        ],
        "Entity": [
            "able",
            "instance",
            "type",
            "writing",
            "code"
        ]
    },
    {
        "Text": "#G17# As a data scientist, I want to be able to upgrade a dataset instance to a new version of its code.",
        "Persona": [
            " data scientist"
        ],
        "Action": [
            "want",
            "upgrade",
            "instance",
            "code"
        ],
        "Entity": [
            "able",
            "upgrade",
            "instance",
            "version",
            "code"
        ]
    },
    {
        "Text": "#G17# As a hydrator user, I want to create a pipeline that reads or writes an existing dataset instance.",
        "Persona": [
            " hydrator user"
        ],
        "Action": [
            "want",
            "create",
            "pipeline",
            "reads",
            "writes",
            "instance"
        ],
        "Entity": [
            "pipeline",
            "reads",
            "writes",
            "instance"
        ]
    },
    {
        "Text": "#G17# As a hydrator user, I want to create a pipeline that reads or writes a new dataset instance and I want to create that dataset instance as part of pipeline creation.",
        "Persona": [
            " hydrator user"
        ],
        "Action": [
            "want",
            "create",
            "pipeline",
            "reads",
            "writes",
            "instance",
            "want",
            "create",
            "instance",
            "part",
            "pipeline"
        ],
        "Entity": [
            "pipeline",
            "reads",
            "writes",
            "instance",
            "instance",
            "part",
            "pipeline",
            "creation"
        ]
    },
    {
        "Text": "#G17# As a hydrator user, I want to specify an explicit version of the dataset types of the dataset instances created by my pipeline and I expect pipeline creation to fail if that results in incompatible upgrade of an existing dataset instance that is shared with other apps or pipelines.",
        "Persona": [
            " hydrator user"
        ],
        "Action": [
            "want",
            "specify",
            "types",
            "instances",
            "created",
            "pipeline",
            "expect",
            "pipeline",
            "fail",
            "results",
            "upgrade",
            "instance",
            "pipelines"
        ],
        "Entity": [
            "version",
            "types",
            "instances",
            "pipeline",
            "pipeline",
            "creation",
            "fail",
            "results",
            "incompatible",
            "upgrade",
            "instance",
            "pipelines"
        ]
    },
    {
        "Text": "#G17# As a hydrator user, I want to explore the datasets created by my pipeline.",
        "Persona": [
            " hydrator user"
        ],
        "Action": [
            "want",
            "explore",
            "created",
            "pipeline"
        ],
        "Entity": [
            "pipeline"
        ]
    },
    {
        "Text": "#G17# As a hydrator user, I want to ensure that all dataset instances created by apps are available as sinks and sources for pipelines.",
        "Persona": [
            " hydrator user"
        ],
        "Action": [
            "want",
            "ensure",
            "instances",
            "created",
            "are",
            "sinks",
            "pipelines"
        ],
        "Entity": [
            "ensure",
            "all",
            "instances",
            "sinks",
            "sources",
            "pipelines"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that all dataset instances created by Hydrator pipelines are accessible to the app.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "ensure",
            "instances",
            "created",
            "pipelines",
            "are"
        ],
        "Entity": [
            "ensure",
            "all",
            "instances",
            "pipelines"
        ]
    },
    {
        "Text": "#G17# As a plugin developer, I want to include the code for a dataset type in the plugin artifact, so that when a pipeline using this plugin is created a dataset instance of that type is created and it is explorable and available to apps.",
        "Persona": [
            " plugin developer"
        ],
        "Action": [
            "want",
            "include",
            "code",
            "type",
            "pipeline",
            "using",
            "created",
            "instance",
            "type",
            "created"
        ],
        "Entity": [
            "code",
            "type",
            "artifact",
            "pipeline",
            "using",
            "instance",
            "type"
        ]
    },
    {
        "Text": "#G17# As a plugin developer, I want to use a custom dataset type that was deployed independently or as part of an app inside the plugin. ",
        "Persona": [
            " plugin developer"
        ],
        "Action": [
            "want",
            "use",
            "type",
            "was",
            "part"
        ],
        "Entity": [
            "use",
            "custom",
            "type",
            "part",
            "inside"
        ]
    },
    {
        "Text": "#G17# As a plugin developer, I want to upgrade the code of a dataset type used by a dataset instance created by that plugin when I deploy a new version of the plugin and update the pipeline to use that version.",
        "Persona": [
            " plugin developer"
        ],
        "Action": [
            "want",
            "upgrade",
            "code",
            "type",
            "instance",
            "created",
            "deploy",
            "update",
            "pipeline",
            "use"
        ],
        "Entity": [
            "upgrade",
            "code",
            "type",
            "instance",
            "version",
            "update",
            "pipeline",
            "use",
            "version"
        ]
    },
    {
        "Text": "#G17# As a pipeline developer, I want to upgrade a dataset instance to a newer version of the code after the pipeline was created.",
        "Persona": [
            " pipeline developer"
        ],
        "Action": [
            "want",
            "upgrade",
            "instance",
            "code",
            "pipeline",
            "was",
            "created"
        ],
        "Entity": [
            "upgrade",
            "instance",
            "version",
            "code",
            "pipeline"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to have the option of implementing an upgrade step for when a dataset instance is upgraded to a new version of the dataset type.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "have",
            "upgrade",
            "step",
            "instance",
            "upgraded",
            "type"
        ],
        "Entity": [
            "option",
            "upgrade",
            "step",
            "instance",
            "version",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to have a way to reject an upgrade of a dataset instance to a newer version of it type if the upgrade is not compatible.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "have",
            "reject",
            "upgrade",
            "instance",
            "type",
            "upgrade"
        ],
        "Entity": [
            "way",
            "reject",
            "upgrade",
            "instance",
            "version",
            "type",
            "upgrade"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to have the option of implementing a migration procedure that can be run after an upgrade of a dataset instance to a new version of it type. ",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "run",
            "upgrade",
            "instance",
            "type"
        ],
        "Entity": [
            "option",
            "migration",
            "procedure",
            "can",
            "run",
            "upgrade",
            "instance",
            "version",
            "type"
        ]
    },
    {
        "Text": "#G17# As a developer, I want to take a dataset offline, so that I can perform a long-running maintenance or migration procedure.",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "take",
            "can",
            "perform"
        ],
        "Entity": [
            "take",
            "can",
            "maintenance",
            "migration",
            "procedure"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to implement custom administrative operations such as \"compaction\" or \"rebalance\" that are no common to all dataset types.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "implement",
            "are",
            "types"
        ],
        "Entity": [
            "implement",
            "custom",
            "operations",
            "common",
            "all",
            "types"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to perform custom administrative operations on dataset instances from my app and the CLI and REST or the UI.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "perform",
            "instances",
            "rest"
        ],
        "Entity": [
            "custom",
            "operations",
            "instances",
            "rest"
        ]
    },
    {
        "Text": "#G17# As a user, I want to find out what properties are supported by the dataset type what values are allowed and what the defaults are when creating a dataset instance. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "find",
            "out",
            "are",
            "type",
            "values",
            "are",
            "defaults",
            "are",
            "creating",
            "instance"
        ],
        "Entity": [
            "find",
            "out",
            "properties",
            "type",
            "values",
            "defaults",
            "instance"
        ]
    },
    {
        "Text": "#G17# As a user, I want to specify the schema of a dataset in a uniform way across all dataset types.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "specify",
            "uniform",
            "types"
        ],
        "Entity": [
            "schema",
            "uniform",
            "way",
            "all",
            "types"
        ]
    },
    {
        "Text": "#G17# As a user, I want to specify schema as a JSON string.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "specify",
            "string"
        ],
        "Entity": [
            "schema",
            "string"
        ]
    },
    {
        "Text": "#G17# As a user, I want to specify schema as a SQL schema string.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "specify",
            "string"
        ],
        "Entity": [
            "schema",
            "schema",
            "string"
        ]
    },
    {
        "Text": "#G17# As a user, I want to configure time-to-live in a uniform way across all dataset types.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "configure",
            "uniform",
            "types"
        ],
        "Entity": [
            "uniform",
            "way",
            "all",
            "types"
        ]
    },
    {
        "Text": "#G17# As a user, I want to see the properties that were used to configure a dataset instance.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "see",
            "were",
            "configure",
            "instance"
        ],
        "Entity": [
            "see",
            "properties",
            "instance"
        ]
    },
    {
        "Text": "#G17# As a user, I want to find out what properties of a dataset can be updated.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "find",
            "out",
            "can",
            "updated"
        ],
        "Entity": [
            "find",
            "out",
            "properties",
            "can"
        ]
    },
    {
        "Text": "#G17# As a user, I want to update the properties of a dataset instance and I expect this to fail if the new properties are not compatible with a meaningful error message.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "update",
            "instance",
            "expect",
            "fail",
            "are",
            "message"
        ],
        "Entity": [
            "update",
            "properties",
            "instance",
            "fail",
            "properties",
            "error",
            "message"
        ]
    },
    {
        "Text": "#G17# As a user, I want to update a single property of a dataset instance without knowing all other properties. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "update",
            "single",
            "instance"
        ],
        "Entity": [
            "update",
            "single",
            "property",
            "instance",
            "knowing",
            "all",
            "properties"
        ]
    },
    {
        "Text": "#G17# As a user, I want to remove a single property of a dataset instance without knowing all other properties. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "remove",
            "single",
            "instance"
        ],
        "Entity": [
            "remove",
            "single",
            "property",
            "instance",
            "knowing",
            "all",
            "properties"
        ]
    },
    {
        "Text": "#G17# As a user, I want to trigger a migration process for a dataset if updating its properties requires that.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "trigger",
            "process",
            "updating",
            "requires"
        ],
        "Entity": [
            "trigger",
            "migration",
            "process",
            "updating",
            "properties"
        ]
    },
    {
        "Text": "#G17# As a user, I want to ensure that if reconfiguration of a dataset fails then no changes have taken effect, so that all steps required to reconfigure a dataset must be done as a single atomic action.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "ensure",
            "fails",
            "changes",
            "have",
            "taken",
            "effect",
            "steps",
            "required",
            "must",
            "done",
            "single"
        ],
        "Entity": [
            "ensure",
            "fails",
            "then",
            "changes",
            "effect",
            "all",
            "steps",
            "must",
            "single",
            "action"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that application creation fails if any of its datasets cannot be created.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "ensure",
            "fails",
            "cannot",
            "created"
        ],
        "Entity": [
            "ensure",
            "application",
            "creation",
            "fails"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that application redeployment fails if any of its datasets cannot be reconfigured.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "ensure",
            "fails",
            "cannot"
        ],
        "Entity": [
            "ensure",
            "application",
            "redeployment",
            "fails"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to tolerate existing datasets if their properties are different but compatible when creating a dataset as part of app deployment. ",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "tolerate",
            "are",
            "creating",
            "part"
        ],
        "Entity": [
            "properties",
            "but",
            "part",
            "deployment"
        ]
    },
    {
        "Text": "#G17# As a pipeline designer, I want to get a meaningful error message when pipeline creation fails when I use an existing dataset as a sink or source, so that I know that the schema or any other property of the dataset is incompatible with what the pipeline requires. ",
        "Persona": [
            " pipeline designer"
        ],
        "Action": [
            "want",
            "get",
            "message",
            "pipeline",
            "fails",
            "use",
            "sink",
            "know",
            "pipeline",
            "requires"
        ],
        "Entity": [
            "error",
            "message",
            "pipeline",
            "creation",
            "fails",
            "use",
            "sink",
            "source",
            "know",
            "schema",
            "property",
            "incompatible",
            "pipeline"
        ]
    },
    {
        "Text": "#G17# As a user, I want to specify as part of dataset configuration whether it is explorable.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "specify",
            "part"
        ],
        "Entity": [
            "part",
            "configuration"
        ]
    },
    {
        "Text": "#G17# As a user, I want to specify the explore schema separately.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "specify",
            "explore"
        ],
        "Entity": [
            "schema"
        ]
    },
    {
        "Text": "#G17# As a user, I want to ensure that dataset creation fails if the dataset cannot be enabled for explore.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "ensure",
            "fails",
            "cannot",
            "enabled",
            "explore"
        ],
        "Entity": [
            "ensure",
            "creation",
            "fails"
        ]
    },
    {
        "Text": "#G17# As a user, I want to ensure that dataset reconfiguration fails if the corresponding update of the explore table fails.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "ensure",
            "fails",
            "update",
            "explore",
            "table",
            "fails"
        ],
        "Entity": [
            "ensure",
            "fails",
            "update",
            "table",
            "fails"
        ]
    },
    {
        "Text": "#G17# As a user, I want to ensure that a dataset operation fails if it fails to make its required changes to explore.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "ensure",
            "fails",
            "fails",
            "make",
            "required",
            "changes",
            "explore"
        ],
        "Entity": [
            "ensure",
            "operation",
            "fails",
            "fails",
            "make",
            "changes"
        ]
    },
    {
        "Text": "#G17# As a user, I want to ensure that an update of explore never leads to silent loss of data or data available for explore. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "ensure",
            "update",
            "explore",
            "leads",
            "explore"
        ],
        "Entity": [
            "ensure",
            "update",
            "leads",
            "silent",
            "loss",
            "data",
            "data"
        ]
    },
    {
        "Text": "#G17# As a user, I want to enable explore for a dataset that was not configured for explore initially.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "enable",
            "explore",
            "was",
            "explore"
        ],
        "Entity": []
    },
    {
        "Text": "#G17# As a user, I want to disable explore for a dataset that was configured for explore initially.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "disable",
            "explore",
            "was",
            "explore"
        ],
        "Entity": []
    },
    {
        "Text": "#G18# As a system administrator, I want to run a script that installs the Neurohub node onto a virgin Ubuntu operating system.",
        "Persona": [
            " system administrator"
        ],
        "Action": [
            "want",
            "run",
            "script",
            "installs"
        ],
        "Entity": [
            "run",
            "script",
            "node",
            "virgin",
            "system"
        ]
    },
    {
        "Text": "#G18# As a system administrator, I want to run a script that tests to see if a Neurohub installation is functioning correctly.",
        "Persona": [
            " system administrator"
        ],
        "Action": [
            "want",
            "run",
            "script",
            "tests",
            "see"
        ],
        "Entity": [
            "run",
            "script",
            "tests",
            "see",
            "installation",
            "functioning"
        ]
    },
    {
        "Text": "#G18# As a release engineer, I want to call a script to execute acceptance tests against a Neurohub installation and report back the results.",
        "Persona": [
            " release engineer"
        ],
        "Action": [
            "want",
            "call",
            "script",
            "execute",
            "tests",
            "report",
            "back",
            "results"
        ],
        "Entity": [
            "call",
            "script",
            "acceptance",
            "tests",
            "installation",
            "report",
            "back",
            "results"
        ]
    },
    {
        "Text": "#G18# As an investigator, I want to view the acceptance test results, so that I can understand how feature-complete the Neurohub node currently is.",
        "Persona": [
            " investigator"
        ],
        "Action": [
            "want",
            "view",
            "test",
            "results",
            "can",
            "understand"
        ],
        "Entity": [
            "view",
            "acceptance",
            "test",
            "results",
            "can",
            "how",
            "node"
        ]
    },
    {
        "Text": "#G18# As an MRI operator, I want to digitally record the responses that subjects make when completing paper-based forms.",
        "Persona": [
            " MRI operator"
        ],
        "Action": [
            "want",
            "record",
            "subjects",
            "make",
            "completing",
            "forms"
        ],
        "Entity": [
            "record",
            "responses",
            "subjects",
            "make",
            "forms"
        ]
    },
    {
        "Text": "#G18# As a user, I want to navigate forwards and backwards between log books and log book pages without having to use my browser's back button.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "navigate",
            "forwards",
            "log",
            "books",
            "log",
            "book",
            "pages",
            "use",
            "back",
            "button"
        ],
        "Entity": [
            "forwards",
            "log",
            "books",
            "log",
            "book",
            "pages",
            "use",
            "back",
            "button"
        ]
    },
    {
        "Text": "#G18# As a lab administrator, I want to theme the Web interface graphics/colours.",
        "Persona": [
            " lab administrator"
        ],
        "Action": [
            "want",
            "web"
        ],
        "Entity": [
            "theme",
            "web",
            "interface"
        ]
    },
    {
        "Text": "#G18# As a systems administrator, I want  to install Neurohub dependencies into an Ubuntu 10.04 LTS machine using the normal Ubuntu package management tools.",
        "Persona": [
            " systems administrator"
        ],
        "Action": [
            "want",
            "install",
            "machine",
            "using",
            "package",
            "tools"
        ],
        "Entity": [
            "dependencies",
            "machine",
            "using",
            "normal",
            "package",
            "management",
            "tools"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to create a log book page for an experiment and attach a file to this page.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "create",
            "log",
            "book",
            "page",
            "experiment",
            "attach",
            "file",
            "page"
        ],
        "Entity": [
            "log",
            "book",
            "page",
            "experiment",
            "attach",
            "file",
            "page"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to create a log book page for an experiment and attach a directory that contains multiple files.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "create",
            "log",
            "book",
            "page",
            "experiment",
            "attach",
            "contains",
            "files"
        ],
        "Entity": [
            "log",
            "book",
            "page",
            "experiment",
            "attach",
            "directory",
            "multiple",
            "files"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to upload files prior to having them attached to a log book page.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "upload",
            "files",
            "log",
            "book",
            "page"
        ],
        "Entity": [
            "files",
            "prior",
            "log",
            "book",
            "page"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to upload files prior to having them attached to a log book page using the web interface.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "upload",
            "files",
            "log",
            "book",
            "page",
            "using",
            "web"
        ],
        "Entity": [
            "files",
            "prior",
            "log",
            "book",
            "page",
            "using",
            "web",
            "interface"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to upload files prior to having them attached to a log book page using a mapped network drive.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "upload",
            "files",
            "log",
            "book",
            "page",
            "using",
            "mapped",
            "network",
            "drive"
        ],
        "Entity": [
            "files",
            "prior",
            "log",
            "book",
            "page",
            "using",
            "network",
            "drive"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to attach currently non-attached files to a log book page.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "attach",
            "files",
            "log",
            "book",
            "page"
        ],
        "Entity": [
            "attach",
            "files",
            "log",
            "book",
            "page"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to receive an alert of any unattached files that are in my workspace.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "receive",
            "alert",
            "files",
            "are"
        ],
        "Entity": [
            "alert",
            "files",
            "workspace"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to download files attached to an experiment using my Web browser.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "download",
            "files",
            "experiment",
            "using",
            "web"
        ],
        "Entity": [
            "files",
            "experiment",
            "using",
            "web",
            "browser"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to access files stored in my Neurohub workspace, using a network drive attached to my workstation.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "access",
            "files",
            "stored",
            "using",
            "network",
            "drive"
        ],
        "Entity": [
            "access",
            "files",
            "workspace",
            "using",
            "network",
            "drive",
            "workstation"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to create a log book page.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "create",
            "log",
            "book",
            "page"
        ],
        "Entity": [
            "log",
            "book",
            "page"
        ]
    },
    {
        "Text": "#G18# As a release engineer, I want to configure nightly builds that automatically perform a Neurohub installation on a virgin operating system, execute tests and report back results, without requiring any manual input/interaction.",
        "Persona": [
            " release engineer"
        ],
        "Action": [
            "want",
            "configure",
            "builds",
            "perform",
            "execute",
            "tests",
            "report",
            "back",
            "results",
            "requiring"
        ],
        "Entity": [
            "builds",
            "installation",
            "virgin",
            "system",
            "tests",
            "report",
            "back",
            "results",
            "manual"
        ]
    },
    {
        "Text": "#G18# As a supervisor, I want to view what my researchers were doing on a given date or period of time.",
        "Persona": [
            " supervisor"
        ],
        "Action": [
            "want",
            "view",
            "were",
            "given",
            "date",
            "time"
        ],
        "Entity": [
            "view",
            "researchers",
            "doing",
            "given",
            "date",
            "period",
            "time"
        ]
    },
    {
        "Text": "#G18# As a user, I want to upload large files of over 1GB in size.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "upload",
            "files",
            "size"
        ],
        "Entity": [
            "large",
            "files",
            "over",
            "size"
        ]
    },
    {
        "Text": "#G18# As a user, I want to assign tags to files that I have uploaded.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "assign",
            "tags",
            "files",
            "have"
        ],
        "Entity": [
            "assign",
            "tags",
            "files"
        ]
    },
    {
        "Text": "#G18# As a user, I want to assign bespoke information to a file dependent on its type.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "assign",
            "file",
            "type"
        ],
        "Entity": [
            "assign",
            "information",
            "file",
            "dependent",
            "type"
        ]
    },
    {
        "Text": "#G18# As a user, I want to filter the files I get from search results based on their  type.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "filter",
            "files",
            "get",
            "search",
            "results",
            "based",
            "type"
        ],
        "Entity": [
            "filter",
            "files",
            "search",
            "results",
            "type"
        ]
    },
    {
        "Text": "#G18# As a user, I want to use the tags that I use are part of a controlled vocabulary.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "use",
            "tags",
            "use",
            "are",
            "part",
            "controlled"
        ],
        "Entity": [
            "use",
            "tags",
            "use",
            "part",
            "vocabulary"
        ]
    },
    {
        "Text": "#G18# As a user, I want to make uploaded data files to be non-modifiable.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "make",
            "files"
        ],
        "Entity": [
            "make",
            "data",
            "files"
        ]
    },
    {
        "Text": "#G18# As a user, I want to make predicated links between files.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "make",
            "predicated",
            "links",
            "files"
        ],
        "Entity": [
            "make",
            "links",
            "files"
        ]
    },
    {
        "Text": "#G18# As a user, I want to restrict what can be entered to a metadata field.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "restrict",
            "can",
            "field"
        ],
        "Entity": [
            "can",
            "field"
        ]
    },
    {
        "Text": "#G18# As a user, I want to have files I might accidentally delete to be restorable.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "files",
            "might",
            "delete"
        ],
        "Entity": [
            "files",
            "might"
        ]
    },
    {
        "Text": "#G18# As a user, I want to revert to an older version of an uploaded file.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "revert",
            "file"
        ],
        "Entity": [
            "revert",
            "version",
            "file"
        ]
    },
    {
        "Text": "#G18# As a user, I want to have a visual way of viewing particular files uploaded over a time period.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "files",
            "time"
        ],
        "Entity": [
            "visual",
            "way",
            "viewing",
            "particular",
            "files",
            "over",
            "time",
            "period"
        ]
    },
    {
        "Text": "#G18# As a user, I want to associate together files involved in a experiment.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "associate",
            "files",
            "experiment"
        ],
        "Entity": [
            "associate",
            "files",
            "experiment"
        ]
    },
    {
        "Text": "#G18# As a system administrator, I want to have a managed backup protocol for the system.",
        "Persona": [
            " system administrator"
        ],
        "Action": [
            "want",
            "have",
            "managed"
        ],
        "Entity": [
            "protocol",
            "system"
        ]
    },
    {
        "Text": "#G18# As a user, I want to enter metadata / describe an experiment protocol before a file is even created.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "enter",
            "describe",
            "experiment",
            "file",
            "even",
            "created"
        ],
        "Entity": [
            "experiment",
            "protocol",
            "file",
            "even"
        ]
    },
    {
        "Text": "#G18# As lab administrator, I want to have increased access to the system to support regular users. ",
        "Persona": [
            "b administrator"
        ],
        "Action": [
            "want",
            "have",
            "increased",
            "access",
            "support"
        ],
        "Entity": [
            "access",
            "system",
            "support",
            "regular",
            "users"
        ]
    },
    {
        "Text": "#G18# As a user, I want to link together experimental runs to build an experiment.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "link",
            "runs",
            "build",
            "experiment"
        ],
        "Entity": [
            "link",
            "runs",
            "build",
            "experiment"
        ]
    },
    {
        "Text": "#G18# As a lab administrator, I want to create page templates with bespoke metadata fields.",
        "Persona": [
            " lab administrator"
        ],
        "Action": [
            "want",
            "create",
            "page",
            "fields"
        ],
        "Entity": [
            "page",
            "templates",
            "fields"
        ]
    },
    {
        "Text": "#G18# As a user, I want to capture the same metadata for each file created in an experimental run.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "capture",
            "file",
            "created",
            "run"
        ],
        "Entity": [
            "capture",
            "file",
            "run"
        ]
    },
    {
        "Text": "#G18# As a lab administrator, I want a way of managing worm strain stocks that is integrated with Wormbase.",
        "Persona": [
            " lab administrator"
        ],
        "Action": [
            "want",
            "worm",
            "strain",
            "stocks",
            "integrated"
        ],
        "Entity": [
            "way",
            "managing",
            "worm",
            "strain",
            "stocks"
        ]
    },
    {
        "Text": "#G18# As a user, I want to search for and download human-readable experimental protocols.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "search",
            "download"
        ],
        "Entity": [
            "search",
            "protocols"
        ]
    },
    {
        "Text": "#G18# As a user, I want to modify or branch an experimental protocol, whilst retaining the original.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "modify",
            "branch"
        ],
        "Entity": [
            "branch",
            "protocol",
            "original"
        ]
    },
    {
        "Text": "#G18# As a user, I want to view how an experimental protocol has evolved over time.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "view",
            "has",
            "evolved",
            "time"
        ],
        "Entity": [
            "view",
            "how",
            "protocol",
            "over",
            "time"
        ]
    },
    {
        "Text": "#G18# As a user, I want to create a protocol and assign metadata to any stag.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "create",
            "assign",
            "stag"
        ],
        "Entity": [
            "protocol",
            "assign",
            "stag"
        ]
    },
    {
        "Text": "#G18# As a user, I want to prove definitively that I created a page on a certain date.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "prove",
            "created",
            "page",
            "date"
        ],
        "Entity": [
            "page",
            "date"
        ]
    },
    {
        "Text": "#G18# As a user, I want to manage the references / papers I have investigated.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "manage",
            "references",
            "papers",
            "have",
            "investigated"
        ],
        "Entity": [
            "manage",
            "references",
            "papers"
        ]
    },
    {
        "Text": "#G18# As a user, I want to search specifically for files rather than log book pages.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "search",
            "files",
            "log",
            "book",
            "pages"
        ],
        "Entity": [
            "search",
            "files",
            "log",
            "book",
            "pages"
        ]
    },
    {
        "Text": "#G18# As a user, I want to limit my search to a particular set of log books.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "limit",
            "search",
            "set",
            "log",
            "books"
        ],
        "Entity": [
            "limit",
            "search",
            "particular",
            "set",
            "log",
            "books"
        ]
    },
    {
        "Text": "#G18# As a user, I want to limit my search results to one or more log book sections from one or more log books.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "limit",
            "search",
            "results",
            "log",
            "book",
            "sections",
            "log",
            "books"
        ],
        "Entity": [
            "limit",
            "search",
            "results",
            "one",
            "more",
            "log",
            "book",
            "sections",
            "one",
            "more",
            "log",
            "books"
        ]
    },
    {
        "Text": "#G18# As a user, I want to download files directly from the search results page.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "download",
            "files",
            "search",
            "results",
            "page"
        ],
        "Entity": [
            "files",
            "search",
            "results",
            "page"
        ]
    },
    {
        "Text": "#G18# As a user, I want to see the provenance of the page as part of the search results.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "see",
            "page",
            "part",
            "search",
            "results"
        ],
        "Entity": [
            "see",
            "provenance",
            "page",
            "part",
            "search",
            "results"
        ]
    },
    {
        "Text": "#G18# As a user, I want to attach multiple files at once to a log book page.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "attach",
            "files",
            "log",
            "book",
            "page"
        ],
        "Entity": [
            "attach",
            "multiple",
            "files",
            "once",
            "log",
            "book",
            "page"
        ]
    },
    {
        "Text": "#G18# As a user, I want to download multiple files from the search results in one go.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "download",
            "files",
            "search",
            "results"
        ],
        "Entity": [
            "multiple",
            "files",
            "search",
            "results",
            "one"
        ]
    },
    {
        "Text": "#G18# As a user, I want to draw tables using HTML tags as part of the content of a log book page.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "draw",
            "tables",
            "using",
            "tags",
            "part",
            "content",
            "log",
            "book",
            "page"
        ],
        "Entity": [
            "draw",
            "tables",
            "using",
            "tags",
            "part",
            "content",
            "log",
            "book",
            "page"
        ]
    },
    {
        "Text": "#G18# As a lab member, I want to view events and equipment bookings within the group.",
        "Persona": [
            " lab member"
        ],
        "Action": [
            "want",
            "view",
            "group"
        ],
        "Entity": [
            "view",
            "events",
            "equipment",
            "bookings",
            "group"
        ]
    },
    {
        "Text": "#G18# As a user, I want to store worm behaviour videos with an encoding that can be analysed by the worm analysis software written by Christopher James.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "store",
            "worm",
            "encoding",
            "can",
            "analysed",
            "worm",
            "written",
            "james"
        ],
        "Entity": [
            "store",
            "worm",
            "behaviour",
            "videos",
            "encoding",
            "can",
            "worm",
            "analysis",
            "software",
            "written",
            "james"
        ]
    },
    {
        "Text": "#G18# As a system administrator, I want to migrate data from an older version of NeuroHub to the current version.",
        "Persona": [
            " system administrator"
        ],
        "Action": [
            "want",
            "migrate"
        ],
        "Entity": [
            "data",
            "version",
            "current",
            "version"
        ]
    },
    {
        "Text": "#G18# As a user, I want to have the system to also forward important news items to an external mailing list.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "forward",
            "items",
            "list"
        ],
        "Entity": [
            "system",
            "forward",
            "news",
            "items",
            "external",
            "mailing",
            "list"
        ]
    },
    {
        "Text": "#G18# As a user, I want to view and update an inventory of of the equipment and consumables that are present in the centre.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "view",
            "update",
            "inventory",
            "are",
            "present",
            "centre"
        ],
        "Entity": [
            "view",
            "update",
            "inventory",
            "equipment",
            "consumables",
            "present",
            "centre"
        ]
    },
    {
        "Text": "#G18# As a user, I want to have a spreadsheet hosted within the Neurohub Web page, so that I can edit and calculate costs collaboratively with others while working on the proposal.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "web",
            "page",
            "can",
            "edit",
            "calculate",
            "costs",
            "while"
        ],
        "Entity": [
            "spreadsheet",
            "web",
            "page",
            "can",
            "edit",
            "costs",
            "while",
            "working",
            "proposal"
        ]
    },
    {
        "Text": "#G18# As a supervisor, I want to create feedback forms within Neurohub, that my students can fill in and submit, in order to provide me with feedback about the course that they attended.",
        "Persona": [
            " supervisor"
        ],
        "Action": [
            "want",
            "create",
            "forms",
            "can",
            "fill",
            "submit",
            "order",
            "provide",
            "course"
        ],
        "Entity": [
            "forms",
            "students",
            "can",
            "fill",
            "order",
            "course"
        ]
    },
    {
        "Text": "#G18# As a user, I want to have the option to tell Neurohub to push posted content to my Twitter feed at the same time.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "tell",
            "push",
            "content",
            "twitter",
            "feed",
            "time"
        ],
        "Entity": [
            "option",
            "tell",
            "push",
            "content",
            "twitter",
            "feed",
            "time"
        ]
    },
    {
        "Text": "#G18# As a user, I want to either keep a logbook entry private or share it with individuals rather than groups.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "keep",
            "share",
            "groups"
        ],
        "Entity": [
            "keep",
            "entry",
            "private",
            "share",
            "individuals",
            "groups"
        ]
    },
    {
        "Text": "#G18# As a user, I want to have the details of the workflow execution to be recorded in a neurohub log book while executing a workflow.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "details",
            "log",
            "book",
            "while",
            "executing"
        ],
        "Entity": [
            "details",
            "execution",
            "log",
            "book",
            "while",
            "executing"
        ]
    },
    {
        "Text": "#G18# As a user, I want to have that my Twitter Tweets to appear in Neurohub, so that other researchers in the centre can see what I am up to.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "twitter",
            "tweets",
            "appear",
            "centre",
            "can",
            "see"
        ],
        "Entity": [
            "twitter",
            "tweets",
            "researchers",
            "centre",
            "can",
            "see"
        ]
    },
    {
        "Text": "#G18# As a user, I want to view the group's shared calendars via the Neurohub Nodes' Web page as well as on my mobile device.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "view",
            "calendars",
            "web",
            "page",
            "well"
        ],
        "Entity": [
            "view",
            "calendars",
            "web",
            "page",
            "well",
            "mobile",
            "device"
        ]
    },
    {
        "Text": "#G18# As a user, I want to sync events created in NeuroHub with a web-based Calendar such as Google Calendar.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "sync",
            "created",
            "calendar",
            "calendar"
        ],
        "Entity": [
            "sync",
            "events",
            "calendar",
            "calendar"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have the ability to insert Greek symbols into my logbook entries.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "insert",
            "symbols"
        ],
        "Entity": [
            "ability",
            "insert",
            "symbols",
            "entries"
        ]
    },
    {
        "Text": "#G18# As a user, I want to have the ability to move multiple files around and rearrange them using the Neurohub file browser while processing data.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "move",
            "files",
            "rearrange",
            "using",
            "file",
            "while"
        ],
        "Entity": [
            "ability",
            "move",
            "multiple",
            "files",
            "using",
            "file",
            "browser",
            "while",
            "processing",
            "data"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to point my Mendeley client at a group-wide shared repository of research papers and get notifications via Mendeley when new content is added.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "point",
            "research",
            "papers",
            "get",
            "content"
        ],
        "Entity": [
            "point",
            "client",
            "repository",
            "research",
            "papers",
            "notifications",
            "content"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have electronic support for keeping track of which data sets were used/output/modified as part of a particular experiment.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "support",
            "track",
            "sets",
            "were",
            "part",
            "experiment"
        ],
        "Entity": [
            "support",
            "keeping",
            "track",
            "data",
            "sets",
            "part",
            "particular",
            "experiment"
        ]
    },
    {
        "Text": "#G18# As a user, I want a mechanism for electronically sharing papers and notes with other researchers, so that we can collaborate effectively.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "papers",
            "notes",
            "can",
            "collaborate"
        ],
        "Entity": [
            "mechanism",
            "sharing",
            "papers",
            "notes",
            "researchers",
            "can"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have services to support the long term curation of data, so that I can be sure that data will not get 'lost' with the passage of time.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "services",
            "support",
            "long",
            "term",
            "can",
            "will",
            "get",
            "passage",
            "time"
        ],
        "Entity": [
            "services",
            "support",
            "long",
            "term",
            "data",
            "can",
            "data",
            "will",
            "passage",
            "time"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have a timeline display of multiple data files and their associated images, so that I can compare the data taken from experiments on particular dates.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "display",
            "files",
            "associated",
            "images",
            "can",
            "compare",
            "taken",
            "experiments",
            "dates"
        ],
        "Entity": [
            "display",
            "multiple",
            "data",
            "files",
            "images",
            "can",
            "compare",
            "data",
            "experiments",
            "particular",
            "dates"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have remote access to my data for off-site working , so that I can still work effectively while away from the lab.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "access",
            "can",
            "still",
            "work",
            "while"
        ],
        "Entity": [
            "remote",
            "access",
            "data",
            "working",
            "can",
            "still",
            "work",
            "while",
            "away",
            "lab"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to share post-experiment write-ups with other researchers, so that others can more easily replicate my work.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "share",
            "write-ups",
            "can",
            "replicate",
            "work"
        ],
        "Entity": [
            "share",
            "researchers",
            "can",
            "more",
            "work"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to collect data as a library of data, which can then be used by one or multiple experiments that are defined at a later stage.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "collect",
            "can",
            "experiments",
            "are",
            "defined",
            "stage"
        ],
        "Entity": [
            "collect",
            "data",
            "library",
            "data",
            "can",
            "then",
            "one",
            "multiple",
            "experiments",
            "stage"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to indicate within my electronic log book which experimental data is good/bad, hide the bad data, but still keep it in the system just in case it is useful in the future.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "indicate",
            "log",
            "book",
            "hide",
            "bad",
            "still",
            "keep",
            "case"
        ],
        "Entity": [
            "log",
            "book",
            "data",
            "hide",
            "bad",
            "data",
            "but",
            "still",
            "keep",
            "system",
            "case",
            "useful",
            "future"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have the system to provide standard metadata, that all researchers in the centre (and beyond) can use, so that we can better understand each others' data.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "provide",
            "centre",
            "can",
            "use",
            "can",
            "better",
            "understand"
        ],
        "Entity": [
            "system",
            "standard",
            "all",
            "researchers",
            "centre",
            "can",
            "use",
            "can",
            "better",
            "data"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have physiology images to be annotated with standard meta data, so that my data can later be searched for and understood.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "images",
            "annotated",
            "can",
            "understood"
        ],
        "Entity": [
            "physiology",
            "images",
            "standard",
            "data",
            "data",
            "can"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have the ability to attach standard meta data for behavioural observations (and video), so that my data can later be searched for and understood.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "attach",
            "can",
            "understood"
        ],
        "Entity": [
            "ability",
            "attach",
            "standard",
            "data",
            "observations",
            "data",
            "can"
        ]
    },
    {
        "Text": "#G18# As a researcher,  I want to have the ability to attach standard meta data for drug responses, so that my data can later be searched for and understood.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "attach",
            "drug",
            "can",
            "understood"
        ],
        "Entity": [
            "ability",
            "attach",
            "standard",
            "data",
            "drug",
            "responses",
            "data",
            "can"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have the ability to search for images of cells using standard meta data.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "search",
            "images",
            "using"
        ],
        "Entity": [
            "ability",
            "search",
            "images",
            "cells",
            "using",
            "standard",
            "data"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have at least some meta data to be automatically inserted when new data is added to the system.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have"
        ],
        "Entity": [
            "least",
            "data",
            "data",
            "system"
        ]
    },
    {
        "Text": "#G18# As a researcher,  I want to have the ability to attach detailed meta data to the data and entries that I create.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "attach",
            "create"
        ],
        "Entity": [
            "ability",
            "attach",
            "data",
            "data",
            "entries"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have the ability to select a partially pre-populated template that already contains commonly entered meta data while adding new data to the system, so that I do not waste time repeatedly inserting the same meta data over and over again for each individual file or log book entry.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "select",
            "contains",
            "while",
            "waste",
            "time",
            "file",
            "log",
            "book"
        ],
        "Entity": [
            "ability",
            "template",
            "data",
            "while",
            "data",
            "system",
            "waste",
            "time",
            "data",
            "over",
            "over",
            "individual",
            "file",
            "log",
            "book",
            "entry"
        ]
    },
    {
        "Text": "#G18# As a user, I want to be sure that existing metadata corresponding to the file is not lost when moving a file to a new location.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "file",
            "file"
        ],
        "Entity": [
            "file",
            "lost",
            "moving",
            "file",
            "location"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have the ability to form links between objects, for example File A is an analysis of File B, so that data can be searched by type and by association.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "form",
            "links",
            "objects",
            "example",
            "file",
            "file",
            "can",
            "type"
        ],
        "Entity": [
            "ability",
            "form",
            "links",
            "objects",
            "example",
            "file",
            "analysis",
            "file",
            "data",
            "can",
            "type",
            "association"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have the ability to locate experiment files using meta data, regardless of where those files are located.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "locate",
            "experiment",
            "files",
            "using",
            "files",
            "are",
            "located"
        ],
        "Entity": [
            "ability",
            "experiment",
            "files",
            "using",
            "data",
            "where",
            "files"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have any data that I have written to the VRE to be protected from modification or deletion, so that original data can always be traced back to an experiment and a point in time.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "have",
            "written",
            "can",
            "traced",
            "back",
            "experiment",
            "point",
            "time"
        ],
        "Entity": [
            "data",
            "written",
            "modification",
            "deletion",
            "original",
            "data",
            "can",
            "back",
            "experiment",
            "point",
            "time"
        ]
    },
    {
        "Text": "#G18# As a user,  I want to have the ability to keep my data private on the system, and only share data that I deem should be shared.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "keep",
            "share",
            "deem",
            "should"
        ],
        "Entity": [
            "ability",
            "keep",
            "data",
            "private",
            "system",
            "share",
            "data"
        ]
    },
    {
        "Text": "#G18# As a researcher,  I want to have the ability to store all the inputs for an experiment so that the provenance of the results can be verified.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "store",
            "inputs",
            "experiment",
            "results",
            "can",
            "verified"
        ],
        "Entity": [
            "ability",
            "store",
            "all",
            "inputs",
            "experiment",
            "provenance",
            "results",
            "can"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have the ability to search for files by file type and format.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "search",
            "files",
            "file",
            "type",
            "format"
        ],
        "Entity": [
            "ability",
            "search",
            "files",
            "file",
            "type",
            "format"
        ]
    },
    {
        "Text": "#G18# As a researcher,  I want to have the ability to bulk upload directories and files with minimal effort.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "bulk",
            "upload",
            "files"
        ],
        "Entity": [
            "ability",
            "bulk",
            "directories",
            "files",
            "effort"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to associate meta data to the group as a whole at some point in time after the bulk upload has completed, so that I have a period of time to reflect on suitable values for the meta data.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "associate",
            "group",
            "point",
            "time",
            "bulk",
            "upload",
            "has",
            "completed",
            "have",
            "time",
            "reflect",
            "values"
        ],
        "Entity": [
            "associate",
            "data",
            "group",
            "whole",
            "point",
            "time",
            "bulk",
            "period",
            "time",
            "values",
            "data"
        ]
    },
    {
        "Text": "#G18# As a user,  I want to have the ability to change the sharing and ownership of multiple files.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "change",
            "files"
        ],
        "Entity": [
            "ability",
            "change",
            "sharing",
            "ownership",
            "multiple",
            "files"
        ]
    },
    {
        "Text": "#G18# As a researcher,  I want to have the ability to restrict the data I share to certain researchers or groups of researchers.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "restrict",
            "share",
            "groups"
        ],
        "Entity": [
            "ability",
            "data",
            "share",
            "researchers",
            "groups",
            "researchers"
        ]
    },
    {
        "Text": "#G18# As a researcher,  I want to have the ability to locate and access data that colleagues want to share.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "locate",
            "access",
            "want",
            "share"
        ],
        "Entity": [
            "ability",
            "access",
            "data",
            "colleagues",
            "share"
        ]
    },
    {
        "Text": "#G18# As a researcher,  I want to have the ability to interact with a revision control system so that I can keep track of changes to files over time.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "interact",
            "control",
            "can",
            "keep",
            "track",
            "changes",
            "files",
            "time"
        ],
        "Entity": [
            "ability",
            "revision",
            "control",
            "system",
            "can",
            "keep",
            "track",
            "changes",
            "files",
            "over",
            "time"
        ]
    },
    {
        "Text": "#G18# As a JuniorResearcher,  I want to have the ability to harvest knowledge from within the group, so that I can learn from more experienced researchers.",
        "Persona": [
            " JuniorResearcher"
        ],
        "Action": [
            "want",
            "have",
            "harvest",
            "group",
            "can",
            "learn"
        ],
        "Entity": [
            "ability",
            "harvest",
            "knowledge",
            "group",
            "can",
            "more",
            "researchers"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to secure remote access to the Neurohub node when working away from the laboratory",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "secure",
            "access"
        ],
        "Entity": [
            "remote",
            "access",
            "node",
            "working",
            "away",
            "laboratory"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have a group-level repository for sharing papers/reviews/comments with other researchers.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have"
        ],
        "Entity": [
            "repository",
            "sharing",
            "researchers"
        ]
    },
    {
        "Text": "#G18# As a researcher, I want to have the details of the workflow plan as well as the execution history and results recorded in Neurohub while executing a workflow",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "details",
            "plan",
            "well",
            "results",
            "while",
            "executing"
        ],
        "Entity": [
            "details",
            "plan",
            "well",
            "execution",
            "history",
            "results",
            "while",
            "executing"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to know exactly what ALFRED does with my personal data, and share it only on my specific permission. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "know",
            "does",
            "share"
        ],
        "Entity": [
            "know",
            "does",
            "personal",
            "data",
            "share",
            "specific",
            "permission"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to receive information from ALFRED by speech technology. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "receive"
        ],
        "Entity": [
            "information",
            "speech",
            "technology"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use only well-visible buttons.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "buttons"
        ],
        "Entity": [
            "use",
            "buttons"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED as much as possible with speech interaction.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use"
        ],
        "Entity": [
            "use",
            "much",
            "possible",
            "speech",
            "interaction"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to always keep control on the activities of ALFRED. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "keep",
            "control"
        ],
        "Entity": [
            "keep",
            "control",
            "activities"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to be able to manage my privacy and data settings. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "manage"
        ],
        "Entity": [
            "able",
            "manage",
            "privacy",
            "data",
            "settings"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have everything preinstalled, so that I do not have to set up ALFRED by myself.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "have",
            "set"
        ],
        "Entity": [
            "set"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have a small ALFRED device that is wearable and easy to carry with me.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "easy",
            "carry"
        ],
        "Entity": [
            "small",
            "device",
            "wearable",
            "carry"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have ALFRED on all my computers, tablets and phone.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "phone"
        ],
        "Entity": [
            "all",
            "computers",
            "tablets",
            "phone"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have ALFRED on a bracelet or a necklace, so that I can always wear him with me. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "wear"
        ],
        "Entity": [
            "bracelet",
            "necklace",
            "can",
            "wear"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have clear instructions and service after sales that guide me if I have trouble in using ALFRED.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "clear",
            "service",
            "guide",
            "have",
            "trouble",
            "using"
        ],
        "Entity": [
            "clear",
            "instructions",
            "service",
            "sales",
            "guide",
            "trouble",
            "using"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have an ALFRED device that speaks very slowly and clearly.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "speaks"
        ],
        "Entity": [
            "device"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have an ALFRED device that only reacts to me.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "reacts"
        ],
        "Entity": [
            "device"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have an ALFRED device that only listens to me when I ask it to. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "listens",
            "ask"
        ],
        "Entity": [
            "device"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have an introduction conversation with ALFRED, so that I can learn everything about him and he about me. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "learn"
        ],
        "Entity": [
            "introduction",
            "conversation",
            "can"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to buy ALFRED in a senior shop with special client support. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "buy",
            "shop",
            "support"
        ],
        "Entity": [
            "buy",
            "senior",
            "shop",
            "special",
            "client",
            "support"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to buy ALFRED for a low price. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "buy",
            "low",
            "price"
        ],
        "Entity": [
            "buy",
            "low",
            "price"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to receive visual support, especially when looking at a list, map or agenda.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "receive",
            "support",
            "list",
            "map"
        ],
        "Entity": [
            "visual",
            "support",
            "looking",
            "list",
            "map",
            "agenda"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to pay for small amounts.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "pay",
            "amounts"
        ],
        "Entity": [
            "use",
            "pay",
            "small",
            "amounts"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have a very good battery for ALFRED so I can keep him on the whole day.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "keep"
        ],
        "Entity": [
            "good",
            "battery",
            "can",
            "keep",
            "whole",
            "day"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have an ALFRED device that informs me about a low battery when leaving the house. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "informs",
            "low",
            "leaving",
            "house"
        ],
        "Entity": [
            "device",
            "low",
            "battery",
            "leaving",
            "house"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have an ALFRED device that can be easily adapted for user that have visual or hearing troubles.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "have",
            "troubles"
        ],
        "Entity": [
            "device",
            "can",
            "user",
            "visual",
            "hearing",
            "troubles"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have an ALFRED device that can be easily adapted for user that have visual troubles. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "have",
            "troubles"
        ],
        "Entity": [
            "device",
            "can",
            "user",
            "visual",
            "troubles"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have an ALFRED device that can be easily adapted for user that have hearing trouble. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "have",
            "trouble"
        ],
        "Entity": [
            "device",
            "can",
            "user",
            "hearing",
            "trouble"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have an ALFRED device that repeats the last phrase. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "repeats",
            "last",
            "phrase"
        ],
        "Entity": [
            "device",
            "repeats",
            "last",
            "phrase"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to be able to zoom into visual content. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "zoom",
            "content"
        ],
        "Entity": [
            "able",
            "zoom",
            "visual",
            "content"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have an ALFRED device that responds to the changing demand of the users by offering new Apps in the ALFREDO platform.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "responds",
            "changing",
            "demand"
        ],
        "Entity": [
            "device",
            "responds",
            "demand",
            "users",
            "offering",
            "platform"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have an ALFRED device that helps me to communicate with my friends and family. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "helps",
            "communicate",
            "friends"
        ],
        "Entity": [
            "device",
            "helps",
            "friends",
            "family"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have video conversation with others. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have"
        ],
        "Entity": [
            "video",
            "conversation"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to have videophone. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "have"
        ],
        "Entity": [
            "videophone"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have an AFLRED device that encourages its users for real interaction between humans and not only with ICT tools. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "encourages",
            "tools"
        ],
        "Entity": [
            "device",
            "users",
            "real",
            "interaction",
            "humans",
            "tools"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have an ALFRED device that provides me with information about existing apps that corresponds to my interests. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "provides",
            "corresponds",
            "interests"
        ],
        "Entity": [
            "device",
            "information",
            "interests"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to be able to customize my preferences in the different functionalities of the solution.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "customize"
        ],
        "Entity": [
            "able",
            "preferences",
            "solution"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to have a simple ALFRED unit that is expandable in is functions. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "have",
            "functions"
        ],
        "Entity": [
            "simple",
            "unit",
            "functions"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have my data stored directly on the phone.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "stored",
            "phone"
        ],
        "Entity": [
            "data",
            "phone"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to receive a wake up call from ALFRED in the morning checking on me if I am ok.",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "receive",
            "wake",
            "call"
        ],
        "Entity": [
            "wake",
            "call",
            "morning"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to receive day and night rythm support with agenda reminders. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "receive",
            "support"
        ],
        "Entity": [
            "day",
            "night",
            "support",
            "agenda",
            "reminders"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to receive support to use the public transport. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "receive",
            "support",
            "use",
            "transport"
        ],
        "Entity": [
            "support",
            "use",
            "public",
            "transport"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED for navigation. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use"
        ],
        "Entity": [
            "use",
            "navigation"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED for touristic walks and indications with explanations on historical and cultural sights. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "walks",
            "sights"
        ],
        "Entity": [
            "use",
            "walks",
            "indications",
            "explanations",
            "sights"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to receive support to have a taxi on time. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "receive",
            "support",
            "have",
            "taxi",
            "time"
        ],
        "Entity": [
            "support",
            "taxi",
            "time"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to see who is standing at my door and open the door. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "see",
            "open"
        ],
        "Entity": [
            "use",
            "see",
            "who",
            "standing",
            "door",
            "open",
            "door"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to pick the phone sooner up when I am at home. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "pick",
            "phone",
            "home"
        ],
        "Entity": [
            "use",
            "pick",
            "phone",
            "home"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to turn on/off the lights. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "turn",
            "lights"
        ],
        "Entity": [
            "use",
            "turn",
            "lights"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to control the heating. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "control"
        ],
        "Entity": [
            "use",
            "control",
            "heating"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to control the TV and radio. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "control",
            "radio"
        ],
        "Entity": [
            "use",
            "control",
            "radio"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to watch movies. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "watch"
        ],
        "Entity": [
            "use",
            "watch",
            "movies"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to hear about the news. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "hear"
        ],
        "Entity": [
            "use",
            "news"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to contact help in case of an emergency. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "contact",
            "help",
            "case"
        ],
        "Entity": [
            "use",
            "contact",
            "help",
            "case",
            "emergency"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to use video calls in case of emergency. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "use",
            "calls",
            "case"
        ],
        "Entity": [
            "use",
            "video",
            "calls",
            "case",
            "emergency"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have ALFRED contact the nearest caregiver when I ask ALFRED for urgent help. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "contact",
            "ask",
            "help"
        ],
        "Entity": [
            "contact",
            "caregiver",
            "help"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to receive a message when my home care nurse is on her way. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "receive",
            "message",
            "home",
            "care",
            "nurse"
        ],
        "Entity": [
            "message",
            "home",
            "care",
            "nurse",
            "way"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to receive a medicine reminder from ALFRED. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "receive",
            "medicine"
        ],
        "Entity": [
            "medicine",
            "reminder"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to be able to see whether I already have taken my pills, so that I can avoid an overdose. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "see",
            "have",
            "taken",
            "pills",
            "can",
            "avoid",
            "overdose"
        ],
        "Entity": [
            "able",
            "see",
            "pills",
            "can",
            "overdose"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to be able to see if the patient has taken her medicine. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "see",
            "has",
            "taken",
            "medicine"
        ],
        "Entity": [
            "able",
            "see",
            "patient",
            "medicine"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to do my grocery shopping. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use"
        ],
        "Entity": [
            "use",
            "grocery",
            "shopping"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to send messages. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "send",
            "messages"
        ],
        "Entity": [
            "use",
            "send",
            "messages"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have ALFRED to detect falls and send an emergency to a specific contact. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "detect",
            "falls",
            "send",
            "contact"
        ],
        "Entity": [
            "falls",
            "send",
            "emergency",
            "specific",
            "contact"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have ALFRED to suggest healthy recipes. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "suggest"
        ],
        "Entity": [
            "recipes"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have ALFRED ask spontaneous questions but it would be better to programme it during certain times of the day. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "ask",
            "questions",
            "would",
            "better",
            "programme",
            "times"
        ],
        "Entity": [
            "questions",
            "but",
            "better",
            "programme",
            "times",
            "day"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have ALFRED to initiate questions, but it should be in the domains of my interest such as cinema, exhibitions, cooking. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "initiate",
            "questions",
            "should",
            "interest"
        ],
        "Entity": [
            "initiate",
            "questions",
            "but",
            "domains",
            "interest",
            "cinema",
            "exhibitions",
            "cooking"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to be able to call someone with ALFRED. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "call"
        ],
        "Entity": [
            "able",
            "call",
            "someone"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to activate the vocal interaction mode of ALFRED by pushing a specific button. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "activate",
            "button"
        ],
        "Entity": [
            "vocal",
            "interaction",
            "mode",
            "pushing",
            "specific",
            "button"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to maintain my contact list in my phone. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "maintain",
            "contact",
            "list",
            "phone"
        ],
        "Entity": [
            "use",
            "contact",
            "list",
            "phone"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to manage my agenda. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "manage"
        ],
        "Entity": [
            "use",
            "manage",
            "agenda"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to insert my meetings into ALFRED using speech. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "insert",
            "using"
        ],
        "Entity": [
            "insert",
            "meetings",
            "using",
            "speech"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to receive reminders on my appointments. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "receive"
        ],
        "Entity": [
            "reminders",
            "appointments"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to receive a reminder from ALFRED on all the things I need to bring with me when I leave the house. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "receive",
            "need",
            "bring",
            "leave",
            "house"
        ],
        "Entity": [
            "reminder",
            "all",
            "things",
            "need",
            "leave",
            "house"
        ]
    },
    {
        "Text": "#G19# As a SocialCaregiver, I want ALFRED to remind me of the things I need to bring to the person I care for. ",
        "Persona": [
            " SocialCaregiver"
        ],
        "Action": [
            "want",
            "remind",
            "need",
            "bring",
            "care"
        ],
        "Entity": [
            "things",
            "need",
            "person",
            "care"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to set up social groups of people with similar diseases. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "set",
            "groups",
            "people"
        ],
        "Entity": [
            "use",
            "set",
            "social",
            "groups",
            "people",
            "diseases"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to contact people from my own circle. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "contact",
            "people",
            "own",
            "circle"
        ],
        "Entity": [
            "use",
            "contact",
            "people",
            "circle"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to learn about art expositions or a museum. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "learn",
            "art"
        ],
        "Entity": [
            "use",
            "art",
            "expositions",
            "museum"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to learn about all the social activities that are organized in my neighborhood. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "learn",
            "are",
            "organized"
        ],
        "Entity": [
            "use",
            "all",
            "social",
            "activities",
            "neighborhood"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to get a personalized invitation to a social event, so that it motivates more to go. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "get",
            "motivates"
        ],
        "Entity": [
            "use",
            "invitation",
            "social",
            "event",
            "more"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to navigate to an event or concert and help me when I am lost. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "navigate",
            "concert",
            "help"
        ],
        "Entity": [
            "use",
            "event",
            "concert",
            "help",
            "lost"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to help me navigate despite my mild cognitive impairments. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "help",
            "navigate",
            "despite"
        ],
        "Entity": [
            "use",
            "help",
            "despite",
            "mild",
            "impairments"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to be able to pay for small amounts. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "pay",
            "amounts"
        ],
        "Entity": [
            "able",
            "pay",
            "small",
            "amounts"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to use ALFRED to organize a meeting with a group of friends at a certain place. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "use",
            "organize",
            "group",
            "friends",
            "place"
        ],
        "Entity": [
            "use",
            "meeting",
            "group",
            "friends",
            "place"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to play online games together with other users. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "play",
            "games"
        ],
        "Entity": [
            "play",
            "games",
            "users"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to get suggestions for sports classes in my neighbourhood. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "get",
            "sports",
            "classes"
        ],
        "Entity": [
            "suggestions",
            "sports",
            "classes",
            "neighbourhood"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have ALFRED to enable me to have face to face contacts as well, so that I do not just have virtual contacts over ALFRED. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "enable",
            "have",
            "face",
            "face",
            "contacts",
            "well",
            "have",
            "contacts"
        ],
        "Entity": [
            "face",
            "face",
            "contacts",
            "well",
            "contacts",
            "over"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to help me to control my body weight. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "help",
            "control",
            "body",
            "weight"
        ],
        "Entity": [
            "help",
            "control",
            "body",
            "weight"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to just press one button to call my caregiver. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "press",
            "button",
            "call"
        ],
        "Entity": [
            "press",
            "one",
            "button",
            "call",
            "caregiver"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to decide who has access to my vital data. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "decide",
            "has",
            "access"
        ],
        "Entity": [
            "who",
            "access",
            "vital",
            "data"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to be sure that the user can decide who has access to her data. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "can",
            "decide",
            "has",
            "access"
        ],
        "Entity": [
            "user",
            "can",
            "who",
            "access",
            "data"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have the wearables with integrated sensors to look good and not to be stigmatizing. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "integrated",
            "look",
            "stigmatizing"
        ],
        "Entity": [
            "sensors",
            "look",
            "good"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to see my vital parameters myself on the phone. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "see",
            "phone"
        ],
        "Entity": [
            "see",
            "vital",
            "parameters",
            "phone"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have the ALFRED shirt to look good. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "shirt",
            "look"
        ],
        "Entity": [
            "shirt",
            "look",
            "good"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have the ALFRED shirt has to be non stigmatizing. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "shirt",
            "has",
            "stigmatizing"
        ],
        "Entity": [
            "shirt"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to have ALFRED to be able to determine the user's blood pressure. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "have",
            "determine",
            "blood",
            "pressure"
        ],
        "Entity": [
            "able",
            "blood",
            "pressure"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to have ALFRED to be able to determine the user's body temperature. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "have",
            "determine",
            "body"
        ],
        "Entity": [
            "able",
            "body",
            "temperature"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to have ALFRED to be able to determine the user's heart rate. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "have",
            "determine",
            "heart",
            "rate"
        ],
        "Entity": [
            "able",
            "heart",
            "rate"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to have ALFRED to be able to determine the user's breathing frequency. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "have",
            "determine"
        ],
        "Entity": [
            "able",
            "breathing",
            "frequency"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to have feedback on the activity level of the user. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "have",
            "level"
        ],
        "Entity": [
            "activity",
            "level",
            "user"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to locate the ALFRED user. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "locate"
        ],
        "Entity": [
            "user"
        ]
    },
    {
        "Text": "#G19# As a SocialCaregiver, I want to have ALFRED to be able to recognize pain and or stress by using skin conduction sensors. ",
        "Persona": [
            " SocialCaregiver"
        ],
        "Action": [
            "want",
            "have",
            "recognize",
            "pain",
            "stress",
            "using",
            "skin"
        ],
        "Entity": [
            "able",
            "pain",
            "stress",
            "using",
            "skin",
            "conduction",
            "sensors"
        ]
    },
    {
        "Text": "#G19# As a SocialCaregiver, I want to have a step counter included into ALFRED. ",
        "Persona": [
            " SocialCaregiver"
        ],
        "Action": [
            "want",
            "have",
            "step",
            "counter"
        ],
        "Entity": [
            "step",
            "counter"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have ALFRED to give me goals and missions that encourage me to do new activities and exercises and to go out. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "give",
            "missions",
            "encourage",
            "exercises",
            "out"
        ],
        "Entity": [
            "give",
            "goals",
            "missions",
            "activities",
            "exercises",
            "out"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have ALFRED to set limits in the games duration as I get bored easily. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "set",
            "limits",
            "games",
            "get",
            "bored"
        ],
        "Entity": [
            "set",
            "limits",
            "games",
            "duration"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to play games where I can use my Imagination. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "play",
            "games",
            "can",
            "use"
        ],
        "Entity": [
            "play",
            "games",
            "where",
            "can",
            "use",
            "imagination"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to do guided exercises with ALFRED and ALFRED should also use sensors to capture health data while I am doing exercises. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "guided",
            "exercises",
            "should",
            "use",
            "capture",
            "while",
            "exercises"
        ],
        "Entity": [
            "exercises",
            "use",
            "sensors",
            "capture",
            "health",
            "data",
            "while",
            "doing",
            "exercises"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have games that include my favourite sports. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "games",
            "include",
            "sports"
        ],
        "Entity": [
            "games",
            "favourite",
            "sports"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to receive suggestions about local sport Classes. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "receive",
            "sport",
            "classes"
        ],
        "Entity": [
            "suggestions",
            "local",
            "sport",
            "classes"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have ALFRED to remind me to keep a good body posture. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "remind",
            "keep",
            "body",
            "posture"
        ],
        "Entity": [
            "keep",
            "good",
            "body",
            "posture"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to have ALFRED to remind people to exercise regularly. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "have",
            "remind",
            "people",
            "exercise"
        ],
        "Entity": [
            "people",
            "exercise"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to receive specific tips how to reduce my health impairments without medication. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "receive",
            "tips",
            "reduce"
        ],
        "Entity": [
            "specific",
            "tips",
            "how",
            "health",
            "impairments",
            "medication"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have some games that show me how good my memory and physical health is. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "games",
            "show"
        ],
        "Entity": [
            "games",
            "show",
            "how",
            "good",
            "memory",
            "physical",
            "health"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have training for specific muscle Groups. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "muscle",
            "groups"
        ],
        "Entity": [
            "training",
            "specific",
            "muscle",
            "groups"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to have ALFRED to offer training for specific muscle groups. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "have",
            "offer",
            "muscle",
            "groups"
        ],
        "Entity": [
            "offer",
            "training",
            "specific",
            "muscle",
            "groups"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to be able to see my training Performance. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "see"
        ],
        "Entity": [
            "able",
            "see",
            "training",
            "performance"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to have ALFRED to help to motivate me during the week to do exercise that should change daily, as the constant change motivates me. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "have",
            "help",
            "motivate",
            "exercise",
            "should",
            "change",
            "change",
            "motivates"
        ],
        "Entity": [
            "help",
            "week",
            "exercise",
            "change",
            "daily",
            "constant",
            "change"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to have ALFRED to propose me games that require the combination of mental and physical exercise, such as opposing motion exercises of the arms and legs. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "have",
            "propose",
            "games",
            "require",
            "exercise",
            "motion",
            "exercises",
            "arms",
            "legs"
        ],
        "Entity": [
            "games",
            "combination",
            "physical",
            "exercise",
            "motion",
            "exercises",
            "arms",
            "legs"
        ]
    },
    {
        "Text": "#G19# As an OlderPerson, I want to games that require the combination of mental and physical exercise, such as opposing motion exercises of the arms and legs. ",
        "Persona": [
            " OlderPerson"
        ],
        "Action": [
            "want",
            "games",
            "require",
            "exercise",
            "motion",
            "exercises",
            "arms",
            "legs"
        ],
        "Entity": [
            "games",
            "combination",
            "physical",
            "exercise",
            "motion",
            "exercises",
            "arms",
            "legs"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to control if the user does the exercise correct. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "control",
            "does",
            "exercise",
            "correct"
        ],
        "Entity": [
            "control",
            "user",
            "does",
            "exercise"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to have a regular summary on how much exercise is performed by the user. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "have",
            "exercise"
        ],
        "Entity": [
            "regular",
            "summary",
            "how",
            "much",
            "exercise",
            "user"
        ]
    },
    {
        "Text": "#G19# As an InformalCaregiver, I want to have a game that the carer could play together with the user, so that it would enable to monitor the users’ state of health but also have some fun time. ",
        "Persona": [
            " InformalCaregiver"
        ],
        "Action": [
            "want",
            "have",
            "game",
            "could",
            "play",
            "would",
            "enable",
            "monitor",
            "state",
            "have",
            "fun",
            "time"
        ],
        "Entity": [
            "game",
            "carer",
            "play",
            "user",
            "monitor",
            "state",
            "health",
            "but",
            "fun",
            "time"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to have ALFRED to propose training that promotes complex thinking. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "have",
            "propose",
            "promotes"
        ],
        "Entity": [
            "training",
            "complex",
            "thinking"
        ]
    },
    {
        "Text": "#G19# As a MedicalCaregiver, I want to give corrective feedback if exercises are performed wrong, too much or in any other way harmful to the user. ",
        "Persona": [
            " MedicalCaregiver"
        ],
        "Action": [
            "want",
            "give",
            "exercises",
            "are",
            "wrong"
        ],
        "Entity": [
            "give",
            "corrective",
            "exercises",
            "wrong",
            "much",
            "way",
            "user"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to present my app to as many people as Possible. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "present",
            "people"
        ],
        "Entity": [
            "present",
            "many",
            "people",
            "possible"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to have the accounting to be as simple and clear as Possible. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "have",
            "clear"
        ],
        "Entity": [
            "accounting",
            "simple",
            "clear",
            "possible"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to easily create and to maintain my apps within the market place. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "create",
            "maintain",
            "market",
            "place"
        ],
        "Entity": [
            "market",
            "place"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to enable customers to provide feedback about my App and need an easy way to watch this feedback. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "enable",
            "provide",
            "need",
            "easy",
            "watch"
        ],
        "Entity": [
            "customers",
            "need",
            "way",
            "watch"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to have an easy way to manage the pricing modality of my Apps. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "have",
            "easy",
            "manage",
            "pricing"
        ],
        "Entity": [
            "way",
            "manage",
            "pricing",
            "modality"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to have the API to be well defined and well documented. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "have",
            "well",
            "defined",
            "well"
        ],
        "Entity": [
            "well",
            "well"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to obtain Apps development support. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "obtain",
            "support"
        ],
        "Entity": [
            "development",
            "support"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to know the fees the provider of the market place charges for using the platform. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "know",
            "fees",
            "market",
            "place",
            "charges",
            "using"
        ],
        "Entity": [
            "know",
            "fees",
            "provider",
            "market",
            "place",
            "charges",
            "using",
            "platform"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to be notified as soon as possible when the state of any of my Apps changes. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "notified",
            "state",
            "changes"
        ],
        "Entity": [
            "possible",
            "state",
            "changes"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to have detailed information of what happened when my App crashes on the user’s device. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "have",
            "crashes"
        ],
        "Entity": [
            "information",
            "crashes",
            "device"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to present my App in several ways. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "present"
        ],
        "Entity": [
            "present",
            "ways"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to be able to design my App on my own - though there will be a few rules I have to stand to. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "design",
            "own",
            "will",
            "rules",
            "have",
            "stand"
        ],
        "Entity": [
            "able",
            "design",
            "there",
            "will",
            "few",
            "rules",
            "stand"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to have an easy way to define questions the user can ask and perform. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "have",
            "easy",
            "define",
            "questions",
            "can",
            "ask",
            "perform"
        ],
        "Entity": [
            "way",
            "questions",
            "user",
            "can"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to have my App to be granted access to several operating system features. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "have",
            "access",
            "features"
        ],
        "Entity": [
            "access",
            "system",
            "features"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to have the API components to be on a high level so that I don’t have to deal with their details. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "have",
            "level",
            "have",
            "deal",
            "details"
        ],
        "Entity": [
            "components",
            "high",
            "level",
            "deal",
            "details"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to have an easy way to read data from health sensors the user is wearing. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "have",
            "easy",
            "read"
        ],
        "Entity": [
            "way",
            "read",
            "data",
            "health",
            "sensors",
            "user",
            "wearing"
        ]
    },
    {
        "Text": "#G19# As a serious games developer, I want to be able to take control over some functions to provide the desired user experience. ",
        "Persona": [
            " serious games developer"
        ],
        "Action": [
            "want",
            "take",
            "control",
            "functions",
            "provide",
            "experience"
        ],
        "Entity": [
            "able",
            "take",
            "control",
            "over",
            "functions",
            "user",
            "experience"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to provide an easy way to manage the user Settings. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "provide",
            "easy",
            "manage"
        ],
        "Entity": [
            "way",
            "manage",
            "user",
            "settings"
        ]
    },
    {
        "Text": "#G19# As a developer, I want to have the ALFRED API to reduce the work to achieve my goals. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "have",
            "reduce",
            "work",
            "achieve"
        ],
        "Entity": [
            "work",
            "goals"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to view a list of sponsors, so that I can thank all the awesome sponsors.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "view",
            "list",
            "sponsors",
            "can",
            "thank",
            "sponsors"
        ],
        "Entity": [
            "view",
            "list",
            "sponsors",
            "can",
            "all",
            "sponsors"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to view a list of user profiles, so that I know who is attending the conference.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "view",
            "list",
            "profiles",
            "know"
        ],
        "Entity": [
            "view",
            "list",
            "user",
            "profiles",
            "know",
            "who",
            "attending",
            "conference"
        ]
    },
    {
        "Text": "#G21# As a trainingcoordinator, I want to email all the trainers at once from the website for info and updates, so that It is easier to use.",
        "Persona": [
            " trainingcoordinator"
        ],
        "Action": [
            "want",
            "updates",
            "use"
        ],
        "Entity": [
            "all",
            "trainers",
            "once",
            "info",
            "updates",
            "use"
        ]
    },
    {
        "Text": "#G21# As a attendee, I want to have a very clear map where the buildings and rooms are, so that I can make it to class on time.",
        "Persona": [
            " attendee"
        ],
        "Action": [
            "want",
            "have",
            "clear",
            "map",
            "rooms",
            "are",
            "can",
            "make",
            "class",
            "time"
        ],
        "Entity": [
            "clear",
            "map",
            "where",
            "buildings",
            "rooms",
            "can",
            "make",
            "class",
            "time"
        ]
    },
    {
        "Text": "#G21# As a trainer, I want to edit my training node myself, so that the training coordinators don't have to and links to slides.",
        "Persona": [
            " trainer"
        ],
        "Action": [
            "want",
            "edit",
            "don't",
            "have",
            "links",
            "slides"
        ],
        "Entity": [
            "edit",
            "training",
            "node",
            "training",
            "coordinators",
            "don't",
            "links",
            "slides"
        ]
    },
    {
        "Text": "#G21# As a trainee, I want to limit to one registration per day per authenticated user, so that we don't have duplicate spaces.",
        "Persona": [
            " trainee"
        ],
        "Action": [
            "want",
            "limit",
            "don't",
            "have",
            "duplicate",
            "spaces"
        ],
        "Entity": [
            "limit",
            "one",
            "registration",
            "day",
            "user",
            "don't",
            "duplicate",
            "spaces"
        ]
    },
    {
        "Text": "#G21# As a trainingcoordinator, I want to have an admin view that helps track registration status for each attendee so that, so that we can see if attendend, refunded, no show.",
        "Persona": [
            " trainingcoordinator"
        ],
        "Action": [
            "want",
            "have",
            "view",
            "helps",
            "track",
            "can",
            "see",
            "show"
        ],
        "Entity": [
            "admin",
            "view",
            "helps",
            "track",
            "registration",
            "status",
            "can",
            "see",
            "show"
        ]
    },
    {
        "Text": "#G21# As a attendee, I want to be added to a training waitlist, so that so they can be considered for a class.",
        "Persona": [
            " attendee"
        ],
        "Action": [
            "want",
            "can",
            "class"
        ],
        "Entity": [
            "training",
            "can",
            "class"
        ]
    },
    {
        "Text": "#G21# As a trainee, I want to must accept the cancellation terms with a checkbox, so that they can be accountable..",
        "Persona": [
            " trainee"
        ],
        "Action": [
            "want",
            "must",
            "accept",
            "terms",
            "can"
        ],
        "Entity": [
            "must",
            "cancellation",
            "terms",
            "can"
        ]
    },
    {
        "Text": "#G21# As a trainingcoordinator, I want to tie in a cancellation deadline to whatever registration / cancellation workflow exists, so that so we don't loose money or spots.",
        "Persona": [
            " trainingcoordinator"
        ],
        "Action": [
            "want",
            "tie",
            "exists",
            "don't",
            "loose",
            "spots"
        ],
        "Entity": [
            "tie",
            "cancellation",
            "deadline",
            "registration",
            "cancellation",
            "don't",
            "loose",
            "money",
            "spots"
        ]
    },
    {
        "Text": "#G21# As a trainee, I want to add to \"my schedule\" if there is a schedule feature on the site, so that they can schedule their event experience.",
        "Persona": [
            " trainee"
        ],
        "Action": [
            "want",
            "add",
            "schedule",
            "feature",
            "site",
            "can",
            "schedule",
            "experience"
        ],
        "Entity": [
            "there",
            "schedule",
            "feature",
            "site",
            "can",
            "schedule",
            "event",
            "experience"
        ]
    },
    {
        "Text": "#G21# As a trainee, I want to see which trainings I have signed up for, so that they can schedule their event experience.",
        "Persona": [
            " trainee"
        ],
        "Action": [
            "want",
            "see",
            "have",
            "can",
            "schedule",
            "experience"
        ],
        "Entity": [
            "see",
            "trainings",
            "can",
            "schedule",
            "event",
            "experience"
        ]
    },
    {
        "Text": "#G21# As a trainer, I want to have a view that is attached to their training node that shows all attendee information Trainers can see all class attendance at first because there are so little trainers and they are trusted with privacy, so that the training coordinator doesn't have to do all the work to get login info for environment setup.",
        "Persona": [
            " trainer"
        ],
        "Action": [
            "want",
            "have",
            "view",
            "shows",
            "can",
            "see",
            "class",
            "are",
            "are",
            "have",
            "work",
            "get"
        ],
        "Entity": [
            "view",
            "training",
            "node",
            "shows",
            "all",
            "information",
            "trainers",
            "can",
            "see",
            "all",
            "class",
            "attendance",
            "first",
            "there",
            "little",
            "trainers",
            "privacy",
            "training",
            "coordinator",
            "doesn't",
            "all",
            "work",
            "info",
            "environment"
        ]
    },
    {
        "Text": "#G21# As a trainingcoordinator, I want to have an admin view where all trainee information is shown and can be filtered to show a single training session, so that I can see WTF is happening.",
        "Persona": [
            " trainingcoordinator"
        ],
        "Action": [
            "want",
            "have",
            "view",
            "shown",
            "can",
            "show",
            "single",
            "can",
            "see"
        ],
        "Entity": [
            "admin",
            "view",
            "where",
            "all",
            "trainee",
            "information",
            "can",
            "show",
            "single",
            "training",
            "session",
            "can",
            "see",
            "happening"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to have a dedicated page for each class to learn more about the offering The following information must be shown: Logo, title, trainers, location, possibly a map view, datetime, skill level, registrations remaining, link to register for class. The URL path should be SEO friendly /training/training-title, so that I can choose the right class, AND the trainer can tweet and promote their class.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "have",
            "page",
            "class",
            "learn",
            "must",
            "title",
            "map",
            "view",
            "level",
            "link",
            "register",
            "class",
            "should",
            "can",
            "choose",
            "right",
            "class",
            "can",
            "tweet",
            "promote",
            "class"
        ],
        "Entity": [
            "page",
            "class",
            "more",
            "offering",
            "following",
            "information",
            "must",
            "logo",
            "title",
            "trainers",
            "location",
            "map",
            "view",
            "skill",
            "level",
            "registrations",
            "link",
            "register",
            "class",
            "path",
            "friendly",
            "can",
            "right",
            "class",
            "trainer",
            "can",
            "tweet",
            "class"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to have the training options clearly marked for the following information: day and time of training, title, short summary, trainers, level, number of registrations, remaining registrations, location of training, link to full details of the training, register now link, so that I can shop for training all with one page AND find their class on on one page.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "have",
            "time",
            "title",
            "short",
            "level",
            "number",
            "link",
            "full",
            "details",
            "register",
            "link",
            "can",
            "shop",
            "page",
            "find",
            "class",
            "page"
        ],
        "Entity": [
            "training",
            "options",
            "following",
            "day",
            "time",
            "training",
            "title",
            "short",
            "summary",
            "trainers",
            "level",
            "number",
            "registrations",
            "registrations",
            "location",
            "training",
            "link",
            "full",
            "details",
            "training",
            "register",
            "now",
            "link",
            "can",
            "shop",
            "training",
            "all",
            "one",
            "page",
            "find",
            "class",
            "one",
            "page"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to have a training landing page with an intro section and a list of all training offerings and promote call for trainings, so that I can shop for training all with one page and we can have a call for trainings for selection.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "have",
            "page",
            "section",
            "list",
            "promote",
            "call",
            "can",
            "shop",
            "page",
            "can",
            "have",
            "call"
        ],
        "Entity": [
            "training",
            "landing",
            "page",
            "intro",
            "section",
            "list",
            "all",
            "training",
            "offerings",
            "call",
            "trainings",
            "can",
            "shop",
            "training",
            "all",
            "one",
            "page",
            "can",
            "call",
            "trainings",
            "selection"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to have a link on the home page to a list of training options, so that I can take training.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "have",
            "link",
            "home",
            "page",
            "list",
            "can",
            "take"
        ],
        "Entity": [
            "link",
            "home",
            "page",
            "list",
            "training",
            "options",
            "can",
            "take",
            "training"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to find out where the coding lounge is and what time it is open, so that I can code with my friends.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "find",
            "out",
            "coding",
            "lounge",
            "time",
            "open",
            "can",
            "code",
            "friends"
        ],
        "Entity": [
            "find",
            "out",
            "where",
            "coding",
            "lounge",
            "time",
            "open",
            "can",
            "code",
            "friends"
        ]
    },
    {
        "Text": "#G21# As a administrator, I want to refund sponsorship money that was processed via stripe, so that people get their monies back.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "refund",
            "was",
            "stripe",
            "people",
            "get",
            "back"
        ],
        "Entity": [
            "refund",
            "sponsorship",
            "money",
            "stripe",
            "people",
            "monies",
            "back"
        ]
    },
    {
        "Text": "#G21# As a authenticateduser, I want to find a link on the sponsorships page to become a $350 level sponsor, so that I can pay for and become a sponsor role.",
        "Persona": [
            " authenticateduser"
        ],
        "Action": [
            "want",
            "find",
            "link",
            "page",
            "become",
            "level",
            "sponsor",
            "can",
            "pay",
            "become",
            "sponsor"
        ],
        "Entity": [
            "find",
            "link",
            "sponsorships",
            "page",
            "level",
            "sponsor",
            "can",
            "pay",
            "sponsor",
            "role"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to See a list of attendees associated with this company, so that I know who from this sponsor organization is attending.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "see",
            "list",
            "associated",
            "company",
            "know",
            "sponsor"
        ],
        "Entity": [
            "see",
            "list",
            "company",
            "know",
            "who",
            "sponsor",
            "organization",
            "attending"
        ]
    },
    {
        "Text": "#G21# As a authenticateduser, I want to identify myself as and pay for a $350 company sponsorship, so that I can easily become a sponsor at this level without having to interface with badcamp personnel to get a sponsorship.",
        "Persona": [
            " authenticateduser"
        ],
        "Action": [
            "want",
            "identify",
            "pay",
            "company",
            "can",
            "become",
            "sponsor",
            "level",
            "get"
        ],
        "Entity": [
            "pay",
            "company",
            "sponsorship",
            "can",
            "sponsor",
            "level",
            "interface",
            "personnel",
            "sponsorship"
        ]
    },
    {
        "Text": "#G21# As a administrator, I want to create and maintain venues, so that I can provide location details to help users find what they're looking for.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "create",
            "maintain",
            "can",
            "provide",
            "details",
            "help",
            "find"
        ],
        "Entity": [
            "venues",
            "can",
            "location",
            "details",
            "help",
            "users",
            "find",
            "they're",
            "looking"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to view venue details, so that I can get a sense of the location and see the events happening there.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "view",
            "details",
            "can",
            "get",
            "sense",
            "see"
        ],
        "Entity": [
            "view",
            "venue",
            "details",
            "can",
            "sense",
            "location",
            "see",
            "events",
            "happening",
            "there"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to see a list of the sessions associated with sponsor attendees, so that I know where I can engage with this sponsor and where they are thought leaders.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "see",
            "list",
            "associated",
            "sponsor",
            "know",
            "can",
            "engage",
            "sponsor",
            "are",
            "thought"
        ],
        "Entity": [
            "see",
            "list",
            "sessions",
            "sponsor",
            "know",
            "where",
            "can",
            "sponsor",
            "where",
            "thought",
            "leaders"
        ]
    },
    {
        "Text": "#G21# As a authenticateduser, I want to See a payment page to pay for my individual sponsorships as the third step of the registration process so that pay for my sponsorship.",
        "Persona": [
            " authenticateduser"
        ],
        "Action": [
            "want",
            "see",
            "page",
            "pay",
            "step",
            "process",
            "pay"
        ],
        "Entity": [
            "see",
            "payment",
            "page",
            "pay",
            "individual",
            "sponsorships",
            "third",
            "step",
            "registration",
            "process",
            "pay",
            "sponsorship"
        ]
    },
    {
        "Text": "#G21# As a administrator, I want to assign sponsors to events, trainings and summits so that They will be featured on the sponsor detail page.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "assign",
            "sponsors",
            "will",
            "featured",
            "sponsor",
            "detail",
            "page"
        ],
        "Entity": [
            "assign",
            "sponsors",
            "events",
            "trainings",
            "summits",
            "will",
            "sponsor",
            "detail",
            "page"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to see all events, trainings and summits that a sponsor is sponsoring so that I know where I can engage with this sponsor and where they are thought leaders.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "see",
            "sponsor",
            "know",
            "can",
            "engage",
            "sponsor",
            "are",
            "thought"
        ],
        "Entity": [
            "see",
            "all",
            "events",
            "trainings",
            "summits",
            "sponsor",
            "know",
            "where",
            "can",
            "sponsor",
            "where",
            "thought",
            "leaders"
        ]
    },
    {
        "Text": "#G21# As a authenticateduser, I want to Enter payment information and have my card charged for an individual sponsorship, so that I can pay for an individual sponsorship.",
        "Persona": [
            " authenticateduser"
        ],
        "Action": [
            "want",
            "enter",
            "have",
            "card",
            "charged",
            "can",
            "pay"
        ],
        "Entity": [
            "payment",
            "information",
            "card",
            "individual",
            "sponsorship",
            "can",
            "pay",
            "individual",
            "sponsorship"
        ]
    },
    {
        "Text": "#G21# As a sponsor, I want to link BADCamp attendees to my sponsorship page, so that I can show off our level of attendance.",
        "Persona": [
            " sponsor"
        ],
        "Action": [
            "want",
            "link",
            "page",
            "can",
            "show",
            "level"
        ],
        "Entity": [
            "link",
            "sponsorship",
            "page",
            "can",
            "show",
            "off",
            "level",
            "attendance"
        ]
    },
    {
        "Text": "#G21# As a authenticateduser, I want to update my user profile, so that I can connect with other Drupalists at BADCamp.",
        "Persona": [
            " authenticateduser"
        ],
        "Action": [
            "want",
            "update",
            "profile",
            "can",
            "connect"
        ],
        "Entity": [
            "update",
            "user",
            "profile",
            "can"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to sign up for the BADCamp newsletter, so that I can stay up to date with the latest communications about BADCamp.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "sign",
            "can",
            "stay",
            "date"
        ],
        "Entity": [
            "sign",
            "newsletter",
            "can",
            "stay",
            "date",
            "latest",
            "communications"
        ]
    },
    {
        "Text": "#G21# As a administrator, I want to tag my blog posts for consumption by Drupal Planet, so that they will be listed on the Drupal Planet blog.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "tag",
            "posts",
            "will"
        ],
        "Entity": [
            "tag",
            "posts",
            "consumption",
            "planet",
            "will",
            "planet"
        ]
    },
    {
        "Text": "#G21# As a administrator, I want to create blog posts, so that I can share the latest information about BADCamp with the public.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "create",
            "posts",
            "can",
            "share"
        ],
        "Entity": [
            "posts",
            "can",
            "share",
            "latest",
            "information",
            "public"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to read the blog, so that I can stay informed about all the latest happenings with BADCamp.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "read",
            "can",
            "stay"
        ],
        "Entity": [
            "read",
            "can",
            "stay",
            "all",
            "latest",
            "happenings"
        ]
    },
    {
        "Text": "#G21# As a sponsor, I want to sponsor a summit that matches my brand, so that I can get exposure to potential customers and otherwise tout my Drupal credentials.",
        "Persona": [
            " sponsor"
        ],
        "Action": [
            "want",
            "sponsor",
            "matches",
            "brand",
            "can",
            "get",
            "tout"
        ],
        "Entity": [
            "sponsor",
            "summit",
            "matches",
            "brand",
            "can",
            "exposure",
            "potential",
            "customers",
            "tout",
            "credentials"
        ]
    },
    {
        "Text": "#G21# As a attendee, I want to register for a summit, so that I can reserve my seat at the summit.",
        "Persona": [
            " attendee"
        ],
        "Action": [
            "want",
            "register",
            "can",
            "reserve",
            "seat"
        ],
        "Entity": [
            "register",
            "summit",
            "can",
            "reserve",
            "seat",
            "summit"
        ]
    },
    {
        "Text": "#G21# As a attendee, I want to get detailed directions to the summit venue, so that I can get to the summit easily on the day of the event.",
        "Persona": [
            " attendee"
        ],
        "Action": [
            "want",
            "get",
            "can",
            "get"
        ],
        "Entity": [
            "directions",
            "summit",
            "venue",
            "can",
            "summit",
            "day",
            "event"
        ]
    },
    {
        "Text": "#G21# As a attendee, I want to see what summits I'm signed up for, so that I can confirm my attendence and prevent myself from accidentally double-booking with a training or another summit.",
        "Persona": [
            " attendee"
        ],
        "Action": [
            "want",
            "see",
            "can",
            "confirm",
            "prevent"
        ],
        "Entity": [
            "see",
            "summits",
            "can",
            "training",
            "summit"
        ]
    },
    {
        "Text": "#G21# As a summit coordinator, I want to see a list of attendees signed up for my summit, so that I can communicate with my attendees by email prior to the event.",
        "Persona": [
            " summit coordinator"
        ],
        "Action": [
            "want",
            "see",
            "list",
            "can",
            "communicate"
        ],
        "Entity": [
            "see",
            "list",
            "summit",
            "can",
            "prior",
            "event"
        ]
    },
    {
        "Text": "#G21# As a summit coordinator, I want to list basic information about my summit, so that I can inform potential attendees on why they should attend my summit.",
        "Persona": [
            " summit coordinator"
        ],
        "Action": [
            "want",
            "list",
            "can",
            "inform",
            "should",
            "attend"
        ],
        "Entity": [
            "list",
            "basic",
            "information",
            "summit",
            "can",
            "potential",
            "why",
            "summit"
        ]
    },
    {
        "Text": "#G21# As a summit coordinator, I want to list sponsors for my summit, so that I can make sure sponsors feel rewarded and will be interested in sponsoring in future years.",
        "Persona": [
            " summit coordinator"
        ],
        "Action": [
            "want",
            "list",
            "sponsors",
            "can",
            "make",
            "sponsors",
            "feel",
            "will"
        ],
        "Entity": [
            "list",
            "sponsors",
            "summit",
            "can",
            "make",
            "sponsors",
            "feel",
            "will",
            "future",
            "years"
        ]
    },
    {
        "Text": "#G21# As a summit coordinator, I want to list an agenda for my summit, so that I can entice attendees and give positive feedback to presenters to encourage participation.",
        "Persona": [
            " summit coordinator"
        ],
        "Action": [
            "want",
            "list",
            "can",
            "entice",
            "give",
            "encourage"
        ],
        "Entity": [
            "list",
            "agenda",
            "summit",
            "can",
            "give",
            "positive",
            "presenters",
            "participation"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to see how many seats are left for the summit, so that I can make sure to register in-time to reserve my spot.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "see",
            "seats",
            "are",
            "left",
            "can",
            "make",
            "register",
            "reserve",
            "spot"
        ],
        "Entity": [
            "see",
            "how",
            "many",
            "seats",
            "left",
            "summit",
            "can",
            "make",
            "register",
            "reserve",
            "spot"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to see specific details on summits, so that I can learn more about the summit I'm interested in to see if it matches my interests, register for the event, and get day-of knowledge to help me get to the location.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "see",
            "details",
            "can",
            "learn",
            "see",
            "matches",
            "interests",
            "register",
            "get",
            "help",
            "get"
        ],
        "Entity": [
            "see",
            "specific",
            "details",
            "summits",
            "can",
            "more",
            "summit",
            "see",
            "matches",
            "interests",
            "register",
            "event",
            "knowledge",
            "help",
            "location"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to see a list of all the summits, so that I can determine which summit I might be interested and able to attend.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "see",
            "list",
            "can",
            "determine",
            "might",
            "attend"
        ],
        "Entity": [
            "see",
            "list",
            "all",
            "summits",
            "can",
            "summit",
            "might",
            "able"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to learn about sponsorship levels, so that I can determine the right level of sponsorship for my organization.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "learn",
            "levels",
            "can",
            "determine",
            "right",
            "level"
        ],
        "Entity": [
            "sponsorship",
            "levels",
            "can",
            "right",
            "level",
            "sponsorship",
            "organization"
        ]
    },
    {
        "Text": "#G21# As a authenticateduser, I want to use a WYSIWYG editor for all long-form content, so that I don't have to know HTML to update my content.",
        "Persona": [
            " authenticateduser"
        ],
        "Action": [
            "want",
            "use",
            "content",
            "don't",
            "have",
            "know",
            "update",
            "content"
        ],
        "Entity": [
            "use",
            "editor",
            "all",
            "content",
            "don't",
            "know",
            "update",
            "content"
        ]
    },
    {
        "Text": "#G21# As a sponsor, I want to Link to my sponsorship profile from my job listings, so that recruits can learn more about my organization.",
        "Persona": [
            " sponsor"
        ],
        "Action": [
            "want",
            "link",
            "profile",
            "job",
            "recruits",
            "can",
            "learn"
        ],
        "Entity": [
            "link",
            "sponsorship",
            "profile",
            "job",
            "listings",
            "recruits",
            "can",
            "more",
            "organization"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to learn about posting jobs as a sponsor and contact the sponsorship person, so that I have the opportunty to post my job listing on the BADCamp site.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "learn",
            "jobs",
            "sponsor",
            "contact",
            "have",
            "post",
            "job",
            "site"
        ],
        "Entity": [
            "posting",
            "jobs",
            "sponsor",
            "contact",
            "sponsorship",
            "person",
            "post",
            "job",
            "listing",
            "site"
        ]
    },
    {
        "Text": "#G21# As a sponsor, I want to post a job, so that I can hire top-tier Drupal talent.",
        "Persona": [
            " sponsor"
        ],
        "Action": [
            "want",
            "post",
            "job",
            "can",
            "hire"
        ],
        "Entity": [
            "post",
            "job",
            "can",
            "hire",
            "talent"
        ]
    },
    {
        "Text": "#G21# As a authenticateduser, I want to view the job board, so that I can look for an interesting Drupal gig!.",
        "Persona": [
            " authenticateduser"
        ],
        "Action": [
            "want",
            "view",
            "job",
            "board",
            "can",
            "look"
        ],
        "Entity": [
            "view",
            "job",
            "board",
            "can",
            "look"
        ]
    },
    {
        "Text": "#G21# As a administrator, I want to assign a room to a time slot and a location, so that I can populate the schedule .",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "assign",
            "room",
            "time",
            "slot",
            "can",
            "populate",
            "schedule"
        ],
        "Entity": [
            "assign",
            "room",
            "time",
            "slot",
            "location",
            "can",
            "schedule"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to see the schedule, so that I can plan my day and figure out where to go!.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "see",
            "schedule",
            "can",
            "plan",
            "figure",
            "out"
        ],
        "Entity": [
            "see",
            "schedule",
            "can",
            "plan",
            "day",
            "figure",
            "out",
            "where"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to see the final list of sessions approved, so that I can see what's going on at BADCamp .",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "see",
            "list",
            "approved",
            "can",
            "see"
        ],
        "Entity": [
            "see",
            "final",
            "list",
            "sessions",
            "can",
            "see",
            "going"
        ]
    },
    {
        "Text": "#G21# As a administrator, I want to bulk approve sessions as accepted, so that I can save time.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "bulk",
            "approve",
            "can",
            "save",
            "time"
        ],
        "Entity": [
            "bulk",
            "sessions",
            "can",
            "save",
            "time"
        ]
    },
    {
        "Text": "#G21# As a administrator, I want to mark a session as accepted, so that I can populate the schedule .",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "mark",
            "can",
            "populate",
            "schedule"
        ],
        "Entity": [
            "mark",
            "session",
            "can",
            "schedule"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to receive a notification when sessions have been evaluated, so that I know whether I've been accepted or rejected.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "receive",
            "have",
            "been",
            "evaluated",
            "know",
            "been"
        ],
        "Entity": [
            "notification",
            "sessions",
            "know"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to receive a notification when I submit a session, so that know that my session went through ok.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "receive",
            "submit",
            "know",
            "went"
        ],
        "Entity": [
            "notification",
            "session",
            "know",
            "session"
        ]
    },
    {
        "Text": "#G21# As a authenticateduser, I want to edit my session, so that if I make a mistake, I can correct it.",
        "Persona": [
            " authenticateduser"
        ],
        "Action": [
            "want",
            "edit",
            "make",
            "mistake",
            "can",
            "correct"
        ],
        "Entity": [
            "edit",
            "session",
            "make",
            "mistake",
            "can"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to register to speak at BADCamp, so that I submit a session.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "register",
            "speak",
            "submit"
        ],
        "Entity": [
            "register",
            "session"
        ]
    },
    {
        "Text": "#G21# As a authenticateduser, I want to submit a session at BADCAMP, so that I can get my session evaluated.",
        "Persona": [
            " authenticateduser"
        ],
        "Action": [
            "want",
            "submit",
            "can",
            "get",
            "evaluated"
        ],
        "Entity": [
            "session",
            "can",
            "session"
        ]
    },
    {
        "Text": "#G21# As a sponsor, I want to personalize my sponsorship page, so that I can promote my brand.",
        "Persona": [
            " sponsor"
        ],
        "Action": [
            "want",
            "personalize",
            "page",
            "can",
            "promote",
            "brand"
        ],
        "Entity": [
            "sponsorship",
            "page",
            "can",
            "brand"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to see a list of all the summits that include when they are, so that I can determine which summit I want to attend.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "see",
            "list",
            "include",
            "are",
            "can",
            "determine",
            "want",
            "attend"
        ],
        "Entity": [
            "see",
            "list",
            "all",
            "summits",
            "can",
            "summit"
        ]
    },
    {
        "Text": "#G21# As a authenticateduser, I want to Be offered several choices of idividual sponsorship on the second page of registration, so that I can be awesome and financially support the camp.",
        "Persona": [
            " authenticateduser"
        ],
        "Action": [
            "want",
            "second",
            "page",
            "can",
            "support",
            "camp"
        ],
        "Entity": [
            "choices",
            "sponsorship",
            "second",
            "page",
            "registration",
            "can",
            "support",
            "camp"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to easily find a link in the menu that links to the registration form, so that I can easily register for the camp.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "find",
            "link",
            "links",
            "form",
            "can",
            "register",
            "camp"
        ],
        "Entity": [
            "find",
            "link",
            "menu",
            "links",
            "registration",
            "form",
            "can",
            "register",
            "camp"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to fill out a user registration form, so that I can register for the camp and get an account on the website.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "fill",
            "out",
            "form",
            "can",
            "register",
            "camp",
            "get",
            "account"
        ],
        "Entity": [
            "fill",
            "out",
            "user",
            "registration",
            "form",
            "can",
            "register",
            "camp",
            "account"
        ]
    },
    {
        "Text": "#G21# As a anonymoususer, I want to find session information, so that I can go to a session.",
        "Persona": [
            " anonymoususer"
        ],
        "Action": [
            "want",
            "find",
            "can"
        ],
        "Entity": [
            "find",
            "session",
            "information",
            "can",
            "session"
        ]
    },
    {
        "Text": "#G22# As a PI, I want to properly record all metadata, so that I can ensure proper running of the project in case of staff changes.",
        "Persona": [
            " PI"
        ],
        "Action": [
            "want",
            "record",
            "can",
            "ensure",
            "project",
            "case",
            "staff",
            "changes"
        ],
        "Entity": [
            "record",
            "all",
            "can",
            "ensure",
            "proper",
            "running",
            "project",
            "case",
            "staff",
            "changes"
        ]
    },
    {
        "Text": "#G22# As a researcher, I want to indicate where my data will be stored during the project and where after the project, so that it remains accessible during all stages of the data lifecycle.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "indicate",
            "will",
            "stored",
            "project",
            "project",
            "remains",
            "stages"
        ],
        "Entity": [
            "where",
            "data",
            "will",
            "project",
            "where",
            "project",
            "remains",
            "all",
            "stages",
            "data"
        ]
    },
    {
        "Text": "#G22# As a researcher, I want to import metadata that I captured with a metadata tool, so that I do not have to capture it again in a DMP.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "import",
            "captured",
            "tool",
            "have",
            "capture"
        ],
        "Entity": [
            "import",
            "tool",
            "capture"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to know how the data is used, so that I can develop more detailed usage and support scenarios with researchers.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "know",
            "can",
            "develop",
            "support"
        ],
        "Entity": [
            "know",
            "how",
            "data",
            "can",
            "more",
            "usage",
            "support",
            "scenarios",
            "researchers"
        ]
    },
    {
        "Text": "#G22# As a repository owner, I want to be able to check the planned provenance of the data that will be submitted at the end of a project, so that I can calculate necessary submission fees and check whether it belongs to our target group.",
        "Persona": [
            " repository owner"
        ],
        "Action": [
            "want",
            "check",
            "planned",
            "will",
            "submitted",
            "end",
            "project",
            "can",
            "calculate",
            "fees",
            "check",
            "belongs",
            "target",
            "group"
        ],
        "Entity": [
            "able",
            "check",
            "provenance",
            "data",
            "will",
            "end",
            "project",
            "can",
            "necessary",
            "submission",
            "fees",
            "check",
            "target",
            "group"
        ]
    },
    {
        "Text": "#G22# As an IT manager, I want to know about IT resource requirements early in the project lifecycle, so that I can enable resource acquisition planning.",
        "Persona": [
            " IT manager"
        ],
        "Action": [
            "want",
            "know",
            "project",
            "can",
            "enable",
            "planning"
        ],
        "Entity": [
            "know",
            "resource",
            "requirements",
            "project",
            "can",
            "resource",
            "acquisition",
            "planning"
        ]
    },
    {
        "Text": "#G22# As a PI, I want to plan what kind of data I want to record/store, so that I can ensure it will possible to store it.",
        "Persona": [
            " PI"
        ],
        "Action": [
            "want",
            "plan",
            "want",
            "can",
            "ensure",
            "will",
            "store"
        ],
        "Entity": [
            "plan",
            "kind",
            "data",
            "can",
            "ensure",
            "will",
            "possible",
            "store"
        ]
    },
    {
        "Text": "#G22# As an IT staff member, I want to know the security requirements of the data, so that I know which kind of security measures to apply.",
        "Persona": [
            " IT staff member"
        ],
        "Action": [
            "want",
            "know",
            "know",
            "measures",
            "apply"
        ],
        "Entity": [
            "know",
            "security",
            "requirements",
            "data",
            "know",
            "kind",
            "security",
            "measures"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to have the description of collected data sets that are used or updated throughout the project lifecycle, so that I can ensure the descriptions are current and add detail as the study proceeds.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "have",
            "sets",
            "are",
            "updated",
            "project",
            "can",
            "ensure",
            "are",
            "add",
            "detail",
            "study",
            "proceeds"
        ],
        "Entity": [
            "description",
            "data",
            "sets",
            "project",
            "can",
            "ensure",
            "descriptions",
            "current",
            "detail",
            "study",
            "proceeds"
        ]
    },
    {
        "Text": "#G22# As a researcher, I want to know which topics are mandatory and similar in all DMPs, so that I can save time through quickly writing it.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "know",
            "are",
            "can",
            "save",
            "time"
        ],
        "Entity": [
            "know",
            "topics",
            "mandatory",
            "all",
            "can",
            "save",
            "time",
            "writing"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to know what the content of the data is, so that I can decide to which collection or repository the data fits.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "know",
            "content",
            "can",
            "decide",
            "fits"
        ],
        "Entity": [
            "know",
            "content",
            "data",
            "can",
            "collection",
            "repository",
            "data",
            "fits"
        ]
    },
    {
        "Text": "#G22# As a PI, I want to record information about my DMP, so that an Ethics Committee can review this for compliance with ethical standards.",
        "Persona": [
            " PI"
        ],
        "Action": [
            "want",
            "record",
            "can",
            "review"
        ],
        "Entity": [
            "record",
            "information",
            "ethics",
            "committee",
            "can",
            "review",
            "compliance",
            "standards"
        ]
    },
    {
        "Text": "#G22# As a legalofficer, I want to know about data sensitivity, so that I can establish sharing options.",
        "Persona": [
            " legalofficer"
        ],
        "Action": [
            "want",
            "know",
            "can",
            "establish"
        ],
        "Entity": [
            "know",
            "data",
            "sensitivity",
            "can",
            "sharing",
            "options"
        ]
    },
    {
        "Text": "#G22# As a data librarian, I want to extract pointers from the DMP to metadata held in other systems, so that I can import this metadata into a data catalogue.",
        "Persona": [
            " data librarian"
        ],
        "Action": [
            "want",
            "extract",
            "held",
            "can",
            "import",
            "catalogue"
        ],
        "Entity": [
            "extract",
            "pointers",
            "systems",
            "can",
            "import",
            "data",
            "catalogue"
        ]
    },
    {
        "Text": "#G22# As an IT staff member, I want to have an estimate of the produced data volume, so that I can plan the overall storage consumption.",
        "Persona": [
            " IT staff member"
        ],
        "Action": [
            "want",
            "have",
            "estimate",
            "produced",
            "can",
            "plan"
        ],
        "Entity": [
            "estimate",
            "data",
            "volume",
            "can",
            "plan",
            "overall",
            "storage",
            "consumption"
        ]
    },
    {
        "Text": "#G22# As an administrator, I want to know who funded the project and their requirements, so that I can track the funder specific obligations.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "know",
            "project",
            "can",
            "track"
        ],
        "Entity": [
            "know",
            "who",
            "project",
            "requirements",
            "can",
            "track",
            "specific",
            "obligations"
        ]
    },
    {
        "Text": "#G22# As an archivemanager, I want to know the legal status of data, so that I can apply the legal requirements accordingly.",
        "Persona": [
            " archivemanager"
        ],
        "Action": [
            "want",
            "know",
            "can",
            "apply"
        ],
        "Entity": [
            "know",
            "status",
            "data",
            "can",
            "requirements"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to know which kind of data types will be produced or collected, so that I can determine what basic support services and functionalities are required.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "know",
            "types",
            "will",
            "produced",
            "can",
            "determine",
            "support",
            "services",
            "are",
            "required"
        ],
        "Entity": [
            "know",
            "kind",
            "data",
            "types",
            "will",
            "can",
            "basic",
            "support",
            "services"
        ]
    },
    {
        "Text": "#G22# As an IT staff member, I want to know which kind of data types will be produced or collected, so that I can determine what basic support services and functionalities are required.",
        "Persona": [
            " IT staff member"
        ],
        "Action": [
            "want",
            "know",
            "types",
            "will",
            "produced",
            "can",
            "determine",
            "support",
            "services",
            "are",
            "required"
        ],
        "Entity": [
            "know",
            "kind",
            "data",
            "types",
            "will",
            "can",
            "basic",
            "support",
            "services"
        ]
    },
    {
        "Text": "#G22# As an archivemanager, I want to know in advance the conservation period of data, so that I can better organize the service by adapting the preservation actions.",
        "Persona": [
            " archivemanager"
        ],
        "Action": [
            "want",
            "know",
            "advance",
            "can",
            "better",
            "organize",
            "service"
        ],
        "Entity": [
            "know",
            "advance",
            "conservation",
            "period",
            "data",
            "can",
            "better",
            "service",
            "preservation",
            "actions"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to document all rights necessary for managing the data, so that I can curate and preserve the data.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "document",
            "rights",
            "can",
            "preserve"
        ],
        "Entity": [
            "document",
            "all",
            "rights",
            "necessary",
            "managing",
            "data",
            "can",
            "curate",
            "preserve",
            "data"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to know what the content of the data is, so that I can check whether the necessary expertise for maintaining intellectual reusability is available.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "know",
            "content",
            "can",
            "check"
        ],
        "Entity": [
            "know",
            "content",
            "data",
            "can",
            "check",
            "necessary",
            "expertise",
            "intellectual"
        ]
    },
    {
        "Text": "#G22# As a research head, I want to access to the persistent identifiers of datasets provided in the DMP, so that I can check that the DMP has been implemented.",
        "Persona": [
            " research head"
        ],
        "Action": [
            "want",
            "access",
            "can",
            "check",
            "has",
            "been"
        ],
        "Entity": [
            "access",
            "identifiers",
            "can",
            "check"
        ]
    },
    {
        "Text": "#G22# As a funder, I want to be able to read the costs for data management from the DMP, so that I can check whether our policies work as intended.",
        "Persona": [
            " funder"
        ],
        "Action": [
            "want",
            "read",
            "costs",
            "can",
            "check",
            "work"
        ],
        "Entity": [
            "able",
            "read",
            "costs",
            "data",
            "management",
            "can",
            "check",
            "policies",
            "work",
            "intended"
        ]
    },
    {
        "Text": "#G22# As a researcher, I want the DMP to prepopulate information that I have already entered in other institutional systems, so that I do not have to re-enter information ensuring the DMP contains accurate and standardized information.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "have",
            "re-enter",
            "ensuring",
            "contains",
            "standardized"
        ],
        "Entity": [
            "information",
            "systems",
            "information",
            "information"
        ]
    },
    {
        "Text": "#G22# As a stakeholder, I want to know when the data management plan was created or updated, so that I know how up-to-date the plan is or whether it needs to be updated.",
        "Persona": [
            " stakeholder"
        ],
        "Action": [
            "want",
            "know",
            "plan",
            "was",
            "created",
            "updated",
            "know",
            "plan",
            "needs",
            "updated"
        ],
        "Entity": [
            "know",
            "data",
            "management",
            "plan",
            "know",
            "how",
            "plan",
            "needs"
        ]
    },
    {
        "Text": "#G22# As a stakeholder, I want to know who is responsible for the DMP, so that I can ask them about further details.",
        "Persona": [
            " stakeholder"
        ],
        "Action": [
            "want",
            "know",
            "can",
            "ask",
            "further",
            "details"
        ],
        "Entity": [
            "know",
            "who",
            "responsible",
            "can",
            "details"
        ]
    },
    {
        "Text": "#G22# As a stakeholder, I want to have references to the project proposal, so that I can look up further general information.",
        "Persona": [
            " stakeholder"
        ],
        "Action": [
            "want",
            "have",
            "references",
            "project",
            "can",
            "look",
            "further",
            "general"
        ],
        "Entity": [
            "references",
            "project",
            "proposal",
            "can",
            "look",
            "general",
            "information"
        ]
    },
    {
        "Text": "#G22# As a metadata manager, I want to have a short description of project, so that I can be informed about the metadata description.",
        "Persona": [
            " metadata manager"
        ],
        "Action": [
            "want",
            "have",
            "short",
            "project",
            "can"
        ],
        "Entity": [
            "short",
            "description",
            "project",
            "can",
            "description"
        ]
    },
    {
        "Text": "#G22# As a rector, I want to know how many data will be stored, so that I can plan long term resources.",
        "Persona": [
            " rector"
        ],
        "Action": [
            "want",
            "know",
            "will",
            "stored",
            "can",
            "plan",
            "long",
            "term"
        ],
        "Entity": [
            "know",
            "how",
            "many",
            "data",
            "will",
            "can",
            "plan",
            "long",
            "term",
            "resources"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to know the time plan for collecting data, so that I can plan the data management.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "know",
            "time",
            "plan",
            "can",
            "plan"
        ],
        "Entity": [
            "know",
            "time",
            "plan",
            "collecting",
            "data",
            "can",
            "plan",
            "data",
            "management"
        ]
    },
    {
        "Text": "#G22# As a data librarian, I want to import administrative information regarding a project into DMP, so that I can prepopulate the DMP.",
        "Persona": [
            " data librarian"
        ],
        "Action": [
            "want",
            "import",
            "project",
            "can"
        ],
        "Entity": [
            "import",
            "information",
            "project",
            "can"
        ]
    },
    {
        "Text": "#G22# As a manager, I want to know about all resources and services used for the data, so that I can estimate the true cost of the project.",
        "Persona": [
            " manager"
        ],
        "Action": [
            "want",
            "know",
            "services",
            "can",
            "estimate",
            "true",
            "cost",
            "project"
        ],
        "Entity": [
            "know",
            "all",
            "resources",
            "services",
            "data",
            "can",
            "estimate",
            "true",
            "cost",
            "project"
        ]
    },
    {
        "Text": "#G22# As an archivemanager, I want to reuse the information regarding file format, so that I can apply automated checks for the file validation.",
        "Persona": [
            " archivemanager"
        ],
        "Action": [
            "want",
            "reuse",
            "file",
            "format",
            "can",
            "apply",
            "automated",
            "checks",
            "file"
        ],
        "Entity": [
            "information",
            "file",
            "format",
            "can",
            "checks",
            "file",
            "validation"
        ]
    },
    {
        "Text": "#G22# As a researcher, I want to know how many resources are needed during the project, so that I can calculate costs.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "know",
            "are",
            "project",
            "can",
            "calculate",
            "costs"
        ],
        "Entity": [
            "know",
            "how",
            "many",
            "resources",
            "project",
            "can",
            "costs"
        ]
    },
    {
        "Text": "#G22# As a researcher, I want to extract the description of the data collected, so that I can reuse it for the writing of a data paper.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "extract",
            "can",
            "reuse",
            "paper"
        ],
        "Entity": [
            "extract",
            "description",
            "data",
            "can",
            "writing",
            "data",
            "paper"
        ]
    },
    {
        "Text": "#G22# As a researcher, I want to record research publications in the institutional repository or CRIS with DMP records, so that I can generate reports of research output resulting from a project.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "record",
            "research",
            "records",
            "can",
            "generate",
            "reports",
            "research",
            "output",
            "project"
        ],
        "Entity": [
            "record",
            "research",
            "publications",
            "repository",
            "records",
            "can",
            "reports",
            "research",
            "output",
            "project"
        ]
    },
    {
        "Text": "#G22# As a researcher, I want to link research publications in the institutional repository or CRIS with DMP records, so that I can generate reports of research output resulting from a project.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "link",
            "research",
            "records",
            "can",
            "generate",
            "reports",
            "research",
            "output",
            "project"
        ],
        "Entity": [
            "link",
            "research",
            "publications",
            "repository",
            "records",
            "can",
            "reports",
            "research",
            "output",
            "project"
        ]
    },
    {
        "Text": "#G22# As a researcher, I want to store agreements relating to third party data used in a project, so that the data can be cited, attributed and used correctly.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "store",
            "relating",
            "party",
            "project",
            "can",
            "cited",
            "attributed"
        ],
        "Entity": [
            "store",
            "agreements",
            "third",
            "party",
            "data",
            "project",
            "data",
            "can"
        ]
    },
    {
        "Text": "#G22# As an ethics manager, I want to be informed about the data, so that I can check for sensitivity of data.",
        "Persona": [
            " ethics manager"
        ],
        "Action": [
            "want",
            "can",
            "check"
        ],
        "Entity": [
            "data",
            "can",
            "check",
            "sensitivity",
            "data"
        ]
    },
    {
        "Text": "#G22# As a repository operator, I want to know about the kind of data, so that I can evaluate the storage size and system.",
        "Persona": [
            " repository operator"
        ],
        "Action": [
            "want",
            "know",
            "can",
            "evaluate",
            "size"
        ],
        "Entity": [
            "know",
            "kind",
            "data",
            "can",
            "storage",
            "size",
            "system"
        ]
    },
    {
        "Text": "#G22# As a researcher, I want to know about costs, so that I can plan my research.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "know",
            "costs",
            "can",
            "plan",
            "research"
        ],
        "Entity": [
            "know",
            "costs",
            "can",
            "plan",
            "research"
        ]
    },
    {
        "Text": "#G22# As a repository manager, I need details on the type of data, so that I can check if the archiving can be arranged.",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "need",
            "details",
            "type",
            "can",
            "check",
            "can",
            "arranged"
        ],
        "Entity": [
            "need",
            "details",
            "type",
            "data",
            "can",
            "check",
            "can"
        ]
    },
    {
        "Text": "#G22# As an IT officer, I want to know how secure data is, so that I can ensure legal compliance.",
        "Persona": [
            " IT officer"
        ],
        "Action": [
            "want",
            "know",
            "secure",
            "can",
            "ensure"
        ],
        "Entity": [
            "know",
            "how",
            "data",
            "can",
            "ensure",
            "compliance"
        ]
    },
    {
        "Text": "#G22# As a funder, I want to know how secure data is, so that I can ensure legal compliance.",
        "Persona": [
            " funder"
        ],
        "Action": [
            "want",
            "know",
            "secure",
            "can",
            "ensure"
        ],
        "Entity": [
            "know",
            "how",
            "data",
            "can",
            "ensure",
            "compliance"
        ]
    },
    {
        "Text": "#G22# As a Research Centre Director, I want to receive regular summary reports of research data, so that I understand trends in data use among staff and postgraduate students.",
        "Persona": [
            " Research Centre Director"
        ],
        "Action": [
            "want",
            "receive",
            "reports",
            "research",
            "understand",
            "trends",
            "use",
            "staff"
        ],
        "Entity": [
            "regular",
            "summary",
            "reports",
            "research",
            "data",
            "trends",
            "data",
            "use",
            "staff",
            "students"
        ]
    },
    {
        "Text": "#G22# As a Postgraduate Convenor, I want to receive regular summary reports of research data, so that I understand trends in data use among staff and postgraduate students.",
        "Persona": [
            " Postgraduate Convenor"
        ],
        "Action": [
            "want",
            "receive",
            "reports",
            "research",
            "understand",
            "trends",
            "use",
            "staff"
        ],
        "Entity": [
            "regular",
            "summary",
            "reports",
            "research",
            "data",
            "trends",
            "data",
            "use",
            "staff",
            "students"
        ]
    },
    {
        "Text": "#G22# As a research support officer, I want to ensure compliance to the funders’ rules, so that I can ensure all costs will be accepted.",
        "Persona": [
            " research support officer"
        ],
        "Action": [
            "want",
            "ensure",
            "rules",
            "can",
            "ensure",
            "costs",
            "will"
        ],
        "Entity": [
            "ensure",
            "compliance",
            "rules",
            "can",
            "ensure",
            "all",
            "costs",
            "will"
        ]
    },
    {
        "Text": "#G22# As a funder, I want to be able to check all the repositories mentioned in a DMP, so that I can verify whether the project has followed our funding rules.",
        "Persona": [
            " funder"
        ],
        "Action": [
            "want",
            "check",
            "can",
            "verify",
            "project",
            "has",
            "rules"
        ],
        "Entity": [
            "able",
            "check",
            "all",
            "repositories",
            "can",
            "project",
            "funding",
            "rules"
        ]
    },
    {
        "Text": "#G22# As a PI, I want to plan what kind of data I want to store, so that I can ensure it will be possible to store it.",
        "Persona": [
            " PI"
        ],
        "Action": [
            "want",
            "plan",
            "want",
            "store",
            "can",
            "ensure",
            "will",
            "store"
        ],
        "Entity": [
            "plan",
            "kind",
            "data",
            "store",
            "can",
            "ensure",
            "will",
            "possible",
            "store"
        ]
    },
    {
        "Text": "#G22# As a PI, I want to know how secure data is, so that I can ensure legal compliance.",
        "Persona": [
            " PI"
        ],
        "Action": [
            "want",
            "know",
            "secure",
            "can",
            "ensure"
        ],
        "Entity": [
            "know",
            "how",
            "data",
            "can",
            "ensure",
            "compliance"
        ]
    },
    {
        "Text": "#G22# As a Director of Research Integrity, I want to access reports containing details of research projects in which data are classified as sensitive or highly sensitive, so that I can confirm security protocols are applied to these data.",
        "Persona": [
            " Director of Research Integrity"
        ],
        "Action": [
            "want",
            "access",
            "reports",
            "details",
            "research",
            "projects",
            "are",
            "can",
            "confirm",
            "are"
        ],
        "Entity": [
            "access",
            "reports",
            "details",
            "research",
            "projects",
            "data",
            "can",
            "security",
            "protocols",
            "data"
        ]
    },
    {
        "Text": "#G22# As an archive, I want to get information about the volume of data to preserve at an early stage, so that I can provide the adequate storage infrastructure.",
        "Persona": [
            " archive"
        ],
        "Action": [
            "want",
            "get",
            "preserve",
            "stage",
            "can",
            "provide"
        ],
        "Entity": [
            "information",
            "volume",
            "data",
            "preserve",
            "stage",
            "can",
            "storage",
            "infrastructure"
        ]
    },
    {
        "Text": "#G22# As a researcher, I want to know how long it will take to archive, so that I can plan further steps.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "know",
            "long",
            "will",
            "take",
            "archive",
            "can",
            "plan",
            "further",
            "steps"
        ],
        "Entity": [
            "know",
            "how",
            "long",
            "will",
            "take",
            "archive",
            "can",
            "plan",
            "steps"
        ]
    },
    {
        "Text": "#G22# As a PI, I want to know who owns the data, so that I know what I am allowed to do with it.",
        "Persona": [
            " PI"
        ],
        "Action": [
            "want",
            "know",
            "owns",
            "know"
        ],
        "Entity": [
            "know",
            "who",
            "data",
            "know"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to have references to documentation of the data and its creation process, so that the data can be re-used and managed.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "have",
            "references",
            "process",
            "can",
            "managed"
        ],
        "Entity": [
            "references",
            "documentation",
            "data",
            "creation",
            "process",
            "data",
            "can"
        ]
    },
    {
        "Text": "#G22# As an archivemanager, I want to make sure that detailed metadata are associated to data so that it will be understandable by future users.",
        "Persona": [
            " archivemanager"
        ],
        "Action": [
            "want",
            "make",
            "are",
            "associated",
            "will"
        ],
        "Entity": [
            "make",
            "data",
            "will",
            "future",
            "users"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to know which kind of data types will be produced or collected, so that I can ensure that the necessary technical resources and technical know-how is available.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "know",
            "types",
            "will",
            "produced",
            "can",
            "ensure"
        ],
        "Entity": [
            "know",
            "kind",
            "data",
            "types",
            "will",
            "can",
            "ensure",
            "necessary",
            "resources",
            "know-how"
        ]
    },
    {
        "Text": "#G22# As an IT staff member, I want to know which kind of data types will be produced or collected, so that I can ensure that the necessary technical resources and technical know-how is available.",
        "Persona": [
            " IT staff member"
        ],
        "Action": [
            "want",
            "know",
            "types",
            "will",
            "produced",
            "can",
            "ensure"
        ],
        "Entity": [
            "know",
            "kind",
            "data",
            "types",
            "will",
            "can",
            "ensure",
            "necessary",
            "resources",
            "know-how"
        ]
    },
    {
        "Text": "#G22# As an IT staff member, I want to know how the data is used, so that I can determine what kind of basic services and functionalities are required.",
        "Persona": [
            " IT staff member"
        ],
        "Action": [
            "want",
            "know",
            "can",
            "determine",
            "services",
            "are",
            "required"
        ],
        "Entity": [
            "know",
            "how",
            "data",
            "can",
            "kind",
            "basic",
            "services"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to know whether the collected data depends on other data sets from my own or other institutions, so that I can ensure that these dependencies are maintained.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "know",
            "depends",
            "sets",
            "own",
            "can",
            "ensure",
            "are"
        ],
        "Entity": [
            "know",
            "data",
            "data",
            "sets",
            "institutions",
            "can",
            "ensure",
            "dependencies"
        ]
    },
    {
        "Text": "#G22# As an IT staff member, I want to know which formats are used, so that I can determine what kind of technical services and functionalities are required.",
        "Persona": [
            " IT staff member"
        ],
        "Action": [
            "want",
            "know",
            "formats",
            "are",
            "can",
            "determine",
            "services",
            "are",
            "required"
        ],
        "Entity": [
            "know",
            "formats",
            "can",
            "kind",
            "services"
        ]
    },
    {
        "Text": "#G22# As an IT staff member, I want to know with which software or technology the data is produced or used, so that I can determine what kind of technical services and functionalities are required.",
        "Persona": [
            " IT staff member"
        ],
        "Action": [
            "want",
            "know",
            "produced",
            "can",
            "determine",
            "services",
            "are",
            "required"
        ],
        "Entity": [
            "know",
            "software",
            "technology",
            "data",
            "can",
            "kind",
            "services"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to know which information is necessary to re-use the data, so that it can be checked whether all necessary information is available for researchers interested in re-using the data.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "know",
            "can"
        ],
        "Entity": [
            "know",
            "information",
            "necessary",
            "data",
            "can",
            "all",
            "necessary",
            "information",
            "researchers",
            "data"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to know which formats are used, so that I know what technology or background information might be necessary to use the data.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "know",
            "formats",
            "are",
            "know",
            "background",
            "might",
            "use"
        ],
        "Entity": [
            "know",
            "formats",
            "know",
            "technology",
            "background",
            "information",
            "might",
            "necessary",
            "use",
            "data"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to know whether the data can be reproduced efficiently, so that I can determine whether and how the data has to be stored.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "know",
            "can",
            "reproduced",
            "can",
            "determine",
            "has",
            "stored"
        ],
        "Entity": [
            "know",
            "data",
            "can",
            "can",
            "how",
            "data"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to know with which software or technology the data is produced or used, so that I know what technology or background information might be necessary to (re-)use the data.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "know",
            "produced",
            "know",
            "background",
            "might"
        ],
        "Entity": [
            "know",
            "software",
            "technology",
            "data",
            "know",
            "technology",
            "background",
            "information",
            "might",
            "necessary",
            "data"
        ]
    },
    {
        "Text": "#G22# As a research evaluation manager, I want to ensure all data are quoted correctly with our affiliation, so that they are counted towards our citation counts.",
        "Persona": [
            " research evaluation manager"
        ],
        "Action": [
            "want",
            "ensure",
            "are",
            "quoted",
            "are",
            "counts"
        ],
        "Entity": [
            "ensure",
            "all",
            "data",
            "affiliation",
            "citation",
            "counts"
        ]
    },
    {
        "Text": "#G22# As an administrator, I want to check that all data has the appropriate security level, so that I can demonstrate compliance.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "check",
            "has",
            "appropriate",
            "level",
            "can",
            "demonstrate"
        ],
        "Entity": [
            "check",
            "all",
            "data",
            "security",
            "level",
            "can",
            "compliance"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to know the security requirements of the data, so that I can check whether the data can be kept secure.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "know",
            "can",
            "check",
            "can",
            "kept",
            "secure"
        ],
        "Entity": [
            "know",
            "security",
            "requirements",
            "data",
            "can",
            "check",
            "data",
            "can"
        ]
    },
    {
        "Text": "#G22# As a institutional data steward, I want to be able to extract the data sets that are submitted to external repositories, so that I can add them to an institutional data catalogue.",
        "Persona": [
            " institutional data steward"
        ],
        "Action": [
            "want",
            "extract",
            "sets",
            "are",
            "submitted",
            "can",
            "add",
            "catalogue"
        ],
        "Entity": [
            "able",
            "extract",
            "data",
            "sets",
            "external",
            "repositories",
            "can",
            "data",
            "catalogue"
        ]
    },
    {
        "Text": "#G22# As an institutional data manager, I want to know about the privacy and security requirements of the data, so that I can plan the right storage system and sharing permissions.",
        "Persona": [
            " institutional data manager"
        ],
        "Action": [
            "want",
            "know",
            "can",
            "plan",
            "right"
        ],
        "Entity": [
            "know",
            "privacy",
            "security",
            "requirements",
            "data",
            "can",
            "plan",
            "right",
            "storage",
            "system",
            "sharing",
            "permissions"
        ]
    },
    {
        "Text": "#G22# As a researcher, I want to see the sections on costing by other researchers in my department, so that I can see if we could share data manager posts.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "see",
            "sections",
            "costing",
            "can",
            "see",
            "could",
            "share",
            "posts"
        ],
        "Entity": [
            "see",
            "sections",
            "costing",
            "researchers",
            "department",
            "can",
            "see",
            "share",
            "data",
            "manager",
            "posts"
        ]
    },
    {
        "Text": "#G22# As a researcher, I want to see the sections on roles submitted by other researchers in my department, so that I can see if we could share data manager posts.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "see",
            "sections",
            "submitted",
            "can",
            "see",
            "could",
            "share",
            "posts"
        ],
        "Entity": [
            "see",
            "sections",
            "roles",
            "researchers",
            "department",
            "can",
            "see",
            "share",
            "data",
            "manager",
            "posts"
        ]
    },
    {
        "Text": "#G22# As a researcher, I want to see the sections on responsibilities submitted by other researchers in my department, so that I can see if we could share data manager posts.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "see",
            "sections",
            "submitted",
            "can",
            "see",
            "could",
            "share",
            "posts"
        ],
        "Entity": [
            "see",
            "sections",
            "responsibilities",
            "researchers",
            "department",
            "can",
            "see",
            "share",
            "data",
            "manager",
            "posts"
        ]
    },
    {
        "Text": "#G22# As a faculty data steward, I want to see the sections on costing, so that I can ensure sufficient expertise on data management to support the project.",
        "Persona": [
            " faculty data steward"
        ],
        "Action": [
            "want",
            "see",
            "sections",
            "costing",
            "can",
            "ensure",
            "support",
            "project"
        ],
        "Entity": [
            "see",
            "sections",
            "costing",
            "can",
            "ensure",
            "sufficient",
            "expertise",
            "data",
            "management",
            "support",
            "project"
        ]
    },
    {
        "Text": "#G22# As a faculty data steward, I want to see the sections on roles, so that I can ensure sufficient expertise on data management to support the project.",
        "Persona": [
            " faculty data steward"
        ],
        "Action": [
            "want",
            "see",
            "sections",
            "can",
            "ensure",
            "support",
            "project"
        ],
        "Entity": [
            "see",
            "sections",
            "roles",
            "can",
            "ensure",
            "sufficient",
            "expertise",
            "data",
            "management",
            "support",
            "project"
        ]
    },
    {
        "Text": "#G22# As a faculty data steward, I want to see the sections on responsibilities, so that I can ensure sufficient expertise on data management to support the project.",
        "Persona": [
            " faculty data steward"
        ],
        "Action": [
            "want",
            "see",
            "sections",
            "can",
            "ensure",
            "support",
            "project"
        ],
        "Entity": [
            "see",
            "sections",
            "responsibilities",
            "can",
            "ensure",
            "sufficient",
            "expertise",
            "data",
            "management",
            "support",
            "project"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to clarify the necessary rights for re-using the data, so that it is legal to reuse the data.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "clarify",
            "rights",
            "reuse"
        ],
        "Entity": [
            "necessary",
            "rights",
            "data",
            "data"
        ]
    },
    {
        "Text": "#G22# As a researcher, I want to record my intention to share data I have collected under terms of a particular licence, so that other researchers who use the data understand the rights of use.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "record",
            "share",
            "have",
            "terms",
            "licence",
            "use",
            "understand",
            "rights",
            "use"
        ],
        "Entity": [
            "record",
            "intention",
            "share",
            "data",
            "terms",
            "particular",
            "licence",
            "researchers",
            "who",
            "use",
            "data",
            "rights",
            "use"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to plan the anonymization of data, so that we protect the privacy of the people participating in the research as good as possible and still ensure reusability of data.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "plan",
            "protect",
            "people",
            "participating",
            "research",
            "still",
            "ensure"
        ],
        "Entity": [
            "plan",
            "data",
            "privacy",
            "people",
            "research",
            "good",
            "possible",
            "still",
            "ensure",
            "data"
        ]
    },
    {
        "Text": "#G22# As a repository manager, I want to have metadata in additional languages, so that I can allow for multilingual data archive.",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "allow",
            "archive"
        ],
        "Entity": [
            "languages",
            "can",
            "data",
            "archive"
        ]
    },
    {
        "Text": "#G22# As a data manager, I want to know whether the DMP was approved, so that I can proceed with the required next steps.",
        "Persona": [
            " data manager"
        ],
        "Action": [
            "want",
            "know",
            "was",
            "approved",
            "can",
            "proceed",
            "required",
            "steps"
        ],
        "Entity": [
            "know",
            "can",
            "steps"
        ]
    },
    {
        "Text": "#G23# As a researcher, I want to be able to view a finding aid for a particular collection/Resource.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "view",
            "finding",
            "aid"
        ],
        "Entity": [
            "able",
            "view",
            "finding",
            "aid",
            "particular"
        ]
    },
    {
        "Text": "#G23# As an Application Administrator, I want to be able to reset a User's password for them.",
        "Persona": [
            " Application Administrator"
        ],
        "Action": [
            "want",
            "reset"
        ],
        "Entity": [
            "able",
            "reset",
            "password"
        ]
    },
    {
        "Text": "#G23# As a user, I want backend changes for managing enum lists.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "changes",
            "lists"
        ],
        "Entity": [
            "changes",
            "managing",
            "lists"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to import EAD files that were exported by Archon.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "import",
            "files",
            "were"
        ],
        "Entity": [
            "import",
            "files",
            "archon"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to assign a component unique identifier to a Resource Component.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "assign"
        ],
        "Entity": [
            "assign",
            "component",
            "unique",
            "identifier",
            "resource",
            "component"
        ]
    },
    {
        "Text": "#G23# As a User , I want to authenticate using LDAP.",
        "Persona": [
            " User "
        ],
        "Action": [
            "want",
            "authenticate",
            "using"
        ],
        "Entity": [
            "using"
        ]
    },
    {
        "Text": "#G23# As a migration specialist, I want to store the AT or Archon source record ids in each ASpace record",
        "Persona": [
            " migration specialist"
        ],
        "Action": [
            "want",
            "store",
            "record",
            "record"
        ],
        "Entity": [
            "store",
            "archon",
            "source",
            "record",
            "record"
        ]
    },
    {
        "Text": "#G23# to support data migration integrity testing.",
        "Persona": [
            "ta migration integrity testing."
        ],
        "Action": [],
        "Entity": []
    },
    {
        "Text": "#G23# As an Archivist, I want to associate a standard identifier string with a Subject heading.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "associate",
            "string",
            "subject"
        ],
        "Entity": [
            "associate",
            "standard",
            "identifier",
            "string",
            "subject",
            "heading"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to be able to understand that an error occurred during import and why it might have occurred.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "understand",
            "occurred",
            "import",
            "might",
            "have",
            "occurred"
        ],
        "Entity": [
            "able",
            "error",
            "import",
            "why",
            "might"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to import Accessions data in CSV.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "import",
            "accessions"
        ],
        "Entity": [
            "import",
            "accessions",
            "data"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to import Resources from MARCXML records.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "import",
            "records"
        ],
        "Entity": [
            "import",
            "resources",
            "records"
        ]
    },
    {
        "Text": "#G23# As a user, I want frontend changes for managing enum lists.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "changes",
            "lists"
        ],
        "Entity": [
            "changes",
            "managing",
            "lists"
        ]
    },
    {
        "Text": "#G23# As an Authenticated User, I want to get access to links to contextual help.",
        "Persona": [
            " Authenticated User"
        ],
        "Action": [
            "want",
            "get",
            "access",
            "links",
            "help"
        ],
        "Entity": [
            "access",
            "links",
            "help"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to see Dates and Extents displayed in both the read and edit views for Accessions and/or Resources before the list of Subjects.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "see",
            "dates",
            "read",
            "edit",
            "views",
            "accessions",
            "list",
            "subjects"
        ],
        "Entity": [
            "see",
            "dates",
            "extents",
            "read",
            "edit",
            "views",
            "accessions",
            "resources",
            "list",
            "subjects"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to import Agent information from EAC-CPF records.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "import",
            "records"
        ],
        "Entity": [
            "import",
            "agent",
            "information",
            "records"
        ]
    },
    {
        "Text": "#G23# As a user, I want backend changes to support loading enum value lists from the database.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "changes",
            "support",
            "value",
            "lists"
        ],
        "Entity": [
            "changes",
            "support",
            "loading",
            "value",
            "lists",
            "database"
        ]
    },
    {
        "Text": "#G23# As a user, I want backend changes for bulk updating one enum value to another.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "changes",
            "bulk",
            "updating",
            "value"
        ],
        "Entity": [
            "changes",
            "bulk",
            "updating",
            "one",
            "value"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to export agent records as EAC-CPF.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "export",
            "records"
        ],
        "Entity": [
            "export",
            "agent",
            "records"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to import only Agent and Subject information from MARCXML records.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "import",
            "subject",
            "records"
        ],
        "Entity": [
            "import",
            "agent",
            "subject",
            "information",
            "records"
        ]
    },
    {
        "Text": "#G23# As an Application Administrator, I want to assign Users to an Advanced Data Entry and ensure that the appropriate permissions are enforced.",
        "Persona": [
            " Application Administrator"
        ],
        "Action": [
            "want",
            "assign",
            "ensure",
            "appropriate",
            "are",
            "enforced"
        ],
        "Entity": [
            "assign",
            "users",
            "data",
            "entry",
            "ensure",
            "permissions"
        ]
    },
    {
        "Text": "#G23# As an Application Administrator , I want to be able to configure the help center URL and topic mappings.",
        "Persona": [
            " Application Administrator "
        ],
        "Action": [
            "want",
            "configure",
            "help",
            "center"
        ],
        "Entity": [
            "able",
            "help",
            "center",
            "topic",
            "mappings"
        ]
    },
    {
        "Text": "#G23# As a user, I want to add additional properties for repositories.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "add"
        ],
        "Entity": [
            "properties",
            "repositories"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to add Notes to other record types.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "add",
            "notes",
            "record",
            "types"
        ],
        "Entity": [
            "notes",
            "record",
            "types"
        ]
    },
    {
        "Text": "#G23# As an Administrator, I want to create a new User account for someone else.",
        "Persona": [
            " Administrator"
        ],
        "Action": [
            "want",
            "create",
            "account"
        ],
        "Entity": [
            "user",
            "account",
            "someone"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to add administrative data about the archival description and finding aid-related data to a top-level Resource.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "add",
            "finding"
        ],
        "Entity": [
            "data",
            "description",
            "finding",
            "data",
            "top-level",
            "resource"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to assign a Level of description to a Resource or Resource Component and optionally specify another value if the Level is not in a predefined list.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "assign",
            "level",
            "specify",
            "value",
            "level",
            "predefined",
            "list"
        ],
        "Entity": [
            "assign",
            "level",
            "description",
            "resource",
            "resource",
            "component",
            "value",
            "level",
            "list"
        ]
    },
    {
        "Text": "#G23# As a developer, I want to use a configuration that is not prepackaged within a built version of application.",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "use",
            "built"
        ],
        "Entity": [
            "use",
            "configuration",
            "version",
            "application"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to import EAD files that were exported by the Archivists' Toolkit.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "import",
            "files",
            "were"
        ],
        "Entity": [
            "import",
            "files"
        ]
    },
    {
        "Text": "#G23# As a systems administrator, I want to be able to control the location of the demo database and I want it to be backed up.",
        "Persona": [
            " systems administrator"
        ],
        "Action": [
            "want",
            "control",
            "demo",
            "want"
        ],
        "Entity": [
            "able",
            "control",
            "location",
            "demo",
            "database"
        ]
    },
    {
        "Text": "#G23# As an archivist, I want to search within a repository for resource and accession and digital object records.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "search",
            "accession",
            "object",
            "records"
        ],
        "Entity": [
            "search",
            "repository",
            "resource",
            "accession",
            "digital",
            "object",
            "records"
        ]
    },
    {
        "Text": "#G23# As an archivist, I want to create and edit a Collection Management subrecord.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "create",
            "edit"
        ],
        "Entity": [
            "edit",
            "collection",
            "management"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to rearrange the Resource and/or Digital Object hierarchy using keyboard-based navigation.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "rearrange",
            "object",
            "using"
        ],
        "Entity": [
            "resource",
            "digital",
            "object",
            "hierarchy",
            "using",
            "navigation"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to rearrange the resource description hierarchy by dragging an archival object to a different position in the hierarchy.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "rearrange",
            "dragging",
            "object",
            "position"
        ],
        "Entity": [
            "resource",
            "description",
            "hierarchy",
            "object",
            "position",
            "hierarchy"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I would like to indicate an Agent is either the creator or source or subject of an Accession or Resource or Resource Component.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "would",
            "like",
            "indicate",
            "subject",
            "accession"
        ],
        "Entity": [
            "like",
            "agent",
            "creator",
            "source",
            "subject",
            "accession",
            "resource",
            "resource",
            "component"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to export a description as EAD.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "export"
        ],
        "Entity": [
            "export",
            "description"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to create and edit Event records.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "create",
            "edit",
            "records"
        ],
        "Entity": [
            "edit",
            "event",
            "records"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to manage Digital Objects.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "manage",
            "objects"
        ],
        "Entity": [
            "manage",
            "digital",
            "objects"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to associate an Instance with a Resource and/or Resource Component.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "associate",
            "instance"
        ],
        "Entity": [
            "associate",
            "instance",
            "resource",
            "resource",
            "component"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I don't want to inadvertently overwrite someone else's changes to a record that I'm editing.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "don't",
            "want",
            "overwrite",
            "changes",
            "record"
        ],
        "Entity": [
            "don't",
            "someone",
            "changes",
            "record",
            "editing"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to create and edit Rights Management statements.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "create",
            "edit",
            "rights"
        ],
        "Entity": [
            "edit",
            "rights",
            "management",
            "statements"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to upload an EAD for import from within the frontend application.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "upload",
            "import"
        ],
        "Entity": [
            "import",
            "application"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to import EAD data.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "import"
        ],
        "Entity": [
            "import",
            "data"
        ]
    },
    {
        "Text": "#G23# As a Repository Manager , I want to create, update and delete archival descriptions in my repository.",
        "Persona": [
            " Repository Manager "
        ],
        "Action": [
            "want",
            "create",
            "update",
            "delete"
        ],
        "Entity": [
            "update",
            "descriptions",
            "repository"
        ]
    },
    {
        "Text": "#G23# As a Developer , I want to develop a custom importer.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "develop"
        ],
        "Entity": [
            "custom",
            "importer"
        ]
    },
    {
        "Text": "#G23# As a Basic Data Entry user , I want to create and update basic archival description information.",
        "Persona": [
            " Basic Data Entry user "
        ],
        "Action": [
            "want",
            "create",
            "update"
        ],
        "Entity": [
            "update",
            "basic",
            "description",
            "information"
        ]
    },
    {
        "Text": "#G23# As a Repository Manager , I want to create, update and delete any records in my repository.",
        "Persona": [
            " Repository Manager "
        ],
        "Action": [
            "want",
            "create",
            "update",
            "delete",
            "records"
        ],
        "Entity": [
            "update",
            "records",
            "repository"
        ]
    },
    {
        "Text": "#G23# As a ReadOnly user , I want to view archival descriptions in my repository.",
        "Persona": [
            " ReadOnly user "
        ],
        "Action": [
            "want",
            "view"
        ],
        "Entity": [
            "view",
            "descriptions",
            "repository"
        ]
    },
    {
        "Text": "#G23# As an System Administrator, I want to declare that a user is has the Repository Manager role for a given Repository.",
        "Persona": [
            " System Administrator"
        ],
        "Action": [
            "want",
            "declare",
            "has",
            "given"
        ],
        "Entity": [
            "user",
            "repository",
            "manager",
            "role",
            "given",
            "repository"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to specify the Source for a Name Form of an Agent and add new Sources and edit existing Sources.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "specify",
            "name",
            "form",
            "add",
            "edit"
        ],
        "Entity": [
            "source",
            "name",
            "form",
            "agent",
            "sources",
            "edit",
            "sources"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to create and edit Agent records.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "create",
            "edit",
            "records"
        ],
        "Entity": [
            "edit",
            "agent",
            "records"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to create and edit a Resource record.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "create",
            "edit",
            "record"
        ],
        "Entity": [
            "edit",
            "resource",
            "record"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to associate a Subject record with a Resource description.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "associate",
            "subject",
            "record"
        ],
        "Entity": [
            "associate",
            "subject",
            "record",
            "resource",
            "description"
        ]
    },
    {
        "Text": "#G23# As a User, I want to authenticate locally.",
        "Persona": [
            " User"
        ],
        "Action": [
            "want",
            "authenticate"
        ],
        "Entity": []
    },
    {
        "Text": "#G23# As User, I want to be able to log in.",
        "Persona": [
            ""
        ],
        "Action": [
            "want",
            "log"
        ],
        "Entity": [
            "able",
            "log"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to associate an Instance with a Container.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "associate",
            "instance"
        ],
        "Entity": [
            "associate",
            "instance",
            "container"
        ]
    },
    {
        "Text": "#G23# As an Archivist, I want to assign Location information to a Container.",
        "Persona": [
            " Archivist"
        ],
        "Action": [
            "want",
            "assign"
        ],
        "Entity": [
            "assign",
            "location",
            "information",
            "container"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to deposit and maintain datasets through a simple web interface, so that I don't need to install and learn new software to deposit.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "deposit",
            "maintain",
            "web",
            "don't",
            "need",
            "install",
            "learn",
            "deposit"
        ],
        "Entity": [
            "deposit",
            "simple",
            "web",
            "interface",
            "don't",
            "need",
            "software",
            "deposit"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to have a user interface that is familiar to me, so that I feel like all the University systems are joined up.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "have",
            "feel",
            "like",
            "are"
        ],
        "Entity": [
            "user",
            "interface",
            "familiar",
            "feel",
            "like",
            "all",
            "university",
            "systems"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to deposit and maintain datasets through Pure, so that I have a single onestop shop for managing my research outputs.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "deposit",
            "maintain",
            "have",
            "single",
            "shop",
            "research",
            "outputs"
        ],
        "Entity": [
            "deposit",
            "single",
            "shop",
            "managing",
            "research",
            "outputs"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to deposit and maintain datasets through Virtual Research Environments and other workflow tools, so that I can continue to work with tools with which I'm familiar.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "deposit",
            "maintain",
            "research",
            "tools",
            "can",
            "continue",
            "work",
            "tools"
        ],
        "Entity": [
            "deposit",
            "research",
            "environments",
            "tools",
            "can",
            "work",
            "tools",
            "familiar"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to deposit the files that I have, so that I don't have to spend a lot of time finding the right version and converting to the right format.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "deposit",
            "files",
            "have",
            "don't",
            "have",
            "spend",
            "lot",
            "time",
            "finding",
            "right",
            "right",
            "format"
        ],
        "Entity": [
            "deposit",
            "files",
            "don't",
            "lot",
            "time",
            "finding",
            "right",
            "version",
            "converting",
            "right",
            "format"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to place data under an embargo, so that my right of first use is protected, and I can fulfil my confidentiality responsibilities.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "place",
            "embargo",
            "right",
            "use",
            "can",
            "fulfil"
        ],
        "Entity": [
            "place",
            "data",
            "embargo",
            "right",
            "first",
            "use",
            "can",
            "confidentiality",
            "responsibilities"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to apply licenses to datasets, so that my IP rights are protected appropriately.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "apply",
            "licenses",
            "rights",
            "are"
        ],
        "Entity": [
            "licenses",
            "rights"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to allow my collaborators privileged access to datasets, so that we continue to have a productive relationship.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "allow",
            "access",
            "continue",
            "have"
        ],
        "Entity": [
            "collaborators",
            "access",
            "relationship"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to deposit arbitrarily large files, so that I am not limited in what files I can and cannot deposit.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "deposit",
            "files",
            "files",
            "can",
            "cannot",
            "deposit"
        ],
        "Entity": [
            "deposit",
            "large",
            "files",
            "limited",
            "files",
            "can",
            "deposit"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to link datasets to publications in Opus, so that both my data and publications are more easily discovered.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "link",
            "are"
        ],
        "Entity": [
            "link",
            "publications",
            "opus",
            "data",
            "publications",
            "more"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to mint DOIs for my data, so that it can be discovered and cited more easily and citations can be tracked so that I can receive credit.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "mint",
            "can",
            "cited",
            "can",
            "can",
            "receive",
            "credit"
        ],
        "Entity": [
            "mint",
            "data",
            "can",
            "more",
            "citations",
            "can",
            "can",
            "credit"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to have metadata automatically filled from other University systems and remembered from previous deposits, so that I don't have to waste time reentering the same information.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "have",
            "deposits",
            "don't",
            "have",
            "waste",
            "time"
        ],
        "Entity": [
            "university",
            "systems",
            "deposits",
            "don't",
            "waste",
            "time",
            "information"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to link to data stored in external repositories, so that I can store my data in an appropriate repository but still register it with the University and I don't have to deposit my data in multiple places.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "link",
            "stored",
            "can",
            "store",
            "appropriate",
            "still",
            "register",
            "don't",
            "have",
            "deposit",
            "places"
        ],
        "Entity": [
            "link",
            "data",
            "external",
            "repositories",
            "can",
            "store",
            "data",
            "repository",
            "but",
            "still",
            "register",
            "university",
            "don't",
            "deposit",
            "data",
            "multiple",
            "places"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to specify a disposal policy for my data, so that I do not accidentally breach laws or collaboration agreements.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "specify",
            "breach"
        ],
        "Entity": [
            "disposal",
            "policy",
            "data",
            "breach",
            "laws",
            "collaboration",
            "agreements"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to track downloads of my data, so that I can demonstrate the impact of my work.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "track",
            "downloads",
            "can",
            "demonstrate",
            "impact",
            "work"
        ],
        "Entity": [
            "track",
            "data",
            "can",
            "impact",
            "work"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to track citations of my data, so that I can demonstrate the impact of my work",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "track",
            "can",
            "demonstrate",
            "impact",
            "work"
        ],
        "Entity": [
            "track",
            "citations",
            "data",
            "can",
            "impact",
            "work"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to have guarantees about data integrity, so that I can use my data in the future and I can fulfil funder requirements for archival.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "have",
            "guarantees",
            "can",
            "use",
            "can",
            "fulfil"
        ],
        "Entity": [
            "guarantees",
            "data",
            "integrity",
            "can",
            "use",
            "data",
            "future",
            "can",
            "requirements"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to attach subject specific discoverability metadata to records, so that researchers in my discipline can find my data more easily.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "attach",
            "subject",
            "records",
            "discipline",
            "can",
            "find"
        ],
        "Entity": [
            "attach",
            "subject",
            "specific",
            "records",
            "researchers",
            "discipline",
            "can",
            "find",
            "data",
            "more"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to link datasets with the project DMP, so that compliance with DMP can be demonstrated and whole project workflow is linked together.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "link",
            "project",
            "can",
            "demonstrated",
            "project"
        ],
        "Entity": [
            "link",
            "project",
            "compliance",
            "can",
            "whole",
            "project"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to manage and share 'live' research data, so that whole project workflow is linked together.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "manage",
            "share",
            "research",
            "project"
        ],
        "Entity": [
            "manage",
            "share",
            "research",
            "data",
            "whole",
            "project"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to manage multiple versions of the same dataset, so that changes to the dataset are transparent and do not compromise research integrity.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "manage",
            "changes",
            "are",
            "compromise",
            "research"
        ],
        "Entity": [
            "manage",
            "multiple",
            "versions",
            "changes",
            "compromise",
            "research",
            "integrity"
        ]
    },
    {
        "Text": "#G24# As a depositor, I want to allow others to deposit on my behalf, so that I can delegate research data management tasks appropriately.",
        "Persona": [
            " depositor"
        ],
        "Action": [
            "want",
            "allow",
            "deposit",
            "can",
            "delegate",
            "research",
            "tasks"
        ],
        "Entity": [
            "deposit",
            "behalf",
            "can",
            "delegate",
            "research",
            "data",
            "management",
            "tasks"
        ]
    },
    {
        "Text": "#G24# As a data reuser, I want to search the archive through the web, so that I can easily find data relevant to my needs.",
        "Persona": [
            " data reuser"
        ],
        "Action": [
            "want",
            "search",
            "archive",
            "web",
            "can",
            "find",
            "needs"
        ],
        "Entity": [
            "search",
            "archive",
            "web",
            "can",
            "find",
            "data",
            "needs"
        ]
    },
    {
        "Text": "#G24# As a data reuser, I want to access the system in my native language, so that I am not put off reusing University of Bath data by language barriers.",
        "Persona": [
            " data reuser"
        ],
        "Action": [
            "want",
            "access",
            "put",
            "reusing",
            "bath"
        ],
        "Entity": [
            "access",
            "system",
            "native",
            "language",
            "put",
            "off",
            "university",
            "bath",
            "data",
            "language",
            "barriers"
        ]
    },
    {
        "Text": "#G24# As a data reuser, I want to examine and identify deposited files, so that I can make a preliminary assessment of usefulness without downloading the whole dataset.",
        "Persona": [
            " data reuser"
        ],
        "Action": [
            "want",
            "examine",
            "identify",
            "files",
            "can",
            "make"
        ],
        "Entity": [
            "files",
            "can",
            "make",
            "preliminary",
            "assessment",
            "usefulness",
            "whole"
        ]
    },
    {
        "Text": "#G24# As a data reuser, I want to view an example citation for a dataset, so that I can reference it correctly.",
        "Persona": [
            " data reuser"
        ],
        "Action": [
            "want",
            "view",
            "example",
            "can",
            "reference"
        ],
        "Entity": [
            "view",
            "example",
            "citation",
            "can",
            "reference"
        ]
    },
    {
        "Text": "#G24# As a data reuser, I want to view a DOI for a dataset, so that I can get back to the data in future and I can import the dataset into my referencemanagement software automatically.",
        "Persona": [
            " data reuser"
        ],
        "Action": [
            "want",
            "view",
            "can",
            "get",
            "back",
            "can",
            "import"
        ],
        "Entity": [
            "view",
            "can",
            "back",
            "data",
            "future",
            "can",
            "import",
            "software"
        ]
    },
    {
        "Text": "#G24# As a data reuser, I want to get a persistent URL for a dataset, so that I can get back to the data in future.",
        "Persona": [
            " data reuser"
        ],
        "Action": [
            "want",
            "get",
            "can",
            "get",
            "back"
        ],
        "Entity": [
            "can",
            "back",
            "data",
            "future"
        ]
    },
    {
        "Text": "#G24# As a data reuser, I want to search the archive through Primo , so that I can search books, articles and data all in one place.",
        "Persona": [
            " data reuser"
        ],
        "Action": [
            "want",
            "search",
            "archive",
            "can",
            "search",
            "books",
            "articles",
            "place"
        ],
        "Entity": [
            "search",
            "archive",
            "primo",
            "can",
            "search",
            "books",
            "articles",
            "data",
            "all",
            "one",
            "place"
        ]
    },
    {
        "Text": "#G24# As a data reuser, I want to see different versions of a dataset at a glance, so that I can be sure I'm using the right version of the dataset.",
        "Persona": [
            " data reuser"
        ],
        "Action": [
            "want",
            "see",
            "glance",
            "can",
            "using",
            "right"
        ],
        "Entity": [
            "see",
            "versions",
            "glance",
            "can",
            "using",
            "right",
            "version"
        ]
    },
    {
        "Text": "#G24# As an externalcollaborator, I want to gain privileged access to data for projects in which I am involved, so that I can collaborate effectively.",
        "Persona": [
            " externalcollaborator"
        ],
        "Action": [
            "want",
            "gain",
            "access",
            "projects",
            "can",
            "collaborate"
        ],
        "Entity": [
            "gain",
            "access",
            "data",
            "projects",
            "can"
        ]
    },
    {
        "Text": "#G24# As an externalcoordinator, I want to have guarantees that my IP rights will not be breached, so that the risk of collaborating with Bath is acceptable to me.",
        "Persona": [
            " externalcoordinator"
        ],
        "Action": [
            "want",
            "have",
            "guarantees",
            "rights",
            "will",
            "risk",
            "collaborating",
            "bath"
        ],
        "Entity": [
            "guarantees",
            "rights",
            "will",
            "risk",
            "bath"
        ]
    },
    {
        "Text": "#G24# AS an externalcoordinator, I want to access data from Bath collaborators off campus, so that I can collaborate effectively.",
        "Persona": [
            " externalcoordinator"
        ],
        "Action": [
            "want",
            "access",
            "bath",
            "can",
            "collaborate"
        ],
        "Entity": [
            "access",
            "data",
            "bath",
            "collaborators",
            "off",
            "campus",
            "can"
        ]
    },
    {
        "Text": "#G24# As a research facility manager, I want to deposit data from my facility directly into the archive on behalf of researchers, so that I am no longer required to maintain my own archive of facility data and researchers can access their own data as needed. ",
        "Persona": [
            " research facility manager"
        ],
        "Action": [
            "want",
            "deposit",
            "archive",
            "required",
            "maintain",
            "own",
            "archive",
            "can",
            "access",
            "own"
        ],
        "Entity": [
            "deposit",
            "data",
            "facility",
            "archive",
            "behalf",
            "researchers",
            "archive",
            "facility",
            "data",
            "researchers",
            "can",
            "access",
            "data"
        ]
    },
    {
        "Text": "#G24# As a Bath Data Archive administrator, I want to make some checks on deposited datasets before they are made public, so that consistent quality of metadata is maintained, compliance with policies can be checked and details of licensing can be checked.",
        "Persona": [
            " Bath Data Archive administrator"
        ],
        "Action": [
            "want",
            "make",
            "checks",
            "are",
            "made",
            "can",
            "details",
            "licensing",
            "can"
        ],
        "Entity": [
            "make",
            "checks",
            "public",
            "quality",
            "compliance",
            "policies",
            "can",
            "details",
            "can"
        ]
    },
    {
        "Text": "#G24# As a Bath Data Archive administrator, I want to require a minimum set of metadata, so that consistent quality of metadata is maintained.",
        "Persona": [
            " Bath Data Archive administrator"
        ],
        "Action": [
            "want",
            "require",
            "set"
        ],
        "Entity": [
            "minimum",
            "set",
            "quality"
        ]
    },
    {
        "Text": "#G24# As a Bath Data Archive administrator, I want to approve scheduled disposal of data, so that data which is still required is not destroyed.",
        "Persona": [
            " Bath Data Archive administrator"
        ],
        "Action": [
            "want",
            "approve",
            "scheduled",
            "still",
            "required"
        ],
        "Entity": [
            "disposal",
            "data",
            "data",
            "still"
        ]
    },
    {
        "Text": "#G24# As a Bath Data Archive administrator, I want to query the entire archive , so that I can report on particular aspects of the archive holdings.",
        "Persona": [
            " Bath Data Archive administrator"
        ],
        "Action": [
            "want",
            "query",
            "archive",
            "can",
            "report",
            "archive"
        ],
        "Entity": [
            "query",
            "entire",
            "archive",
            "can",
            "report",
            "particular",
            "aspects",
            "archive",
            "holdings"
        ]
    },
    {
        "Text": "#G24# As a Bath Data Archive administrator, I want to import Bath data from an external data centre wholesale, so that Bath data holdings in external archives are not lost if they close down.",
        "Persona": [
            " Bath Data Archive administrator"
        ],
        "Action": [
            "want",
            "import",
            "bath",
            "centre",
            "wholesale",
            "bath",
            "archives",
            "are",
            "close",
            "down"
        ],
        "Entity": [
            "import",
            "bath",
            "data",
            "external",
            "data",
            "centre",
            "wholesale",
            "bath",
            "data",
            "holdings",
            "external",
            "archives",
            "lost",
            "close",
            "down"
        ]
    },
    {
        "Text": "#G24# As a Bath Data Archive administrator, I want to encourage and promote the use of open standards for deposit, so that data is as reusable as possible.",
        "Persona": [
            " Bath Data Archive administrator"
        ],
        "Action": [
            "want",
            "encourage",
            "promote",
            "use",
            "open",
            "deposit"
        ],
        "Entity": [
            "use",
            "open",
            "standards",
            "deposit",
            "data",
            "possible"
        ]
    },
    {
        "Text": "#G24# As a Research Information manager, I want to integrate the archive with CRIS, so that I can analyse impact of research data publication I can link funding to all of the outputs it produces.",
        "Persona": [
            " Research Information manager"
        ],
        "Action": [
            "want",
            "integrate",
            "archive",
            "can",
            "analyse",
            "impact",
            "research",
            "can",
            "link",
            "outputs",
            "produces"
        ],
        "Entity": [
            "archive",
            "can",
            "impact",
            "research",
            "data",
            "publication",
            "can",
            "link",
            "funding",
            "all",
            "outputs",
            "produces"
        ]
    },
    {
        "Text": "#G24# As a Research Information manager, I want to include records for externally held data complete, so that the university's record of data holdings is complete.",
        "Persona": [
            " Research Information manager"
        ],
        "Action": [
            "want",
            "include",
            "records",
            "held",
            "complete",
            "record",
            "complete"
        ],
        "Entity": [
            "records",
            "data",
            "record",
            "data",
            "holdings"
        ]
    },
    {
        "Text": "#G24# As a Research Information manager, I want to track citation counts for published datasets, so that impact of datasets within academia can be demonstrated.",
        "Persona": [
            " Research Information manager"
        ],
        "Action": [
            "want",
            "track",
            "counts",
            "impact",
            "can",
            "demonstrated"
        ],
        "Entity": [
            "track",
            "citation",
            "counts",
            "impact",
            "academia",
            "can"
        ]
    },
    {
        "Text": "#G24# As a Research Information manager, I want to segment the view and download statistics by country and sector so that impact of datasets outside academia can be demonstrated.",
        "Persona": [
            " Research Information manager"
        ],
        "Action": [
            "want",
            "segment",
            "view",
            "download",
            "impact",
            "can",
            "demonstrated"
        ],
        "Entity": [
            "segment",
            "view",
            "statistics",
            "country",
            "sector",
            "impact",
            "outside",
            "academia",
            "can"
        ]
    },
    {
        "Text": "#G24# As a Research Information manager, I want to have datasets linked to metadata about projects, so that I can report on projects depositing datasets in relation to funder requirements.",
        "Persona": [
            " Research Information manager"
        ],
        "Action": [
            "want",
            "have",
            "projects",
            "can",
            "report",
            "projects"
        ],
        "Entity": [
            "projects",
            "can",
            "report",
            "projects",
            "relation",
            "requirements"
        ]
    },
    {
        "Text": "#G24# As an UnivITservice, I want to store archived data on existing storage systems, so that university data storage is consistent and maintainable and future availability of data can be guaranteed.",
        "Persona": [
            " UnivITservice"
        ],
        "Action": [
            "want",
            "store",
            "can",
            "guaranteed"
        ],
        "Entity": [
            "store",
            "data",
            "storage",
            "systems",
            "university",
            "data",
            "storage",
            "future",
            "availability",
            "data",
            "can"
        ]
    },
    {
        "Text": "#G24# As an UnivITservice, I want to integrate the archive with existing university systems such as LDAP, so that the cost of administering the system can be kept low.",
        "Persona": [
            " UnivITservice"
        ],
        "Action": [
            "want",
            "integrate",
            "archive",
            "cost",
            "can",
            "kept",
            "low"
        ],
        "Entity": [
            "archive",
            "university",
            "systems",
            "cost",
            "system",
            "can",
            "low"
        ]
    },
    {
        "Text": "#G24# As an UnivITservice, I want to store archived data directly on the HCP object store, so that  features can be made.",
        "Persona": [
            " UnivITservice"
        ],
        "Action": [
            "want",
            "store",
            "object",
            "store",
            "features",
            "can",
            "made"
        ],
        "Entity": [
            "store",
            "data",
            "object",
            "store",
            "features",
            "can"
        ]
    },
    {
        "Text": "#G24# As an UnivITservice, I want to be able to export all data to a different system, so that I am not tied into one system which may not be the most appropriate at some point in the future.",
        "Persona": [
            " UnivITservice"
        ],
        "Action": [
            "want",
            "export",
            "may",
            "appropriate",
            "point"
        ],
        "Entity": [
            "able",
            "export",
            "all",
            "data",
            "system",
            "one",
            "system",
            "may",
            "most",
            "point",
            "future"
        ]
    },
    {
        "Text": "#G24# As a developer, I want to deposit and maintain datasets via an API such as SWORD2, so that my service can interact with the archive. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "deposit",
            "maintain",
            "service",
            "can",
            "interact",
            "archive"
        ],
        "Entity": [
            "deposit",
            "sword",
            "service",
            "can",
            "archive"
        ]
    },
    {
        "Text": "#G24# As an academicpublisher, I want to make persistent web links between my articles and underlying datasets, so that my journals can be seen to be filled with robust, high quality research. ",
        "Persona": [
            " academicpublisher"
        ],
        "Action": [
            "want",
            "make",
            "web",
            "links",
            "articles",
            "can",
            "seen",
            "research"
        ],
        "Entity": [
            "make",
            "web",
            "links",
            "articles",
            "journals",
            "can",
            "high",
            "quality",
            "research"
        ]
    },
    {
        "Text": "#G24# As a fundingbody, I want to be reassured that researchers I fund have robust archival plans for their data, so that I can be sure that funding them is a worthwhile investment.",
        "Persona": [
            " fundingbody"
        ],
        "Action": [
            "want",
            "fund",
            "have",
            "plans",
            "can"
        ],
        "Entity": [
            "researchers",
            "fund",
            "plans",
            "data",
            "can",
            "funding",
            "investment"
        ]
    },
    {
        "Text": "#G24# As a fundingbody, I want to harvest metadata on outputs from research I fund, so that I can analyse effectiveness of funding strategy and I can encourage cross fertilisation of research outputs.",
        "Persona": [
            " fundingbody"
        ],
        "Action": [
            "want",
            "harvest",
            "outputs",
            "research",
            "fund",
            "can",
            "analyse",
            "can",
            "encourage",
            "cross",
            "research",
            "outputs"
        ],
        "Entity": [
            "harvest",
            "outputs",
            "research",
            "fund",
            "can",
            "effectiveness",
            "funding",
            "strategy",
            "can",
            "cross",
            "fertilisation",
            "research",
            "outputs"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to know all the collections and objects in the DAMS for which I have custodial responsibility. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "know",
            "objects",
            "dams",
            "have"
        ],
        "Entity": [
            "know",
            "all",
            "collections",
            "objects",
            "dams",
            "custodial",
            "responsibility"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to be able to update repository information in one place and be assured updates will be propagated to all relevant places. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "update",
            "place",
            "updates",
            "will",
            "places"
        ],
        "Entity": [
            "able",
            "update",
            "repository",
            "information",
            "one",
            "place",
            "assured",
            "updates",
            "will",
            "all",
            "places"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to constrain curatorial access to my units assets to staff members of my unit and to DAMS managers having universal access. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "constrain",
            "access",
            "staff",
            "dams",
            "access"
        ],
        "Entity": [
            "access",
            "units",
            "assets",
            "staff",
            "members",
            "unit",
            "dams",
            "managers",
            "universal",
            "access"
        ]
    },
    {
        "Text": "#G25# As a user, I want to list all the collections and objects in the DAMS that belong to a library unit. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "list",
            "objects",
            "dams",
            "belong"
        ],
        "Entity": [
            "list",
            "all",
            "collections",
            "objects",
            "dams",
            "library",
            "unit"
        ]
    },
    {
        "Text": "#G25# As a user, I want to be able to contact repositories. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "contact"
        ],
        "Entity": [
            "able",
            "contact",
            "repositories"
        ]
    },
    {
        "Text": "#G25# As the DAMS manager, I want to be able to list for browsing all formal collections represented in the DAMS along with the appropriate relationships. ",
        "Persona": [
            "nager"
        ],
        "Action": [
            "want",
            "list",
            "browsing",
            "dams",
            "appropriate"
        ],
        "Entity": [
            "able",
            "list",
            "browsing",
            "all",
            "formal",
            "collections",
            "dams",
            "relationships"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to know all the collections for which I have curatorial responsibility.",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "know",
            "have"
        ],
        "Entity": [
            "know",
            "all",
            "collections",
            "responsibility"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to compose collections, limiting the collection to the items sharing the same provenance, limiting the collection to represent a part of a collection have a singular provenance, or assembly a collection from other collections and objects.",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "compose",
            "items",
            "represent",
            "part",
            "have",
            "objects"
        ],
        "Entity": [
            "collections",
            "limiting",
            "collection",
            "items",
            "sharing",
            "provenance",
            "limiting",
            "collection",
            "part",
            "collection",
            "singular",
            "provenance",
            "assembly",
            "collection",
            "collections",
            "objects"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to say one collection is related to another collection.  ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "say"
        ],
        "Entity": [
            "say",
            "one",
            "collection",
            "collection"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to describe a collection, including its title, it's inclusive / bulk dates, its language(s), and many other aspects.",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "describe",
            "including",
            "title",
            "bulk",
            "dates"
        ],
        "Entity": [
            "collection",
            "title",
            "bulk",
            "dates",
            "many",
            "aspects"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate names related to the collection either as creator, source, or subject. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "names",
            "subject"
        ],
        "Entity": [
            "names",
            "collection",
            "creator",
            "source",
            "subject"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate subjects related to the collection. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "subjects"
        ],
        "Entity": [
            "subjects",
            "collection"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate other descriptions of the collection that are outside the DAMS and of probable importance to users. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "are",
            "dams"
        ],
        "Entity": [
            "descriptions",
            "collection",
            "outside",
            "dams",
            "probable",
            "importance",
            "users"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to know all events occurring to a collection. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "know",
            "occurring"
        ],
        "Entity": [
            "know",
            "all",
            "events",
            "collection"
        ]
    },
    {
        "Text": "#G25# As a user, I want to be able to browse by collections in the DAMS. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "browse",
            "dams"
        ],
        "Entity": [
            "able",
            "browse",
            "collections",
            "dams"
        ]
    },
    {
        "Text": "#G25# As a user, I want to be able to limit my search to specified collection(s). ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "limit",
            "search",
            "specified"
        ],
        "Entity": [
            "able",
            "limit",
            "search"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want know all the components belonging to an object. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "know",
            "object"
        ],
        "Entity": [
            "know",
            "all",
            "components",
            "belonging",
            "object"
        ]
    },
    {
        "Text": "#G25# As repository manager, I want to know all the files belonging to an object. ",
        "Persona": [
            "nager"
        ],
        "Action": [
            "want",
            "know",
            "files",
            "object"
        ],
        "Entity": [
            "know",
            "all",
            "files",
            "belonging",
            "object"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to describe an object, including its title, date(s), language(s), and other aspects. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "describe",
            "object",
            "including",
            "title"
        ],
        "Entity": [
            "object",
            "title",
            "aspects"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate names related to an object. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "names",
            "object"
        ],
        "Entity": [
            "names",
            "object"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate subjects that are related to an object. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "subjects",
            "are",
            "object"
        ],
        "Entity": [
            "subjects",
            "object"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate the copyright status of an object. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "copyright",
            "object"
        ],
        "Entity": [
            "copyright",
            "status",
            "object"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate any statutes pertinent to an object. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "object"
        ],
        "Entity": [
            "statutes",
            "object"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate any license pertinent to an object. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "license",
            "object"
        ],
        "Entity": [
            "license",
            "object"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate any other rights pertinent to an object. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "rights",
            "object"
        ],
        "Entity": [
            "rights",
            "object"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate any external versions or descriptions of an object that may be of probable importance to an user. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "object",
            "may"
        ],
        "Entity": [
            "external",
            "versions",
            "descriptions",
            "object",
            "may",
            "probable",
            "importance",
            "user"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to know all events done to an object over the object's life cycle. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "know",
            "done",
            "object",
            "cycle"
        ],
        "Entity": [
            "know",
            "all",
            "events",
            "object",
            "over",
            "life",
            "cycle"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know what repository an object belongs to. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "object",
            "belongs"
        ],
        "Entity": [
            "know",
            "repository",
            "object"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager I want to know what collection(s) an object belongs to. ",
        "Persona": [
            " DAMS manager I want to know what collection(s) an object belongs to. "
        ],
        "Action": [],
        "Entity": []
    },
    {
        "Text": "#G25# As a user, I want to know what repository an object belongs to. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "know",
            "object",
            "belongs"
        ],
        "Entity": [
            "know",
            "repository",
            "object"
        ]
    },
    {
        "Text": "#G25# As a user, I want to know what collection(s) an object belongs to. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "know",
            "object",
            "belongs"
        ],
        "Entity": [
            "know",
            "object"
        ]
    },
    {
        "Text": "#G25# As a user, I want to see all the component parts of an object. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "see",
            "parts",
            "object"
        ],
        "Entity": [
            "see",
            "all",
            "component",
            "parts",
            "object"
        ]
    },
    {
        "Text": "#G25# As a user, I want to have access to the content files for an object. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "access",
            "content",
            "files",
            "object"
        ],
        "Entity": [
            "access",
            "content",
            "files",
            "object"
        ]
    },
    {
        "Text": "#G25# As a user, I want to know the rights status of an object. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "know",
            "rights",
            "object"
        ],
        "Entity": [
            "know",
            "rights",
            "status",
            "object"
        ]
    },
    {
        "Text": "#G25# As a user, I want to know about other versions of the object or its metadata that might be of use to me. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "know",
            "object",
            "might",
            "use"
        ],
        "Entity": [
            "know",
            "versions",
            "object",
            "might",
            "use"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to represent the physical and/or logical structure of an object. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "represent",
            "structure",
            "object"
        ],
        "Entity": [
            "physical",
            "structure",
            "object"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to list all the components, in their appropriate order, for an object. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "list",
            "appropriate",
            "order",
            "object"
        ],
        "Entity": [
            "list",
            "all",
            "components",
            "order",
            "object"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to link, when appropriate, a component to another component or to a file. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "link",
            "appropriate",
            "file"
        ],
        "Entity": [
            "link",
            "component",
            "component",
            "file"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to describe each component as necessary, including title, date(s), language(s), and other facets. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "describe",
            "including",
            "title",
            "facets"
        ],
        "Entity": [
            "component",
            "necessary",
            "title",
            "facets"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate any name that is pertinent to the component. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "name"
        ],
        "Entity": [
            "name",
            "component"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate any subject that is pertinent to the component. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "subject"
        ],
        "Entity": [
            "subject",
            "component"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate if the component has a copyright status different than that of of the object as a whole. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "has",
            "copyright",
            "object"
        ],
        "Entity": [
            "component",
            "copyright",
            "status",
            "object",
            "whole"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate if a statute pertains to the component, apart from the object as a whole. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "pertains",
            "object"
        ],
        "Entity": [
            "statute",
            "component",
            "object",
            "whole"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate if a license pertains to the component, apart from the object as a whole. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "license",
            "pertains",
            "object"
        ],
        "Entity": [
            "license",
            "component",
            "object",
            "whole"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate if other rights pertain to the component, apart from the object as a whole. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "rights",
            "pertain",
            "object"
        ],
        "Entity": [
            "rights",
            "component",
            "object",
            "whole"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to know all events occurring to a component over its life cycle. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "know",
            "occurring",
            "cycle"
        ],
        "Entity": [
            "know",
            "all",
            "events",
            "component",
            "over",
            "life",
            "cycle"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to present in their assigned order all components comprising an object. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "present",
            "order",
            "comprising",
            "object"
        ],
        "Entity": [
            "present",
            "order",
            "all",
            "components",
            "comprising",
            "object"
        ]
    },
    {
        "Text": "#G25# As a user, I want to be able to see and navigate the component hierarchy of an object. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "see",
            "navigate",
            "object"
        ],
        "Entity": [
            "able",
            "see",
            "component",
            "hierarchy",
            "object"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to know all the content files in the DAMS for my repository's objects. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "know",
            "content",
            "files",
            "dams",
            "objects"
        ],
        "Entity": [
            "know",
            "all",
            "content",
            "files",
            "dams",
            "objects"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to associate a content file with either an object or an object component. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "associate",
            "content",
            "file",
            "object",
            "object"
        ],
        "Entity": [
            "associate",
            "content",
            "file",
            "object",
            "object",
            "component"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to know any event that occurred to a content file for any of my repository's objects. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "know",
            "occurred",
            "content",
            "file",
            "objects"
        ],
        "Entity": [
            "know",
            "event",
            "content",
            "file",
            "objects"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to indicate to preservation managers aspects of a master file useful for monitoring its integrity, and impending obsolescence, including file size, creation date, file format and format version. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "indicate",
            "master",
            "file",
            "including",
            "file",
            "size",
            "date",
            "file",
            "format",
            "format"
        ],
        "Entity": [
            "preservation",
            "managers",
            "aspects",
            "master",
            "file",
            "useful",
            "monitoring",
            "integrity",
            "obsolescence",
            "file",
            "size",
            "creation",
            "date",
            "file",
            "format",
            "format",
            "version"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to indicate to preservation managers the checksum and checksum method for each master file for a given object. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "indicate",
            "master",
            "file",
            "given",
            "object"
        ],
        "Entity": [
            "preservation",
            "managers",
            "method",
            "master",
            "file",
            "given",
            "object"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to indicate the source-capture information for a file where it is useful to do so. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "indicate",
            "file"
        ],
        "Entity": [
            "information",
            "file",
            "where",
            "useful"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know, via preservation managers, of any object for which integrity or authenticity is in question or that has been updated to a more current file format. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "object",
            "question",
            "has",
            "been",
            "updated",
            "file",
            "format"
        ],
        "Entity": [
            "know",
            "preservation",
            "managers",
            "object",
            "integrity",
            "authenticity",
            "question",
            "more",
            "current",
            "file",
            "format"
        ]
    },
    {
        "Text": "#G25# As a user, I want access to content files that comprise an object, so that I can decide whether a file is too large to download.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "access",
            "content",
            "files",
            "comprise",
            "object",
            "can",
            "decide",
            "file",
            "download"
        ],
        "Entity": [
            "access",
            "content",
            "files",
            "object",
            "can",
            "file",
            "large"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to provide a title, in all useful forms, for my repository's collections, objects, and object components. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "provide",
            "title",
            "forms",
            "objects",
            "object"
        ],
        "Entity": [
            "title",
            "all",
            "useful",
            "forms",
            "collections",
            "objects",
            "object",
            "components"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to know any changes occurring to titles for repository's collections, objects, and object components. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "know",
            "changes",
            "occurring",
            "titles",
            "objects",
            "object"
        ],
        "Entity": [
            "know",
            "changes",
            "titles",
            "collections",
            "objects",
            "object",
            "components"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to present collections, objects, and object components by title. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "present",
            "objects",
            "object",
            "title"
        ],
        "Entity": [
            "present",
            "collections",
            "objects",
            "object",
            "components",
            "title"
        ]
    },
    {
        "Text": "#G25# As a user, I want to search collections, objects, and object components by title. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "search",
            "objects",
            "object",
            "title"
        ],
        "Entity": [
            "search",
            "collections",
            "objects",
            "object",
            "components",
            "title"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate for an object or object component the place of publication, the publisher, edition, etc., when pertinent. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "object",
            "object",
            "place"
        ],
        "Entity": [
            "object",
            "object",
            "component",
            "place",
            "publication",
            "publisher",
            "edition"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to know of any changes made to the origin Info for an object, including its component parts. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "know",
            "changes",
            "made",
            "object",
            "including",
            "parts"
        ],
        "Entity": [
            "know",
            "changes",
            "origin",
            "info",
            "object",
            "component",
            "parts"
        ]
    },
    {
        "Text": "#G25# As a user, I want to know for an object or its component parts the place of publication, the publisher, etc.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "know",
            "object",
            "parts",
            "place"
        ],
        "Entity": [
            "know",
            "object",
            "component",
            "parts",
            "place",
            "publication",
            "publisher"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to describe various facets of a collection, object, or object component that are not addressable via title, date, name, and subject entities. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "describe",
            "facets",
            "object",
            "object",
            "are",
            "title",
            "date",
            "name",
            "subject"
        ],
        "Entity": [
            "facets",
            "collection",
            "object",
            "object",
            "component",
            "title",
            "date",
            "name",
            "subject",
            "entities"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to know of all modifications made to notes for my repository's collections, objects, or object components. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "know",
            "made",
            "notes",
            "objects",
            "object"
        ],
        "Entity": [
            "know",
            "all",
            "modifications",
            "notes",
            "collections",
            "objects",
            "object",
            "components"
        ]
    },
    {
        "Text": "#G25# As a user, I want to know about various facets of a collection, object, or object component, such as scope and content, various identifiers, conditions governing use/access, etc.  ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "know",
            "facets",
            "object",
            "object",
            "content",
            "conditions"
        ],
        "Entity": [
            "know",
            "facets",
            "collection",
            "object",
            "object",
            "component",
            "scope",
            "content",
            "identifiers",
            "conditions",
            "governing"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate the language(s) for present in a collection, object, or object component. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "present",
            "object",
            "object"
        ],
        "Entity": [
            "present",
            "collection",
            "object",
            "object",
            "component"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to know of any changes made to language(s) indicated for a collection, object, or object component. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "know",
            "changes",
            "made",
            "indicated",
            "object",
            "object"
        ],
        "Entity": [
            "know",
            "changes",
            "collection",
            "object",
            "object",
            "component"
        ]
    },
    {
        "Text": "#G25# As a user, I want to scope my searches for collections, objects, or object components to a specific language. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "searches",
            "objects",
            "object"
        ],
        "Entity": [
            "scope",
            "searches",
            "collections",
            "objects",
            "object",
            "components",
            "specific",
            "language"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to register a name record for each unique identity associated with my repository's collections and objects. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "register",
            "name",
            "record",
            "associated",
            "objects"
        ],
        "Entity": [
            "register",
            "name",
            "record",
            "unique",
            "identity",
            "collections",
            "objects"
        ]
    },
    {
        "Text": "#G25# As a user, I want to search by for collections and objects by name. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "search",
            "objects",
            "name"
        ],
        "Entity": [
            "search",
            "collections",
            "objects",
            "name"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate that a name pertinent to a collection, object, or object component has a specific role, such as illustrator, photographer, etc. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "name",
            "object",
            "object",
            "has"
        ],
        "Entity": [
            "name",
            "collection",
            "object",
            "object",
            "component",
            "specific",
            "role",
            "illustrator",
            "photographer"
        ]
    },
    {
        "Text": "#G25# As a user, I want to scope by searches by name to a specific role such as illustrator, photographer, etc. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "searches",
            "name"
        ],
        "Entity": [
            "scope",
            "searches",
            "name",
            "specific",
            "role",
            "illustrator",
            "photographer"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate all subjects that are pertinent to a collection, object, or object component. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "subjects",
            "are",
            "object",
            "object"
        ],
        "Entity": [
            "all",
            "subjects",
            "collection",
            "object",
            "object",
            "component"
        ]
    },
    {
        "Text": "#G25# As a user, I want to search for collections, objects, and object components by pertinent such headings, including title, topic, genre/form, geographical name, function, occupation, name, cartographics, etc. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "search",
            "objects",
            "object",
            "including",
            "title",
            "name",
            "function",
            "name"
        ],
        "Entity": [
            "search",
            "collections",
            "objects",
            "object",
            "components",
            "headings",
            "title",
            "topic",
            "name",
            "function",
            "occupation",
            "name"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate the geo-coordinates for any resource that believe useful to an end user. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "believe",
            "end"
        ],
        "Entity": [
            "resource",
            "useful",
            "end",
            "user"
        ]
    },
    {
        "Text": "#G25# As a user, I want to see the geographical context of a collection, object, or object component, where pertinent. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "see",
            "object",
            "object"
        ],
        "Entity": [
            "see",
            "context",
            "collection",
            "object",
            "object",
            "component",
            "where"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to indicate all other pertinent versions or descriptions of a resource that are external to the DAMS. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "indicate",
            "are",
            "dams"
        ],
        "Entity": [
            "all",
            "versions",
            "descriptions",
            "resource",
            "external",
            "dams"
        ]
    },
    {
        "Text": "#G25# As a user, I want to know of all other pertinent versions or descriptions of the resource. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "know"
        ],
        "Entity": [
            "know",
            "all",
            "versions",
            "descriptions",
            "resource"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to know if the checksum for any of my repository's content files that have changed.",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "know",
            "content",
            "files",
            "have",
            "changed"
        ],
        "Entity": [
            "know",
            "content",
            "files"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know, via the preservation manager, of all files for which the checksum has changed since last registered.",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "files",
            "has",
            "changed",
            "last"
        ],
        "Entity": [
            "know",
            "preservation",
            "manager",
            "all",
            "files",
            "last"
        ]
    },
    {
        "Text": "#G25# As a repository manager, I want to know, where pertinent, the hardware and software used to generate a content file. ",
        "Persona": [
            " repository manager"
        ],
        "Action": [
            "want",
            "know",
            "generate",
            "content",
            "file"
        ],
        "Entity": [
            "know",
            "where",
            "hardware",
            "software",
            "content",
            "file"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know what objects or object components are still under copyright and cannot be displayed without either a license or incurring risk. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "objects",
            "object",
            "are",
            "still",
            "copyright",
            "cannot",
            "license",
            "incurring",
            "risk"
        ],
        "Entity": [
            "know",
            "objects",
            "object",
            "components",
            "still",
            "copyright",
            "license",
            "incurring",
            "risk"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know when copyright for an object or object component is likely to expire per jurisdictional copyright statute. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "copyright",
            "object",
            "object",
            "expire",
            "copyright"
        ],
        "Entity": [
            "know",
            "copyright",
            "object",
            "object",
            "component",
            "copyright",
            "statute"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know when the copyright status for an object or object component is modified, either manually or automatically. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "copyright",
            "object",
            "object",
            "modified"
        ],
        "Entity": [
            "know",
            "copyright",
            "status",
            "object",
            "object",
            "component"
        ]
    },
    {
        "Text": "#G25# As a user, I want to know if an object or object component is under copyright and, where possible, who the rights holder is. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "know",
            "object",
            "object",
            "copyright",
            "rights"
        ],
        "Entity": [
            "know",
            "object",
            "object",
            "component",
            "copyright",
            "where",
            "possible",
            "who",
            "rights",
            "holder"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know all the statutes pertinent to an object or object component. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "object",
            "object"
        ],
        "Entity": [
            "know",
            "all",
            "statutes",
            "object",
            "object",
            "component"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know when the pertinence of a statute to a object or object component is scheduled to expire. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "object",
            "object",
            "scheduled",
            "expire"
        ],
        "Entity": [
            "know",
            "pertinence",
            "statute",
            "object",
            "object",
            "component"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know when the application of a statute to an object or object component has been modified, either manually or automatically. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "object",
            "object",
            "has",
            "been",
            "modified"
        ],
        "Entity": [
            "know",
            "application",
            "statute",
            "object",
            "object",
            "component"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know if copyrighted content has an applicable license. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "content",
            "has",
            "license"
        ],
        "Entity": [
            "know",
            "content",
            "license"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know if an object or object component is subject to a library policy that restricts access in any way. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "object",
            "object",
            "subject",
            "restricts",
            "access"
        ],
        "Entity": [
            "know",
            "object",
            "object",
            "component",
            "subject",
            "library",
            "policy",
            "access",
            "way"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know when application of a library policy to an object or object component is scheduled to expire. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "object",
            "object",
            "scheduled",
            "expire"
        ],
        "Entity": [
            "know",
            "application",
            "library",
            "policy",
            "object",
            "object",
            "component"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know if application of a library policy to an object or object component has been modified, either manually or automatically.",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "object",
            "object",
            "has",
            "been",
            "modified"
        ],
        "Entity": [
            "know",
            "application",
            "library",
            "policy",
            "object",
            "object",
            "component"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know all the uses for an object or object component that are permitted or restricted per the rights status of the object or object component.",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "uses",
            "object",
            "object",
            "are",
            "permitted",
            "rights",
            "object",
            "object"
        ],
        "Entity": [
            "know",
            "all",
            "uses",
            "object",
            "object",
            "component",
            "rights",
            "status",
            "object",
            "object",
            "component"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want know the dates for when a permission or restriction is active. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "dates"
        ],
        "Entity": [
            "know",
            "dates",
            "permission",
            "restriction",
            "active"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know when permitted and restricted acts and/or their active dates are modified. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "permitted",
            "acts",
            "dates",
            "are",
            "modified"
        ],
        "Entity": [
            "know",
            "acts",
            "active",
            "dates"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to track all events scheduled for recording in the DAMS. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "track",
            "scheduled",
            "dams"
        ],
        "Entity": [
            "track",
            "all",
            "events",
            "recording",
            "dams"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know the agent(s) responsible for carrying out an event. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "carrying",
            "out"
        ],
        "Entity": [
            "know",
            "responsible",
            "out",
            "event"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know when the event occurred. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "occurred"
        ],
        "Entity": [
            "know",
            "event"
        ]
    },
    {
        "Text": "#G25# As a DAMS manager, I want to know the outcome of the event, e.g., object NN was deleted. ",
        "Persona": [
            " DAMS manager"
        ],
        "Action": [
            "want",
            "know",
            "object",
            "was",
            "deleted"
        ],
        "Entity": [
            "know",
            "outcome",
            "event",
            "object"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to apply a license or rights statement, so that I know what I can do with a file.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "apply",
            "license",
            "rights",
            "know",
            "can",
            "file"
        ],
        "Entity": [
            "license",
            "rights",
            "statement",
            "know",
            "can",
            "file"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to mark individual files as restricted, so that they don't get shared by mistake.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "mark",
            "files",
            "don't",
            "get",
            "mistake"
        ],
        "Entity": [
            "mark",
            "individual",
            "files",
            "don't",
            "mistake"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to mark groups of files as restricted, so that they don't get shared by mistake.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "mark",
            "groups",
            "files",
            "don't",
            "get",
            "mistake"
        ],
        "Entity": [
            "mark",
            "groups",
            "files",
            "don't",
            "mistake"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to restrict a file from view.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "restrict",
            "file",
            "view"
        ],
        "Entity": [
            "file",
            "view"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to restrict a group of files from view.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "restrict",
            "group",
            "files",
            "view"
        ],
        "Entity": [
            "group",
            "files",
            "view"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to set a date on which restrictions will be removed from a file, so that that I don't have to update this by hand.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "set",
            "date",
            "will",
            "file",
            "don't",
            "have",
            "update",
            "hand"
        ],
        "Entity": [
            "set",
            "date",
            "restrictions",
            "will",
            "file",
            "don't",
            "update",
            "hand"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to add restriction end date information to files, so that I can share files when they become open.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "add",
            "end",
            "date",
            "files",
            "can",
            "share",
            "files",
            "become",
            "open"
        ],
        "Entity": [
            "restriction",
            "end",
            "date",
            "information",
            "files",
            "can",
            "share",
            "files",
            "open"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to add detailed restrictions to groups of files, so that I know if and how they can be shared.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "add",
            "groups",
            "files",
            "know",
            "can"
        ],
        "Entity": [
            "restrictions",
            "groups",
            "files",
            "know",
            "how",
            "can"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to restrict access to some files by IP address, so that I can give reading room access only to certain digital files.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "restrict",
            "access",
            "files",
            "address",
            "can",
            "give",
            "room",
            "access",
            "files"
        ],
        "Entity": [
            "access",
            "files",
            "address",
            "can",
            "give",
            "reading",
            "room",
            "access",
            "digital",
            "files"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to restrict access to certain files by user, so that I can allow donor representatives to see certain files.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "restrict",
            "access",
            "files",
            "can",
            "allow",
            "see",
            "files"
        ],
        "Entity": [
            "access",
            "files",
            "user",
            "can",
            "donor",
            "representatives",
            "see",
            "files"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to know if a photo has already been scanned, so that I can license it to a researcher.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "know",
            "has",
            "been",
            "scanned",
            "can",
            "license"
        ],
        "Entity": [
            "know",
            "photo",
            "can",
            "license",
            "researcher"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to select existing rights statuses and statements, so that I can easily create uniform rights statements.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "select",
            "rights",
            "can",
            "create",
            "uniform",
            "rights"
        ],
        "Entity": [
            "rights",
            "statuses",
            "statements",
            "can",
            "uniform",
            "rights",
            "statements"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to redact information in digital files for a period of time, so that I can provide access to non-sensitive portions of a record.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "redact",
            "files",
            "time",
            "can",
            "provide",
            "access",
            "portions",
            "record"
        ],
        "Entity": [
            "information",
            "digital",
            "files",
            "period",
            "time",
            "can",
            "access",
            "portions",
            "record"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to have an online form for licensing archival material, so that the process is more transparent and some of the back and forth can be eliminated.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "have",
            "form",
            "licensing",
            "process",
            "back",
            "can",
            "eliminated"
        ],
        "Entity": [
            "form",
            "material",
            "process",
            "more",
            "back",
            "can"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to batch edit metadata about files.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "batch",
            "edit",
            "files"
        ],
        "Entity": [
            "batch",
            "edit",
            "files"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to upload a single file.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "upload",
            "single",
            "file"
        ],
        "Entity": [
            "single",
            "file"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to upload groups of files, so that I can save time.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "upload",
            "groups",
            "files",
            "can",
            "save",
            "time"
        ],
        "Entity": [
            "groups",
            "files",
            "can",
            "save",
            "time"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to automatically create access copies of files, so that I don't have to do this manually.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "create",
            "access",
            "copies",
            "files",
            "don't",
            "have"
        ],
        "Entity": [
            "access",
            "copies",
            "files",
            "don't"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to automatically generate technical metadata, so that I know the file size.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "generate",
            "know",
            "file",
            "size"
        ],
        "Entity": [
            "know",
            "file",
            "size"
        ]
    },
    {
        "Text": "#G26# As an assistant archivist, I want to upload and tag staff generated working papers, so that staff and researchers are able to easily access them.",
        "Persona": [
            " assistant archivist"
        ],
        "Action": [
            "want",
            "upload",
            "tag",
            "staff",
            "generated",
            "papers",
            "staff",
            "are",
            "access"
        ],
        "Entity": [
            "tag",
            "staff",
            "working",
            "papers",
            "staff",
            "researchers",
            "able",
            "access"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to distinguish between digital objects digitized to preservation standards and those created for access purposes only, so that I know whether I should apply preservation actions.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "distinguish",
            "objects",
            "digitized",
            "created",
            "access",
            "purposes",
            "know",
            "should",
            "apply"
        ],
        "Entity": [
            "digital",
            "objects",
            "preservation",
            "standards",
            "access",
            "purposes",
            "know",
            "preservation",
            "actions"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to link electronic versions of researchers' publications to citations, so that I can share them with other researchers.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "link",
            "can",
            "share"
        ],
        "Entity": [
            "link",
            "versions",
            "publications",
            "citations",
            "can",
            "share",
            "researchers"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to upload scans of images created while answering research requests, so that they can be used again for other research requests.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "upload",
            "scans",
            "images",
            "created",
            "while",
            "research",
            "requests",
            "can",
            "research",
            "requests"
        ],
        "Entity": [
            "scans",
            "images",
            "while",
            "research",
            "requests",
            "can",
            "research",
            "requests"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to create quality scans of images and documents, so that they can be reused.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "create",
            "scans",
            "images",
            "documents",
            "can",
            "reused"
        ],
        "Entity": [
            "quality",
            "scans",
            "images",
            "documents",
            "can"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to automatically create access derivatives of digital objects, so that I don't have to do this manually.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "create",
            "access",
            "objects",
            "don't",
            "have"
        ],
        "Entity": [
            "access",
            "derivatives",
            "digital",
            "objects",
            "don't"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to automatically assign unique identifiers to material I scan, so that I avoid potential errors.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "assign",
            "scan",
            "avoid"
        ],
        "Entity": [
            "assign",
            "unique",
            "identifiers",
            "material",
            "scan",
            "potential",
            "errors"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to automatically embed metadata in file headers, so that I avoid repetitive and easily-forgotten tasks.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "embed",
            "file",
            "avoid",
            "tasks"
        ],
        "Entity": [
            "file",
            "headers",
            "tasks"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to rotate images, so that I can orient them correctly.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "rotate",
            "images",
            "can",
            "orient"
        ],
        "Entity": [
            "images",
            "can",
            "orient"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to apply automatic contrast and level operations to a scanned file, so that I can eliminate unnecessary work.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "apply",
            "contrast",
            "level",
            "scanned",
            "file",
            "can",
            "eliminate",
            "work"
        ],
        "Entity": [
            "automatic",
            "contrast",
            "level",
            "operations",
            "file",
            "can",
            "work"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to perform contrast, level and other manipulations manually, so that I can improve on results from automated tools.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "perform",
            "contrast",
            "level",
            "can",
            "improve",
            "results",
            "automated",
            "tools"
        ],
        "Entity": [
            "contrast",
            "level",
            "manipulations",
            "can",
            "improve",
            "results",
            "tools"
        ]
    },
    {
        "Text": "#G26# As a donor representative, I want to supply incremental accruals to new and existing collections, so that material can be transferred on an ongoing basis.",
        "Persona": [
            " donor representative"
        ],
        "Action": [
            "want",
            "supply",
            "can",
            "transferred"
        ],
        "Entity": [
            "supply",
            "accruals",
            "collections",
            "material",
            "can",
            "basis"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to manage scans of archival material created for educational visits, so that find and refer to them for another visit.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "manage",
            "scans",
            "created",
            "visits",
            "find",
            "refer",
            "visit"
        ],
        "Entity": [
            "manage",
            "scans",
            "material",
            "visits",
            "find",
            "refer",
            "visit"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to manage loan documentation, including preservation photos, forms and correspondence, so that I can find it easily later.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "manage",
            "loan",
            "including",
            "forms",
            "can",
            "find"
        ],
        "Entity": [
            "manage",
            "loan",
            "documentation",
            "preservation",
            "photos",
            "forms",
            "correspondence",
            "can",
            "find"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to generate structured citation data, so that so I can cite a file in a publication.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "generate",
            "structured",
            "can",
            "cite",
            "file"
        ],
        "Entity": [
            "citation",
            "data",
            "can",
            "file",
            "publication"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to share a link to a file on social media, so that so I can show other people an interesting thing I found.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "share",
            "link",
            "file",
            "can",
            "show",
            "people",
            "found"
        ],
        "Entity": [
            "share",
            "link",
            "file",
            "social",
            "media",
            "can",
            "show",
            "people",
            "thing",
            "found"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to understand the copyright status of the image, so that I know if I can use it.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "understand",
            "copyright",
            "image",
            "know",
            "can",
            "use"
        ],
        "Entity": [
            "copyright",
            "status",
            "image",
            "know",
            "can",
            "use"
        ]
    },
    {
        "Text": "#G26# As a researcher I want clear citation information on each document, so that I can cite accurately in a publication.",
        "Persona": [
            " researcher I want clear citation information on each document"
        ],
        "Action": [
            "can",
            "cite"
        ],
        "Entity": [
            "can",
            "publication"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to share reports I've written, so that it is available to staff and researchers.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "share",
            "reports",
            "written",
            "staff"
        ],
        "Entity": [
            "share",
            "reports",
            "written",
            "staff",
            "researchers"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to download a file, so that I can use it for research without having to come to the reading room.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "download",
            "file",
            "can",
            "use",
            "research",
            "come",
            "room"
        ],
        "Entity": [
            "file",
            "can",
            "use",
            "research",
            "reading",
            "room"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to download reports, so that I can use them in immediate and future in talks and articles.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "download",
            "reports",
            "can",
            "use",
            "talks",
            "articles"
        ],
        "Entity": [
            "reports",
            "can",
            "use",
            "future",
            "talks",
            "articles"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to locate photographs and documents that I can share on social media.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "locate",
            "photographs",
            "documents",
            "can",
            "share"
        ],
        "Entity": [
            "photographs",
            "documents",
            "can",
            "share",
            "social",
            "media"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to request analog versions of digital objects, so that I can view them in the reading room.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "request",
            "objects",
            "can",
            "view",
            "room"
        ],
        "Entity": [
            "request",
            "analog",
            "versions",
            "digital",
            "objects",
            "can",
            "view",
            "reading",
            "room"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to order copies of photos, so that I can use them in a publication.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "order",
            "copies",
            "can",
            "use"
        ],
        "Entity": [
            "order",
            "copies",
            "photos",
            "can",
            "use",
            "publication"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to receive a notification if something I request in the reading room or for duplication is already digitized, so that I don't have to put in that request.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "receive",
            "request",
            "room",
            "digitized",
            "don't",
            "have",
            "put",
            "request"
        ],
        "Entity": [
            "notification",
            "something",
            "request",
            "reading",
            "room",
            "duplication",
            "don't",
            "put",
            "request"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to make information about rights available to researchers and donors, so that they know what they can do with images.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "make",
            "rights",
            "know",
            "can",
            "images"
        ],
        "Entity": [
            "make",
            "information",
            "rights",
            "researchers",
            "donors",
            "know",
            "can",
            "images"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to ensure that emails sent about specific objects contain accurate citation information, so that I can confirm which object is being referred to.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "ensure",
            "sent",
            "objects",
            "contain",
            "can",
            "confirm",
            "object",
            "referred"
        ],
        "Entity": [
            "ensure",
            "specific",
            "objects",
            "citation",
            "information",
            "can",
            "object",
            "being"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to stream audio and video files in my web browser.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "stream",
            "files",
            "web"
        ],
        "Entity": [
            "stream",
            "audio",
            "video",
            "files",
            "web",
            "browser"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to export descriptive data in a common format, so that I can use text mining tools on it.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "export",
            "format",
            "can",
            "use",
            "tools"
        ],
        "Entity": [
            "export",
            "data",
            "common",
            "format",
            "can",
            "use",
            "text",
            "mining",
            "tools"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to track use of a photo, so that I know if I've sent it to a researcher before.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "track",
            "use",
            "know",
            "sent"
        ],
        "Entity": [
            "track",
            "use",
            "photo",
            "know",
            "researcher"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to see what a particular user has downloaded, so that I can track use of assets.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "see",
            "has",
            "can",
            "track",
            "use"
        ],
        "Entity": [
            "see",
            "particular",
            "user",
            "can",
            "track",
            "use",
            "assets"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to provide access to digital copies of unprocessed material, so that donors can access things they have given us.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "provide",
            "access",
            "copies",
            "can",
            "access",
            "have",
            "given"
        ],
        "Entity": [
            "access",
            "digital",
            "copies",
            "material",
            "donors",
            "can",
            "access",
            "things",
            "given"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to make as much archival material as possible available for use, so that I can fulfill the RAC's mission.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "make",
            "use",
            "can",
            "fulfill",
            "mission"
        ],
        "Entity": [
            "make",
            "much",
            "material",
            "possible",
            "use",
            "can",
            "mission"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to use archival content on the RAC website, so that I can integrate our collections into our web presence.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "use",
            "content",
            "can",
            "integrate",
            "web"
        ],
        "Entity": [
            "use",
            "content",
            "can",
            "collections",
            "web",
            "presence"
        ]
    },
    {
        "Text": "#G26# As a donor representative, I want to access the descriptive information about the images scanned for my institutions needs.",
        "Persona": [
            " donor representative"
        ],
        "Action": [
            "want",
            "access",
            "images",
            "scanned",
            "needs"
        ],
        "Entity": [
            "access",
            "information",
            "images",
            "institutions",
            "needs"
        ]
    },
    {
        "Text": "#G26# As a donor representative, I want to look at images that have been scanned from my collection, so that so that I can use them in my institutions exhibits, reports etc.",
        "Persona": [
            " donor representative"
        ],
        "Action": [
            "want",
            "look",
            "images",
            "have",
            "been",
            "scanned",
            "can",
            "use",
            "exhibits",
            "reports"
        ],
        "Entity": [
            "look",
            "images",
            "collection",
            "can",
            "use",
            "institutions",
            "exhibits",
            "reports"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to search all files by keyword.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "search",
            "files"
        ],
        "Entity": [
            "search",
            "all",
            "files",
            "keyword"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to search by keyword, so that I can learn what already exists digitally and avoid placing additional duplication requests.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "search",
            "can",
            "learn",
            "exists",
            "avoid",
            "placing",
            "requests"
        ],
        "Entity": [
            "search",
            "keyword",
            "can",
            "duplication",
            "requests"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to see common material across collections, so that so I can prepare a comprehensive analysis.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "see",
            "can",
            "prepare"
        ],
        "Entity": [
            "see",
            "common",
            "material",
            "collections",
            "can",
            "comprehensive",
            "analysis"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to browse through files in a collection.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "browse",
            "files"
        ],
        "Entity": [
            "browse",
            "files",
            "collection"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to browse through files in a collection.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "browse",
            "files"
        ],
        "Entity": [
            "browse",
            "files",
            "collection"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to search all files by keyword.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "search",
            "files"
        ],
        "Entity": [
            "search",
            "all",
            "files",
            "keyword"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to upload inventories, so that our donor representatives have an easier time requesting their material.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "upload",
            "inventories",
            "have",
            "time"
        ],
        "Entity": [
            "inventories",
            "donor",
            "representatives",
            "time",
            "material"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to search by tag, so that it makes finding particular photographs easier.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "search",
            "tag",
            "makes",
            "finding",
            "photographs"
        ],
        "Entity": [
            "search",
            "tag",
            "makes",
            "finding",
            "particular",
            "photographs"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to access the digital files on the X-drive, so that I can use them.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "access",
            "files",
            "can",
            "use"
        ],
        "Entity": [
            "access",
            "digital",
            "files",
            "can",
            "use"
        ]
    },
    {
        "Text": "#G26# As an assistant archivist, I want to easily access interdepartmental forms.",
        "Persona": [
            " assistant archivist"
        ],
        "Action": [
            "want",
            "access",
            "forms"
        ],
        "Entity": [
            "access",
            "forms"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to have electronic versions of the collection files available for staff use, so that I increase accessibility and I do not lose the original files.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "have",
            "files",
            "staff",
            "use",
            "increase",
            "lose",
            "files"
        ],
        "Entity": [
            "versions",
            "collection",
            "files",
            "staff",
            "use",
            "increase",
            "accessibility",
            "original",
            "files"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to be able to search across photo collection images, so that I can prepare presentations.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "search",
            "images",
            "can",
            "prepare"
        ],
        "Entity": [
            "able",
            "search",
            "photo",
            "collection",
            "images",
            "can",
            "presentations"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to search using structured data, so that I can find everything relevant to my inquiry across collections.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "search",
            "using",
            "structured",
            "can",
            "find"
        ],
        "Entity": [
            "search",
            "using",
            "data",
            "can",
            "find",
            "inquiry",
            "collections"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to access tagged working papers, so that my research process is better informed.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "access",
            "tagged",
            "papers",
            "research",
            "process",
            "better"
        ],
        "Entity": [
            "access",
            "working",
            "papers",
            "research",
            "process",
            "better"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to access educational outreach materials, so that I can make connections with institutions.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "access",
            "outreach",
            "can",
            "make"
        ],
        "Entity": [
            "access",
            "outreach",
            "materials",
            "can",
            "make",
            "connections",
            "institutions"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to have accurate cross-collection citation information, so that I can find materials again.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "find"
        ],
        "Entity": [
            "citation",
            "information",
            "can",
            "find",
            "materials"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to access digitized archival materials without mediation, so that I can decide what, I want to look at.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "access",
            "digitized",
            "can",
            "decide",
            "want",
            "look"
        ],
        "Entity": [
            "access",
            "materials",
            "mediation",
            "can",
            "look"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to distinguish between images scanned in color or black and white, so that I know whether or not these images meet publication requirements.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "distinguish",
            "images",
            "scanned",
            "color",
            "black",
            "white",
            "know",
            "images",
            "meet"
        ],
        "Entity": [
            "images",
            "color",
            "black",
            "white",
            "know",
            "images",
            "meet",
            "publication",
            "requirements"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to ask a question about a specific file, so that I can find out more information.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "ask",
            "question",
            "file",
            "can",
            "find",
            "out"
        ],
        "Entity": [
            "question",
            "specific",
            "file",
            "can",
            "find",
            "out",
            "more",
            "information"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to search OCRed text in all available digitized textual documents, so that I can more efficiently locate digitized documents relevant to my research.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "search",
            "digitized",
            "documents",
            "can",
            "locate",
            "digitized",
            "documents",
            "research"
        ],
        "Entity": [
            "search",
            "text",
            "all",
            "documents",
            "can",
            "more",
            "documents",
            "research"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to know the date on which something was digitized, so that I know if it's been digitized since I last looked.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "know",
            "date",
            "was",
            "digitized",
            "know",
            "been",
            "digitized",
            "last"
        ],
        "Entity": [
            "know",
            "date",
            "something",
            "know",
            "last"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to keyword search across all of an RF program officer's scanned diaries, rather than having to search each scanned diary segment separately, so that I can more efficiently locate diary entries relevant to my research.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "search",
            "program",
            "scanned",
            "search",
            "scanned",
            "segment",
            "can",
            "locate",
            "research"
        ],
        "Entity": [
            "keyword",
            "search",
            "all",
            "program",
            "diaries",
            "search",
            "diary",
            "segment",
            "can",
            "more",
            "diary",
            "entries",
            "research"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to access inventories for unprocessed collections, so that I can provide reference services to donors.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "access",
            "inventories",
            "can",
            "provide",
            "reference",
            "services"
        ],
        "Entity": [
            "access",
            "inventories",
            "collections",
            "can",
            "reference",
            "services",
            "donors"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to view thumbnails of photos, so that I can make a selection of which one I want to license.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "view",
            "can",
            "make",
            "want",
            "license"
        ],
        "Entity": [
            "view",
            "thumbnails",
            "photos",
            "can",
            "make",
            "selection",
            "one",
            "license"
        ]
    },
    {
        "Text": "#G26# As a researcher, I want to know when only part of a folder has been digitized, so that I know if I am seeing everything or only a portion.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "know",
            "part",
            "has",
            "been",
            "digitized",
            "know",
            "portion"
        ],
        "Entity": [
            "know",
            "part",
            "folder",
            "know",
            "seeing",
            "portion"
        ]
    },
    {
        "Text": "#G26# As a donor representative, I want to see thumbnails of images, so that I can select which one I want.",
        "Persona": [
            " donor representative"
        ],
        "Action": [
            "want",
            "see",
            "images",
            "can",
            "select",
            "want"
        ],
        "Entity": [
            "see",
            "thumbnails",
            "images",
            "can",
            "one"
        ]
    },
    {
        "Text": "#G26# As an researcher, I want to view film clips, so that I can see excerpts of films.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "view",
            "film",
            "clips",
            "can",
            "see",
            "excerpts",
            "films"
        ],
        "Entity": [
            "view",
            "film",
            "clips",
            "can",
            "see",
            "excerpts",
            "films"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to search images by photographer.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "search",
            "images"
        ],
        "Entity": [
            "search",
            "images",
            "photographer"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to search images by people represented in them.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "search",
            "images",
            "people"
        ],
        "Entity": [
            "search",
            "images",
            "people"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to search images by place the photo was taken.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "search",
            "images",
            "place",
            "was",
            "taken"
        ],
        "Entity": [
            "search",
            "images",
            "place",
            "photo"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to search images by rights.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "search",
            "images",
            "rights"
        ],
        "Entity": [
            "search",
            "images",
            "rights"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to search index cards and other non-public finding aids, so that I can provide better research assistance.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "search",
            "index",
            "cards",
            "finding",
            "aids",
            "can",
            "provide",
            "better",
            "research"
        ],
        "Entity": [
            "search",
            "index",
            "cards",
            "finding",
            "aids",
            "can",
            "better",
            "research",
            "assistance"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to view collection files, so that I can gain background information for processing a collection.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "view",
            "files",
            "can",
            "gain",
            "background"
        ],
        "Entity": [
            "view",
            "collection",
            "files",
            "can",
            "gain",
            "background",
            "information",
            "processing",
            "collection"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to view physical locations for non-archival material, so that I can provide research services to donors.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "view",
            "can",
            "provide",
            "research",
            "services"
        ],
        "Entity": [
            "view",
            "physical",
            "locations",
            "material",
            "can",
            "research",
            "services",
            "donors"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to find files that cannot be made publicly available, so that I can easily access everything that's been digitized.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "find",
            "files",
            "cannot",
            "made",
            "can",
            "access",
            "been",
            "digitized"
        ],
        "Entity": [
            "find",
            "files",
            "can",
            "access"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to access metadata and visual representations of index cards, so that I can use that information to assist researchers.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "access",
            "index",
            "cards",
            "can",
            "use",
            "assist"
        ],
        "Entity": [
            "access",
            "visual",
            "representations",
            "index",
            "cards",
            "can",
            "use",
            "information",
            "assist",
            "researchers"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to search individual material types.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "search",
            "types"
        ],
        "Entity": [
            "search",
            "individual",
            "material",
            "types"
        ]
    },
    {
        "Text": "#G26# As an archivist, I want to search images by uploading an image, so that so I can find images when i don't have any metadata.",
        "Persona": [
            " archivist"
        ],
        "Action": [
            "want",
            "search",
            "images",
            "image",
            "can",
            "find",
            "images",
            "don't",
            "have"
        ],
        "Entity": [
            "search",
            "images",
            "image",
            "can",
            "find",
            "images",
            "don't"
        ]
    },
    {
        "Text": "#G26# As an administrator, I want to create user groups, so that I can control user permissions.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "create",
            "groups",
            "can",
            "control"
        ],
        "Entity": [
            "user",
            "groups",
            "can",
            "control",
            "user",
            "permissions"
        ]
    },
    {
        "Text": "#G26# As an administrator, I want to create user roles, so that I can group users by role.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "create",
            "can",
            "group"
        ],
        "Entity": [
            "user",
            "roles",
            "can",
            "group",
            "users",
            "role"
        ]
    },
    {
        "Text": "#G26# As an administrator, I want to assign RAC staff to different user groups, so that I can control read/write access.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "assign",
            "staff",
            "groups",
            "can",
            "control",
            "access"
        ],
        "Entity": [
            "assign",
            "staff",
            "user",
            "groups",
            "can",
            "control",
            "access"
        ]
    },
    {
        "Text": "#G26# As an administrator, I want to assign rights to user groups or roles, so that I can control what users can and can't do.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "assign",
            "rights",
            "groups",
            "can",
            "control",
            "can"
        ],
        "Entity": [
            "assign",
            "rights",
            "user",
            "groups",
            "roles",
            "can",
            "control",
            "users",
            "can"
        ]
    },
    {
        "Text": "#G26# As an administrator, I want to allow users to log in using Active Directory credentials, so that I don't have to manage another set of usernames and passwords.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "allow",
            "log",
            "using",
            "don't",
            "have",
            "manage",
            "set"
        ],
        "Entity": [
            "users",
            "log",
            "using",
            "active",
            "directory",
            "credentials",
            "don't",
            "manage",
            "set",
            "passwords"
        ]
    },
    {
        "Text": "#G26# As an administrator, I want to have researchers reset their own passwords, so that I don't have to send passwords in cleartext.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "have",
            "reset",
            "own",
            "don't",
            "have",
            "send"
        ],
        "Entity": [
            "researchers",
            "reset",
            "passwords",
            "don't",
            "send",
            "passwords"
        ]
    },
    {
        "Text": "#G26# As an administrator, I want to limit who can see certain metadata fields, so that I can show or hide things from display based on user groups.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "limit",
            "can",
            "see",
            "fields",
            "can",
            "show",
            "hide",
            "display",
            "based",
            "groups"
        ],
        "Entity": [
            "limit",
            "who",
            "can",
            "see",
            "fields",
            "can",
            "show",
            "hide",
            "things",
            "display",
            "user",
            "groups"
        ]
    },
    {
        "Text": "#G27# As a faculty member, I want to access a collection within the repository, so that I can obtain research materials.",
        "Persona": [
            " faculty member"
        ],
        "Action": [
            "want",
            "access",
            "can",
            "obtain",
            "research"
        ],
        "Entity": [
            "access",
            "collection",
            "repository",
            "can",
            "research",
            "materials"
        ]
    },
    {
        "Text": "#G27# As a faculty member, I want to direct students to an item within the repository, so that I can facilitate my teaching (i.e. desires ability to link to content).",
        "Persona": [
            " faculty member"
        ],
        "Action": [
            "want",
            "direct",
            "item",
            "can",
            "facilitate",
            "desires",
            "link"
        ],
        "Entity": [
            "students",
            "item",
            "repository",
            "can",
            "teaching",
            "desires",
            "ability",
            "link"
        ]
    },
    {
        "Text": "#G27# As a Cornell faculty member, I want to upload data to the repository and associate it with a publication, so that I receive attribution for my data as well as my publications.",
        "Persona": [
            " Cornell faculty member"
        ],
        "Action": [
            "want",
            "upload",
            "associate",
            "receive",
            "well"
        ],
        "Entity": [
            "data",
            "repository",
            "associate",
            "publication",
            "attribution",
            "data",
            "well",
            "publications"
        ]
    },
    {
        "Text": "#G27# As a patron, I want to know which reports/datasets are coming out when, so that I can access latest report/dataset.",
        "Persona": [
            " patron"
        ],
        "Action": [
            "want",
            "know",
            "are",
            "out",
            "can",
            "access"
        ],
        "Entity": [
            "know",
            "coming",
            "out",
            "can",
            "access",
            "latest"
        ]
    },
    {
        "Text": "#G27# As a patron, I want to select/deselect reports/datasets to be emailed, possibly many at one time, when new versions are available.",
        "Persona": [
            " patron"
        ],
        "Action": [
            "want",
            "time",
            "are"
        ],
        "Entity": [
            "many",
            "one",
            "time",
            "versions"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to mark report/dataset not to be emailed/viewable due to error being discovered.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "mark"
        ],
        "Entity": [
            "mark",
            "due",
            "error",
            "being"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to manage report/dataset name changes so patrons are able to find historic reports that have a different name from current report.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "manage",
            "name",
            "changes",
            "are",
            "find",
            "reports",
            "have",
            "name",
            "report"
        ],
        "Entity": [
            "manage",
            "name",
            "changes",
            "patrons",
            "able",
            "find",
            "reports",
            "name",
            "current",
            "report"
        ]
    },
    {
        "Text": "#G27# As a Cornell faculty member, I want to see clearly what reuse rights I have to files discovered in the repository, so that I know how I can reuse them.",
        "Persona": [
            " Cornell faculty member"
        ],
        "Action": [
            "want",
            "see",
            "reuse",
            "rights",
            "have",
            "files",
            "know",
            "can",
            "reuse"
        ],
        "Entity": [
            "see",
            "rights",
            "files",
            "repository",
            "know",
            "how",
            "can"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to apply or remove an access embargo to an item when asked to do this by an item author.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "apply",
            "remove",
            "access",
            "embargo",
            "item",
            "item",
            "author"
        ],
        "Entity": [
            "remove",
            "access",
            "embargo",
            "item",
            "item",
            "author"
        ]
    },
    {
        "Text": "#G27# As a researcher, I want to stay up to date on research related to a given topic at Cornell, including those in other departments/schools, so that my own research remains relevant and innovative.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "stay",
            "date",
            "research",
            "given",
            "including",
            "own",
            "research",
            "remains"
        ],
        "Entity": [
            "stay",
            "date",
            "research",
            "given",
            "topic",
            "research",
            "remains"
        ]
    },
    {
        "Text": "#G27# As a faculty member, I want to easily collect my publications -- both those within the repository and without -- into a single online access point, so that I can raise the profile of my work.",
        "Persona": [
            " faculty member"
        ],
        "Action": [
            "want",
            "collect",
            "single",
            "access",
            "point",
            "can",
            "raise",
            "profile",
            "work"
        ],
        "Entity": [
            "collect",
            "publications",
            "repository",
            "single",
            "access",
            "point",
            "can",
            "raise",
            "profile",
            "work"
        ]
    },
    {
        "Text": "#G27# As a crossdeptprojteammember, I want to have a better place to collect and share project materials, with a range of organization/tagging and access options, including private (internal group use only), University and public.",
        "Persona": [
            " crossdeptprojteammember"
        ],
        "Action": [
            "want",
            "have",
            "better",
            "place",
            "collect",
            "share",
            "project",
            "range",
            "access",
            "including",
            "group",
            "use"
        ],
        "Entity": [
            "better",
            "place",
            "collect",
            "share",
            "project",
            "materials",
            "range",
            "access",
            "options",
            "private",
            "group",
            "use",
            "university",
            "public"
        ]
    },
    {
        "Text": "#G27# As a Cornell faculty member, I want to upload data and provide a cut and paste formatted citation for people who use it, so that I receive proper attribution for my work.",
        "Persona": [
            " Cornell faculty member"
        ],
        "Action": [
            "want",
            "upload",
            "provide",
            "cut",
            "paste",
            "formatted",
            "people",
            "use",
            "receive",
            "work"
        ],
        "Entity": [
            "data",
            "cut",
            "paste",
            "citation",
            "people",
            "who",
            "use",
            "proper",
            "attribution",
            "work"
        ]
    },
    {
        "Text": "#G27# As a patron, I want to view/upload content in multiple formats, including old formats such as Lotus Works.",
        "Persona": [
            " patron"
        ],
        "Action": [
            "want",
            "content",
            "formats",
            "including",
            "formats",
            "works"
        ],
        "Entity": [
            "content",
            "multiple",
            "formats",
            "old",
            "formats",
            "lotus",
            "works"
        ]
    },
    {
        "Text": "#G27# As a Cornell faculty member, I want to search the repository and browse through its contents on my phone, so that I can check things on the go.",
        "Persona": [
            " Cornell faculty member"
        ],
        "Action": [
            "want",
            "search",
            "browse",
            "contents",
            "phone",
            "can",
            "check"
        ],
        "Entity": [
            "search",
            "repository",
            "browse",
            "contents",
            "phone",
            "can",
            "check",
            "things"
        ]
    },
    {
        "Text": "#G27# As a Cornell faculty member, I want to login remotely to the repository using Shibboleth, so that I can get remote access to Cornell campus-only content.",
        "Persona": [
            " Cornell faculty member"
        ],
        "Action": [
            "want",
            "using",
            "can",
            "get",
            "access",
            "content"
        ],
        "Entity": [
            "repository",
            "using",
            "shibboleth",
            "can",
            "remote",
            "access",
            "content"
        ]
    },
    {
        "Text": "#G27# As a Cornell faculty member, I want to have some control over how items within my collection sort in collection contents lists, so that I can control how my work is presented.",
        "Persona": [
            " Cornell faculty member"
        ],
        "Action": [
            "want",
            "have",
            "control",
            "items",
            "sort",
            "contents",
            "lists",
            "can",
            "control",
            "work"
        ],
        "Entity": [
            "control",
            "over",
            "how",
            "items",
            "collection",
            "sort",
            "collection",
            "contents",
            "lists",
            "can",
            "control",
            "how",
            "work"
        ]
    },
    {
        "Text": "#G27# As an administrator, I want to be able to use systems such as Symplectic Elements and Activity Insight to properly track faculty scholarly output in the repositories, so that I can facilitate personnel decisions.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "use",
            "track",
            "output",
            "can",
            "facilitate"
        ],
        "Entity": [
            "able",
            "use",
            "systems",
            "elements",
            "activity",
            "insight",
            "track",
            "faculty",
            "output",
            "repositories",
            "can",
            "personnel",
            "decisions"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to access useful and comprehensive usage statistics and analytics, including altmetrics, at the repository, collection, author, and item level, so that I can assess the results of this service.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "access",
            "including",
            "author",
            "item",
            "level",
            "can",
            "assess",
            "results",
            "service"
        ],
        "Entity": [
            "access",
            "useful",
            "comprehensive",
            "usage",
            "statistics",
            "analytics",
            "repository",
            "collection",
            "author",
            "item",
            "level",
            "can",
            "results",
            "service"
        ]
    },
    {
        "Text": "#G27# As an administrator, I want to see comprehensive tracking statistics that can be presented to faculty in a digestible way, so that I can increase buy-in for contributing their work.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "see",
            "can",
            "can",
            "increase",
            "buy-in",
            "contributing",
            "work"
        ],
        "Entity": [
            "see",
            "comprehensive",
            "tracking",
            "statistics",
            "can",
            "faculty",
            "way",
            "can",
            "increase",
            "work"
        ]
    },
    {
        "Text": "#G27# As a Cornell faculty member, I want to be notified if someone downloads any of my items or files, so that I can follow usage and see what others are most interested in reading.",
        "Persona": [
            " Cornell faculty member"
        ],
        "Action": [
            "want",
            "notified",
            "downloads",
            "items",
            "files",
            "can",
            "follow",
            "see",
            "are"
        ],
        "Entity": [
            "someone",
            "items",
            "files",
            "can",
            "follow",
            "usage",
            "see",
            "most",
            "reading"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to see list of subscribers for specified report in order research missing report complaints.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "see",
            "list",
            "specified",
            "report",
            "order",
            "research",
            "report"
        ],
        "Entity": [
            "see",
            "list",
            "subscribers",
            "report",
            "order",
            "research",
            "report",
            "complaints"
        ]
    },
    {
        "Text": "#G27# As an administrator, I want to disseminate the aforementioned works in a digital space that is strongly branded, so that I can make sure my school is credited for the work.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "disseminate",
            "works",
            "space",
            "can",
            "make",
            "school",
            "work"
        ],
        "Entity": [
            "works",
            "digital",
            "space",
            "can",
            "make",
            "school",
            "work"
        ]
    },
    {
        "Text": "#G27# As a faculty member, I want to upload my scholarly work to the repository, so that I can have a persistent URL that can be used for my personal web page and CV.",
        "Persona": [
            " faculty member"
        ],
        "Action": [
            "want",
            "upload",
            "work",
            "can",
            "have",
            "can",
            "web",
            "page"
        ],
        "Entity": [
            "work",
            "repository",
            "can",
            "can",
            "personal",
            "web",
            "page"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to create collections which highlight rare, archival, or endangered material, so that I can preserve and provide access to this material.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "create",
            "highlight",
            "can",
            "preserve",
            "provide",
            "access"
        ],
        "Entity": [
            "collections",
            "highlight",
            "material",
            "can",
            "preserve",
            "access",
            "material"
        ]
    },
    {
        "Text": "#G27# As an Extension Administrator, I want to have easy, well documented and supported workflows that can be easily passed on to others when she/others retire, so that continuity can be maintained.",
        "Persona": [
            " Extension Administrator"
        ],
        "Action": [
            "want",
            "have",
            "easy",
            "well",
            "can",
            "retire",
            "can"
        ],
        "Entity": [
            "well",
            "can",
            "continuity",
            "can"
        ]
    },
    {
        "Text": "#G27# As a faculty member, I want to maintain versioning of Extension brochures, FAQs, etc., so that only the most current are used/adapted by other CCE Educators in their work.",
        "Persona": [
            " faculty member"
        ],
        "Action": [
            "want",
            "maintain",
            "are",
            "work"
        ],
        "Entity": [
            "extension",
            "brochures",
            "most",
            "current",
            "educators",
            "work"
        ]
    },
    {
        "Text": "#G27# As a Cornell faculty member, I want to upload a data file and put a CC-By or CC0 license on it, so that my licensing desires are clearly stated.",
        "Persona": [
            " Cornell faculty member"
        ],
        "Action": [
            "want",
            "upload",
            "file",
            "put",
            "license",
            "licensing",
            "desires",
            "are"
        ],
        "Entity": [
            "data",
            "file",
            "put",
            "license",
            "desires"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to be able to tell the researchers I'm helping with DMPs that Cornell has a repository system I can use for archiving and sharing results of their research, so that I can easily meet the needs of funder DMP requirements.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "tell",
            "has",
            "can",
            "use",
            "results",
            "research",
            "can",
            "meet",
            "needs"
        ],
        "Entity": [
            "able",
            "tell",
            "researchers",
            "helping",
            "repository",
            "system",
            "can",
            "use",
            "sharing",
            "results",
            "research",
            "can",
            "meet",
            "needs",
            "requirements"
        ]
    },
    {
        "Text": "#G27# As a Cornell faculty member, I want to create a collection for my documents, or my organization's documents, and apply some distinctive branding to that collection, so that I can promote my work, or that of my organization.",
        "Persona": [
            " Cornell faculty member"
        ],
        "Action": [
            "want",
            "create",
            "documents",
            "documents",
            "apply",
            "can",
            "promote",
            "work"
        ],
        "Entity": [
            "collection",
            "documents",
            "documents",
            "branding",
            "collection",
            "can",
            "work",
            "organization"
        ]
    },
    {
        "Text": "#G27# As a Cornell faculty member, I want to easily find all the items in the repository that I have authored, by searching on my name (author name authority and/or identification issue), because I keeps my publications in the repository up-to-date and points people tithe repository.",
        "Persona": [
            " Cornell faculty member"
        ],
        "Action": [
            "want",
            "find",
            "items",
            "have",
            "name",
            "name",
            "keeps",
            "points",
            "people",
            "tithe"
        ],
        "Entity": [
            "find",
            "all",
            "items",
            "repository",
            "searching",
            "name",
            "name",
            "authority",
            "identification",
            "keeps",
            "publications",
            "repository",
            "points",
            "people",
            "tithe",
            "repository"
        ]
    },
    {
        "Text": "#G27# As a Cornell faculty member, I want to see items I have deposited in the repository appear high up in Google search results, because that's my ticket to stardom.",
        "Persona": [
            " Cornell faculty member"
        ],
        "Action": [
            "want",
            "see",
            "items",
            "have",
            "appear",
            "search",
            "results",
            "ticket"
        ],
        "Entity": [
            "see",
            "items",
            "repository",
            "high",
            "search",
            "results",
            "ticket",
            "stardom"
        ]
    },
    {
        "Text": "#G27# As a repository support team member, I want to alias (or map) an item from one collection to another (so the item will appear to belong to both collections), because the collection owner has asked them to.",
        "Persona": [
            " repository support team member"
        ],
        "Action": [
            "want",
            "item",
            "item",
            "will",
            "appear",
            "belong",
            "has"
        ],
        "Entity": [
            "alias",
            "item",
            "one",
            "collection",
            "item",
            "will",
            "collection",
            "owner"
        ]
    },
    {
        "Text": "#G27# As a researcher, I want to discover items in the repository through the library's discovery system and Google, so that I can facilitate my easy use of the content.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "discover",
            "items",
            "can",
            "facilitate",
            "easy",
            "use",
            "content"
        ],
        "Entity": [
            "items",
            "repository",
            "discovery",
            "system",
            "can",
            "use",
            "content"
        ]
    },
    {
        "Text": "#G27# As a researcher, I want to see descriptive metadata for the item whether I come to the item through the repository or directly to the PDF, so that I can correctly identify the source of the content.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "see",
            "item",
            "come",
            "item",
            "can",
            "identify",
            "content"
        ],
        "Entity": [
            "see",
            "item",
            "item",
            "repository",
            "can",
            "source",
            "content"
        ]
    },
    {
        "Text": "#G27# As a researcher, I want to contact the author of a work that interests me, so that I can learn more about my research.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "contact",
            "author",
            "work",
            "interests",
            "can",
            "learn",
            "research"
        ],
        "Entity": [
            "contact",
            "author",
            "work",
            "interests",
            "can",
            "more",
            "research"
        ]
    },
    {
        "Text": "#G27# As a researcher, I want to receive updates when new works are published in a given collection or by a given author, so that I can discover more of their work.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "receive",
            "updates",
            "works",
            "are",
            "given",
            "given",
            "author",
            "can",
            "discover",
            "work"
        ],
        "Entity": [
            "updates",
            "works",
            "given",
            "collection",
            "given",
            "author",
            "can",
            "more",
            "work"
        ]
    },
    {
        "Text": "#G27# As a researcher, I want to search within a repository or collection in an effective manner, including searching within subsets of a given collection, so that I can facilitate my use of the collection.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "search",
            "including",
            "given",
            "can",
            "facilitate",
            "use"
        ],
        "Entity": [
            "search",
            "repository",
            "collection",
            "manner",
            "searching",
            "subsets",
            "given",
            "collection",
            "can",
            "use",
            "collection"
        ]
    },
    {
        "Text": "#G27# As an academicresearcher, I want to find the works of a particular author in one easily sortable spot, so that I can see the evolution of their scholarship over time.",
        "Persona": [
            " academicresearcher"
        ],
        "Action": [
            "want",
            "find",
            "works",
            "author",
            "spot",
            "can",
            "see",
            "time"
        ],
        "Entity": [
            "find",
            "works",
            "particular",
            "author",
            "one",
            "spot",
            "can",
            "see",
            "evolution",
            "scholarship",
            "over",
            "time"
        ]
    },
    {
        "Text": "#G27# As an academicresearcher, I want to the thesis paper of an influential judge or legal thinker to gain insight into how their initial scholarship got started.",
        "Persona": [
            " academicresearcher"
        ],
        "Action": [
            "want",
            "paper",
            "judge",
            "gain",
            "initial",
            "got"
        ],
        "Entity": [
            "thesis",
            "paper",
            "judge",
            "thinker",
            "gain",
            "insight",
            "how",
            "initial",
            "scholarship"
        ]
    },
    {
        "Text": "#G27# As a patron, I want to search for report/dataset with keywords or a partial or complete title to locate needed report/dataset.",
        "Persona": [
            " patron"
        ],
        "Action": [
            "want",
            "search",
            "complete",
            "title",
            "locate"
        ],
        "Entity": [
            "search",
            "keywords",
            "partial",
            "title"
        ]
    },
    {
        "Text": "#G27# As a patron, I want to browse content by author or subject area to locate needed resources.",
        "Persona": [
            " patron"
        ],
        "Action": [
            "want",
            "browse",
            "content",
            "author",
            "subject",
            "locate"
        ],
        "Entity": [
            "browse",
            "content",
            "author",
            "subject",
            "area",
            "resources"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to manage subject classifications for ease of patron browsing and searching.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "manage",
            "subject",
            "ease",
            "browsing"
        ],
        "Entity": [
            "manage",
            "subject",
            "classifications",
            "ease",
            "patron",
            "browsing",
            "searching"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to manage customizable relationship groups in support of patron see also option.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "manage",
            "groups",
            "support",
            "see"
        ],
        "Entity": [
            "manage",
            "relationship",
            "groups",
            "support",
            "patron",
            "see",
            "option"
        ]
    },
    {
        "Text": "#G27# As a Cornell faculty member, I want to search for the dissertations in the repository for which I have been a thesis committee member, to quickly find work by a former student.",
        "Persona": [
            " Cornell faculty member"
        ],
        "Action": [
            "want",
            "search",
            "have",
            "been",
            "find",
            "work"
        ],
        "Entity": [
            "search",
            "dissertations",
            "repository",
            "thesis",
            "committee",
            "member",
            "find",
            "work",
            "former",
            "student"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to make digital items held in trusted external system searchable within our system, so that I can provide seamless access to disparate collections.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "make",
            "items",
            "held",
            "can",
            "provide",
            "access"
        ],
        "Entity": [
            "make",
            "digital",
            "items",
            "external",
            "system",
            "system",
            "can",
            "access",
            "disparate",
            "collections"
        ]
    },
    {
        "Text": "#G27# As a researcher, I want to have information that will help me identify other faculty I might partner/collaborate with.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "have",
            "will",
            "help",
            "identify",
            "might"
        ],
        "Entity": [
            "information",
            "will",
            "help",
            "faculty",
            "might"
        ]
    },
    {
        "Text": "#G27# As an externaluser, I want to easily find and access research and educational materials from Cornell faculty related to a particular topic, which I can use to develop stronger research/evidence based programming, grant proposals, community policy, or business practices.",
        "Persona": [
            " externaluser"
        ],
        "Action": [
            "want",
            "find",
            "access",
            "research",
            "can",
            "use",
            "develop",
            "based",
            "programming",
            "grant",
            "practices"
        ],
        "Entity": [
            "find",
            "access",
            "research",
            "materials",
            "faculty",
            "particular",
            "topic",
            "can",
            "use",
            "programming",
            "grant",
            "proposals",
            "community",
            "policy",
            "business",
            "practices"
        ]
    },
    {
        "Text": "#G27# As a student, I want to learn who at Cornell has or is engaged in research related to a particular topic, so that I can decide if I would like to pursue studies/research at Cornell.",
        "Persona": [
            " student"
        ],
        "Action": [
            "want",
            "learn",
            "has",
            "research",
            "can",
            "decide",
            "would",
            "like",
            "pursue"
        ],
        "Entity": [
            "who",
            "research",
            "particular",
            "topic",
            "can",
            "like"
        ]
    },
    {
        "Text": "#G27# As a student, I want to learn who at Cornell has or is engaged in research related to a particular topic, so that I can find an appropriate advisor, choose which courses to enroll in, and identify work/internship opportunities.",
        "Persona": [
            " student"
        ],
        "Action": [
            "want",
            "learn",
            "has",
            "research",
            "can",
            "find",
            "appropriate",
            "choose",
            "courses",
            "enroll",
            "identify"
        ],
        "Entity": [
            "who",
            "research",
            "particular",
            "topic",
            "can",
            "find",
            "advisor",
            "courses",
            "opportunities"
        ]
    },
    {
        "Text": "#G27# As a teachingfacultymember, I want to identify timely and relevant research suitable for use in my curriculum, and be notified of new research/content.",
        "Persona": [
            " teachingfacultymember"
        ],
        "Action": [
            "want",
            "identify",
            "research",
            "use",
            "notified"
        ],
        "Entity": [
            "research",
            "use",
            "curriculum"
        ]
    },
    {
        "Text": "#G27# As a patron, I want to view multiple versions of a report/dataset to get both timely and historical information.",
        "Persona": [
            " patron"
        ],
        "Action": [
            "want",
            "view",
            "get"
        ],
        "Entity": [
            "view",
            "multiple",
            "versions",
            "information"
        ]
    },
    {
        "Text": "#G27# As a faculty member, I want to upload my scholarly work to the repository, so that I can reach a non-academic audience, expand my influence within my academic community, and use it for teaching.",
        "Persona": [
            " faculty member"
        ],
        "Action": [
            "want",
            "upload",
            "work",
            "can",
            "reach",
            "expand",
            "influence",
            "use"
        ],
        "Entity": [
            "work",
            "repository",
            "can",
            "reach",
            "audience",
            "influence",
            "academic",
            "community",
            "use",
            "teaching"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to upload material to the repository on the author's behalf, so that I can fulfill a service obligation.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "upload",
            "can",
            "fulfill",
            "service"
        ],
        "Entity": [
            "material",
            "repository",
            "behalf",
            "can",
            "service",
            "obligation"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to create metadata for items within the repository that includes document title, description, author, document type, status, file locations, subscribable flag, subject area, release frequency, and keywords for searching.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "create",
            "items",
            "includes",
            "document",
            "title",
            "author",
            "document",
            "type",
            "file",
            "flag",
            "subject",
            "release"
        ],
        "Entity": [
            "items",
            "repository",
            "document",
            "title",
            "description",
            "author",
            "document",
            "type",
            "status",
            "file",
            "locations",
            "flag",
            "subject",
            "area",
            "release",
            "frequency",
            "keywords",
            "searching"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to upload large batches of items simultaneously, including descriptive metadata, so that I can offer service to authors efficiently.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "upload",
            "batches",
            "items",
            "including",
            "can",
            "offer",
            "service",
            "authors"
        ],
        "Entity": [
            "large",
            "batches",
            "items",
            "can",
            "offer",
            "service",
            "authors"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to upload an item to the repository that will only become visible after a specific embargo period has expired, so that I can comply with author or publisher requirements.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "upload",
            "item",
            "will",
            "become",
            "embargo",
            "has",
            "expired",
            "can",
            "comply",
            "author"
        ],
        "Entity": [
            "item",
            "repository",
            "will",
            "visible",
            "specific",
            "embargo",
            "period",
            "can",
            "author",
            "publisher",
            "requirements"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to include supplementary files such as datasets, slideshows, etc. – with DOIs for each, as needed – when uploading a given work, so that I can provide a robust image of the work in question.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "include",
            "files",
            "given",
            "work",
            "can",
            "provide",
            "image",
            "work",
            "question"
        ],
        "Entity": [
            "supplementary",
            "files",
            "given",
            "work",
            "can",
            "image",
            "work",
            "question"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to deliver streaming media from within the repository, so that I can deliver such content in the manner expected and ensure continued access to said content.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "deliver",
            "can",
            "deliver",
            "content",
            "ensure",
            "continued",
            "access",
            "said",
            "content"
        ],
        "Entity": [
            "streaming",
            "media",
            "repository",
            "can",
            "content",
            "manner",
            "ensure",
            "access",
            "said",
            "content"
        ]
    },
    {
        "Text": "#G27# As an administrator, I want to have a platform that can support a variety of media file and text-based formats, so that the intellectual output of the school can be showcased and preserved in a more comprehensive way.",
        "Persona": [
            " administrator"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "support",
            "file",
            "formats",
            "output",
            "school",
            "can",
            "preserved"
        ],
        "Entity": [
            "platform",
            "can",
            "support",
            "variety",
            "media",
            "file",
            "formats",
            "intellectual",
            "output",
            "school",
            "can",
            "more",
            "comprehensive",
            "way"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to be able to assign an item to more than one collection.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "assign",
            "item"
        ],
        "Entity": [
            "able",
            "assign",
            "item",
            "more",
            "one",
            "collection"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to be able to add custom metadata fields for deposits I make on behalf of researchers to allow for better search capabilities.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "add",
            "fields",
            "deposits",
            "make",
            "allow",
            "better",
            "search"
        ],
        "Entity": [
            "able",
            "custom",
            "fields",
            "deposits",
            "make",
            "behalf",
            "researchers",
            "better",
            "search",
            "capabilities"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to upload revised report/dataset due to error in report/document.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "upload",
            "revised"
        ],
        "Entity": [
            "due",
            "error"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to upload new version of report/dataset while retaining previous versions for patron use.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "upload",
            "while",
            "use"
        ],
        "Entity": [
            "version",
            "while",
            "versions",
            "patron",
            "use"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to have the system recognize/categorize document type (e.g. historical report still published, expired historical report, single topic dataset, broad topic dataset, report with subtopic, computer file), so that report/dataset is processed and displayed properly.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "have",
            "document",
            "type",
            "report",
            "still",
            "expired",
            "report",
            "single",
            "report"
        ],
        "Entity": [
            "system",
            "document",
            "type",
            "report",
            "still",
            "report",
            "single",
            "topic",
            "broad",
            "topic",
            "report",
            "computer"
        ]
    },
    {
        "Text": "#G27# As a Cornell faculty member, I want to easily assign a CC license to the files I are depositing, so that users know how the materials can be used.",
        "Persona": [
            " Cornell faculty member"
        ],
        "Action": [
            "want",
            "assign",
            "license",
            "files",
            "are",
            "know",
            "can"
        ],
        "Entity": [
            "assign",
            "license",
            "files",
            "users",
            "know",
            "how",
            "materials",
            "can"
        ]
    },
    {
        "Text": "#G27# As a repository support team member, I want to export a set of records and associated files, manipulate this data set, and reload into the system, because I am aware of a uniform error in a collection.",
        "Persona": [
            " repository support team member"
        ],
        "Action": [
            "want",
            "export",
            "set",
            "records",
            "associated",
            "files",
            "manipulate",
            "set",
            "reload",
            "uniform"
        ],
        "Entity": [
            "export",
            "set",
            "records",
            "files",
            "data",
            "set",
            "reload",
            "system",
            "uniform",
            "error",
            "collection"
        ]
    },
    {
        "Text": "#G27# As a Cornell faculty member, I want to associate a researcherID or ORCID with a submission, so that there is no ambiguity between my work and someone else with the same name.",
        "Persona": [
            " Cornell faculty member"
        ],
        "Action": [
            "want",
            "associate",
            "work",
            "name"
        ],
        "Entity": [
            "associate",
            "submission",
            "there",
            "ambiguity",
            "work",
            "someone",
            "name"
        ]
    },
    {
        "Text": "#G27# As a student, I want to upload to the repository the data that is associated with my embargoed dissertation to meet requirements of a DMP I submitted with my NSF DDIG.",
        "Persona": [
            " student"
        ],
        "Action": [
            "want",
            "upload",
            "associated",
            "meet",
            "submitted"
        ],
        "Entity": [
            "repository",
            "data",
            "dissertation",
            "meet",
            "requirements"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to have customizable metadata fields, so that each project is described in the most accurate way possible.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "have",
            "fields",
            "project",
            "described"
        ],
        "Entity": [
            "fields",
            "project",
            "most",
            "way",
            "possible"
        ]
    },
    {
        "Text": "#G27# As a faculty member, I want to associate files with my scholarly works such that someone accessing the latter also receives access to the former, so that I can deliver the fullest picture of my research.",
        "Persona": [
            " faculty member"
        ],
        "Action": [
            "want",
            "associate",
            "files",
            "works",
            "receives",
            "access",
            "can",
            "deliver",
            "picture",
            "research"
        ],
        "Entity": [
            "associate",
            "files",
            "works",
            "someone",
            "latter",
            "access",
            "former",
            "can",
            "picture",
            "research"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to use content and metadata from the repository in other systems and/or web pages easily, so that I can deliver such content in the manner best fit to the audience or occasion.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "use",
            "content",
            "web",
            "pages",
            "can",
            "deliver",
            "content",
            "best",
            "fit",
            "occasion"
        ],
        "Entity": [
            "use",
            "content",
            "repository",
            "systems",
            "web",
            "pages",
            "can",
            "content",
            "manner",
            "best",
            "fit",
            "audience",
            "occasion"
        ]
    },
    {
        "Text": "#G27# As an Extension Administrator, I want to make resources that were developed for specific projects and geographic areas available to other faculty and educators across NYS.",
        "Persona": [
            " Extension Administrator"
        ],
        "Action": [
            "want",
            "make",
            "were",
            "developed",
            "projects"
        ],
        "Entity": [
            "make",
            "resources",
            "specific",
            "projects",
            "areas",
            "faculty",
            "educators"
        ]
    },
    {
        "Text": "#G27# As an Extension Administrator or Staff Content Manager, I want to get periodic IR reminders, including when something needs attention (including next ingestion/approval steps), or something that might need to move from a current knowledge collection to Historical.",
        "Persona": [
            " Extension Administrator or Staff Content Manager"
        ],
        "Action": [
            "want",
            "get",
            "including",
            "needs",
            "might",
            "need",
            "move"
        ],
        "Entity": [
            "reminders",
            "something",
            "needs",
            "attention",
            "something",
            "might",
            "need",
            "move",
            "current",
            "knowledge",
            "collection"
        ]
    },
    {
        "Text": "#G27# As a researcher, I want to promote/share my work through interactive maps, so that I can display the range and extent of my work graphically.",
        "Persona": [
            " researcher"
        ],
        "Action": [
            "want",
            "work",
            "maps",
            "can",
            "display",
            "range",
            "work"
        ],
        "Entity": [
            "work",
            "maps",
            "can",
            "display",
            "range",
            "extent",
            "work"
        ]
    },
    {
        "Text": "#G27# As an Extension Educator, I want to have a place to store a variety of documents, presentations and data sets I've created, that doesn't require an extra step in making available on my own County/Region/Project site (i.e. a list or directory of materials there is automatically updated when placed in a central archive/repository).",
        "Persona": [
            " Extension Educator"
        ],
        "Action": [
            "want",
            "have",
            "place",
            "store",
            "documents",
            "sets",
            "created",
            "require",
            "step",
            "own",
            "site",
            "list",
            "updated",
            "placed"
        ],
        "Entity": [
            "place",
            "store",
            "variety",
            "documents",
            "presentations",
            "data",
            "sets",
            "doesn't",
            "extra",
            "step",
            "making",
            "site",
            "list",
            "directory",
            "materials",
            "there",
            "central"
        ]
    },
    {
        "Text": "#G27# As a patron, I want to know other reports/datasets that are related (e.g. see also) to report/dataset being viewed for the purpose finding other related information.",
        "Persona": [
            " patron"
        ],
        "Action": [
            "want",
            "know",
            "are",
            "see",
            "purpose",
            "finding"
        ],
        "Entity": [
            "know",
            "see",
            "being",
            "purpose",
            "finding",
            "information"
        ]
    },
    {
        "Text": "#G27# As a patron, I want to know previous name(s) and publication date range (first version-last version) of reports/datasets, so that I can know what historical versions are available and how current more recent version is.",
        "Persona": [
            " patron"
        ],
        "Action": [
            "want",
            "know",
            "date",
            "range",
            "can",
            "know",
            "are"
        ],
        "Entity": [
            "know",
            "publication",
            "date",
            "range",
            "can",
            "know",
            "versions",
            "how",
            "current",
            "more",
            "version"
        ]
    },
    {
        "Text": "#G27# As a patron, I want to create a personal account to request email notification when new version of report/dataset is available.",
        "Persona": [
            " patron"
        ],
        "Action": [
            "want",
            "create",
            "account",
            "request"
        ],
        "Entity": [
            "personal",
            "account",
            "request",
            "notification",
            "version"
        ]
    },
    {
        "Text": "#G27# As a patron, I want to download report/dataset release calendar to load into own calendar.",
        "Persona": [
            " patron"
        ],
        "Action": [
            "want",
            "download",
            "release",
            "calendar",
            "load",
            "own",
            "calendar"
        ],
        "Entity": [
            "release",
            "calendar",
            "load",
            "calendar"
        ]
    },
    {
        "Text": "#G27# As a librarydiscoveryoperator, I want to harvest useful metadata from the repository via OAI, and continue to do so incrementally, so that I can make Cornell publications discoverable in my repository.",
        "Persona": [
            " librarydiscoveryoperator"
        ],
        "Action": [
            "want",
            "harvest",
            "continue",
            "can",
            "make"
        ],
        "Entity": [
            "harvest",
            "useful",
            "repository",
            "can",
            "make",
            "publications",
            "repository"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to quickly correct errors in uploaded metadata, and even uploaded documents, while leaving a record of my revisions (and possibly the reasons behind them), so that I can present correct versions of content and to locate points of error.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "correct",
            "even",
            "documents",
            "while",
            "leaving",
            "record",
            "reasons",
            "can",
            "present",
            "correct",
            "content",
            "locate",
            "points"
        ],
        "Entity": [
            "errors",
            "even",
            "documents",
            "while",
            "leaving",
            "record",
            "revisions",
            "reasons",
            "behind",
            "can",
            "present",
            "versions",
            "content",
            "points",
            "error"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to receive a quick response and a reasonable resolution to tech support issues, so that service can proceed with minimal interruption.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "receive",
            "support",
            "issues",
            "service",
            "can",
            "proceed"
        ],
        "Entity": [
            "quick",
            "response",
            "resolution",
            "tech",
            "support",
            "issues",
            "service",
            "can",
            "interruption"
        ]
    },
    {
        "Text": "#G27# As a Cornell faculty member, I want to share on the repository files that are larger than 1GB in a way that still allows users to download them if I want to use them, so that I can meet funder requirements.",
        "Persona": [
            " Cornell faculty member"
        ],
        "Action": [
            "want",
            "share",
            "files",
            "are",
            "still",
            "allows",
            "download",
            "want",
            "use",
            "can",
            "meet"
        ],
        "Entity": [
            "share",
            "repository",
            "files",
            "way",
            "still",
            "users",
            "use",
            "can",
            "meet",
            "requirements"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to login to personal account with access to authorized functions.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "account",
            "access",
            "functions"
        ],
        "Entity": [
            "personal",
            "account",
            "access",
            "functions"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to have a personal account with the ability to change passwords to make them more secure or to retrieve forgotten ones.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "have",
            "account",
            "change",
            "make",
            "secure",
            "retrieve",
            "forgotten"
        ],
        "Entity": [
            "personal",
            "account",
            "ability",
            "change",
            "passwords",
            "make",
            "more",
            "retrieve",
            "ones"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to set up or delete accounts for other administrators with various levels of permission.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "set",
            "delete",
            "accounts",
            "levels"
        ],
        "Entity": [
            "set",
            "accounts",
            "administrators",
            "levels",
            "permission"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to see a list of all administrators for ease of administering accounts.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "see",
            "list",
            "ease",
            "accounts"
        ],
        "Entity": [
            "see",
            "list",
            "all",
            "administrators",
            "ease",
            "accounts"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to have robust searching and tracking features for existing and newly created patron accounts.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "have",
            "features",
            "created",
            "accounts"
        ],
        "Entity": [
            "searching",
            "tracking",
            "features",
            "patron",
            "accounts"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to unpublish a report/dataset if requested to do so by USDA agency.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want"
        ],
        "Entity": [
            "agency"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to add future release dates of reports/datasets to calendar for patron FYI.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "add",
            "release",
            "dates",
            "calendar"
        ],
        "Entity": [
            "future",
            "release",
            "dates",
            "calendar",
            "patron"
        ]
    },
    {
        "Text": "#G27# As a faculty member, I want to recommend a digital collection be built in the repository, so that I can assist in my research.",
        "Persona": [
            " faculty member"
        ],
        "Action": [
            "want",
            "recommend",
            "built",
            "can",
            "assist",
            "research"
        ],
        "Entity": [
            "digital",
            "collection",
            "repository",
            "can",
            "assist",
            "research"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to search for administrator accounts using full/partial email or name.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "search",
            "accounts",
            "using",
            "name"
        ],
        "Entity": [
            "search",
            "administrator",
            "accounts",
            "using",
            "name"
        ]
    },
    {
        "Text": "#G27# As a DB/IR administrator, I want to administrate patron accounts for purpose of closing accounts, viewing subscriptions, changing subscriptions, resetting passwords, changing email address, etc.",
        "Persona": [
            " DB/IR administrator"
        ],
        "Action": [
            "want",
            "administrate",
            "accounts",
            "purpose",
            "closing",
            "accounts",
            "changing",
            "resetting",
            "changing",
            "address"
        ],
        "Entity": [
            "patron",
            "accounts",
            "purpose",
            "closing",
            "accounts",
            "viewing",
            "subscriptions",
            "subscriptions",
            "passwords",
            "address"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to create custom metadata fields for certain collections, and allow searching of those fields, so that I can best reflect and deliver diverse content.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "create",
            "fields",
            "allow",
            "fields",
            "can",
            "best",
            "reflect",
            "deliver",
            "content"
        ],
        "Entity": [
            "custom",
            "fields",
            "collections",
            "searching",
            "fields",
            "can",
            "best",
            "content"
        ]
    },
    {
        "Text": "#G27# As a repository support team member, I want to move a collection, so that I can fulfill the collection owner's request.",
        "Persona": [
            " repository support team member"
        ],
        "Action": [
            "want",
            "move",
            "can",
            "fulfill",
            "request"
        ],
        "Entity": [
            "move",
            "collection",
            "can",
            "collection",
            "request"
        ]
    },
    {
        "Text": "#G27# As a repository support team member, I want to rename a collection, so that I can fulfill the collection owner's request.",
        "Persona": [
            " repository support team member"
        ],
        "Action": [
            "want",
            "rename",
            "can",
            "fulfill",
            "request"
        ],
        "Entity": [
            "collection",
            "can",
            "collection",
            "request"
        ]
    },
    {
        "Text": "#G27# As an asset manager, I want to be assured that the digital copy I deposit is stored redundantly, so that when one copy suffers destruction or unwanted changes, I still have other good copies to restore from.",
        "Persona": [
            " asset manager"
        ],
        "Action": [
            "want",
            "copy",
            "deposit",
            "stored",
            "copy",
            "suffers",
            "changes",
            "still",
            "have",
            "copies",
            "restore"
        ],
        "Entity": [
            "assured",
            "digital",
            "copy",
            "deposit",
            "one",
            "copy",
            "destruction",
            "changes",
            "still",
            "good",
            "copies"
        ]
    },
    {
        "Text": "#G27# As an asset manager, I want to be assured that threats to copies in one repository are not automatically incurred by the redundant copies.",
        "Persona": [
            " asset manager"
        ],
        "Action": [
            "want",
            "threats",
            "copies",
            "are",
            "incurred",
            "copies"
        ],
        "Entity": [
            "assured",
            "threats",
            "copies",
            "one",
            "repository",
            "copies"
        ]
    },
    {
        "Text": "#G27# As an asset manager, I want to be assured that the redundant copies are continuously monitored for unwanted changes, and that if/when changes do occur, there is a mechanism by which I can determine the original object and restore it to all copies.",
        "Persona": [
            " asset manager"
        ],
        "Action": [
            "want",
            "copies",
            "are",
            "changes",
            "changes",
            "occur",
            "can",
            "determine",
            "object",
            "restore",
            "copies"
        ],
        "Entity": [
            "assured",
            "copies",
            "changes",
            "changes",
            "there",
            "mechanism",
            "can",
            "original",
            "object",
            "all",
            "copies"
        ]
    },
    {
        "Text": "#G27# As an asset manager, I want to be assured that the assets can be taken out of the repository, and that the assets taken out are the same as those that are put in.",
        "Persona": [
            " asset manager"
        ],
        "Action": [
            "want",
            "can",
            "taken",
            "out",
            "taken",
            "out",
            "are",
            "are",
            "put"
        ],
        "Entity": [
            "assured",
            "assets",
            "can",
            "out",
            "repository",
            "assets",
            "out",
            "put"
        ]
    },
    {
        "Text": "#G27# As an asset manager, I want to know what the intellectual value of the asset is to the institution at the time of deposit, so that I obtain guidance in the evaluation of it for current value for the institution.",
        "Persona": [
            " asset manager"
        ],
        "Action": [
            "want",
            "know",
            "value",
            "time",
            "deposit",
            "obtain",
            "value"
        ],
        "Entity": [
            "know",
            "intellectual",
            "value",
            "asset",
            "institution",
            "time",
            "deposit",
            "guidance",
            "evaluation",
            "current",
            "value",
            "institution"
        ]
    },
    {
        "Text": "#G27# As an asset manager, I want to have a mechanism to obtain a listing or understanding of all the assets that have been deposited, and their current status.",
        "Persona": [
            " asset manager"
        ],
        "Action": [
            "want",
            "have",
            "obtain",
            "have",
            "been"
        ],
        "Entity": [
            "mechanism",
            "listing",
            "understanding",
            "all",
            "assets",
            "current",
            "status"
        ]
    },
    {
        "Text": "#G27# As an asset manager, I want to be assured that funding and staffing of the IR have a commitment to longevity of the repository through published plans and/or explicit contract clauses.",
        "Persona": [
            " asset manager"
        ],
        "Action": [
            "want",
            "have",
            "plans",
            "contract"
        ],
        "Entity": [
            "assured",
            "funding",
            "commitment",
            "longevity",
            "repository",
            "plans",
            "contract",
            "clauses"
        ]
    },
    {
        "Text": "#G27# As a stakeholder, I want to have files adequately described, so that I can successfully render them in my contemporary operating environment.",
        "Persona": [
            " stakeholder"
        ],
        "Action": [
            "want",
            "have",
            "files",
            "described",
            "can",
            "render"
        ],
        "Entity": [
            "files",
            "can",
            "render",
            "contemporary",
            "environment"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to preserve both the content and the metadata within the repository in a robust manner, so that I can provide stable, long-term access to this material.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "preserve",
            "content",
            "can",
            "provide",
            "stable",
            "access"
        ],
        "Entity": [
            "preserve",
            "content",
            "repository",
            "manner",
            "can",
            "stable",
            "access",
            "material"
        ]
    },
    {
        "Text": "#G27# As a data curator, I want to upload a new version of an item that has changed, while still allowing old versions to be accessed.",
        "Persona": [
            " data curator"
        ],
        "Action": [
            "want",
            "upload",
            "item",
            "has",
            "changed",
            "while",
            "still"
        ],
        "Entity": [
            "version",
            "item",
            "while",
            "still",
            "old",
            "versions"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to preserve the scholarship of the law school by using sustainable links that will not succumb to link rot, so that I can create a permanent digital archive for the scholarship of my institution.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "preserve",
            "school",
            "using",
            "links",
            "will",
            "succumb",
            "link",
            "rot",
            "can",
            "create",
            "archive"
        ],
        "Entity": [
            "preserve",
            "scholarship",
            "law",
            "school",
            "using",
            "links",
            "will",
            "link",
            "rot",
            "can",
            "permanent",
            "digital",
            "archive",
            "scholarship",
            "institution"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to create a collection, sometimes with custom metadata fields, so that I can house digital material for wider distribution.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "create",
            "fields",
            "can",
            "house"
        ],
        "Entity": [
            "collection",
            "custom",
            "fields",
            "can",
            "house",
            "digital",
            "material",
            "distribution"
        ]
    },
    {
        "Text": "#G27# As a library staff member, I want to trace the list of revisors to determine who uploaded an item to the repository, so that I can confirm that proper procedures were followed.",
        "Persona": [
            " library staff member"
        ],
        "Action": [
            "want",
            "trace",
            "list",
            "determine",
            "item",
            "can",
            "confirm",
            "were"
        ],
        "Entity": [
            "trace",
            "list",
            "who",
            "item",
            "repository",
            "can",
            "proper",
            "procedures"
        ]
    },
    {
        "Text": "#G27# As an asset manager, I want to be assured that there is a formal plan for the disposition of assets if the IR should cease.",
        "Persona": [
            " asset manager"
        ],
        "Action": [
            "want",
            "plan",
            "should",
            "cease"
        ],
        "Entity": [
            "assured",
            "there",
            "formal",
            "plan",
            "disposition",
            "assets",
            "cease"
        ]
    },
    {
        "Text": "#G27# As an asset manager, I want to have mechanism to pass ownership/management of the assets to a successor.",
        "Persona": [
            " asset manager"
        ],
        "Action": [
            "want",
            "have",
            "pass"
        ],
        "Entity": [
            "mechanism",
            "pass",
            "assets",
            "successor"
        ]
    },
    {
        "Text": "#G27# As a patron, I want to email system provider to report issues and ask questions.",
        "Persona": [
            " patron"
        ],
        "Action": [
            "want",
            "report",
            "issues",
            "ask",
            "questions"
        ],
        "Entity": [
            "system",
            "provider",
            "report",
            "issues",
            "questions"
        ]
    },
    {
        "Text": "#G27# As a data curator, I want to have a mechanism to allow for records scheduling for items that do not need to be stored indefinitely.",
        "Persona": [
            " data curator"
        ],
        "Action": [
            "want",
            "have",
            "allow",
            "records",
            "scheduling",
            "items",
            "need",
            "stored"
        ],
        "Entity": [
            "mechanism",
            "records",
            "scheduling",
            "items",
            "need"
        ]
    },
    {
        "Text": "#G28# As a user, I want to search and discover music using content identification or fingerprinting.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "search",
            "discover",
            "using",
            "content"
        ],
        "Entity": [
            "search",
            "music",
            "using",
            "content",
            "identification"
        ]
    },
    {
        "Text": "#G28# As a user, I want to search and discover music based on my profile.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "search",
            "discover",
            "based"
        ],
        "Entity": [
            "search",
            "music"
        ]
    },
    {
        "Text": "#G28# As a user, I want to search and discover music based on other users similar to myself.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "search",
            "discover",
            "based"
        ],
        "Entity": [
            "search",
            "music",
            "users"
        ]
    },
    {
        "Text": "#G28# As a user, I want to search and discover music or ringback tones similar to a given music video based on content similarity.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "search",
            "discover",
            "tones",
            "given",
            "based",
            "content"
        ],
        "Entity": [
            "search",
            "music",
            "tones",
            "given",
            "music",
            "video",
            "content"
        ]
    },
    {
        "Text": "#G28# As a user, I want to search and discover music by exploiting enriched metadata and image tags, so that I find related artists, new genre, or other relevant listening path.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "search",
            "discover",
            "image",
            "tags",
            "find"
        ],
        "Entity": [
            "search",
            "music",
            "image",
            "tags",
            "find",
            "artists",
            "genre",
            "listening",
            "path"
        ]
    },
    {
        "Text": "#G28# As a user, I want to upload tagged videos and have tags available for all further processing steps.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "upload",
            "tagged",
            "have",
            "tags",
            "further"
        ],
        "Entity": [
            "videos",
            "tags",
            "all",
            "processing"
        ]
    },
    {
        "Text": "#G28# As a user, I want to view thumbnail sequences of video segments.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "view",
            "sequences"
        ],
        "Entity": [
            "view",
            "thumbnail",
            "sequences",
            "video"
        ]
    },
    {
        "Text": "#G28# As a user, I want to get info about similar video items and segments.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "get",
            "items"
        ],
        "Entity": [
            "info",
            "video",
            "items"
        ]
    },
    {
        "Text": "#G28# As a user, I want to get info about perceptually similar video items and segments.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "get",
            "items"
        ],
        "Entity": [
            "info",
            "video",
            "items"
        ]
    },
    {
        "Text": "#G28# As a user, I want to receive content recommendations from similar profiles.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "receive",
            "content",
            "profiles"
        ],
        "Entity": [
            "content",
            "recommendations",
            "profiles"
        ]
    },
    {
        "Text": "#G28# As a user, I want to receive content recommendations based on most relevant news events in my area.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "receive",
            "content",
            "based"
        ],
        "Entity": [
            "content",
            "recommendations",
            "most",
            "news",
            "events"
        ]
    },
    {
        "Text": "#G28# As a user, I want to identify persons in videos, and receive related information about them.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "identify",
            "receive"
        ],
        "Entity": [
            "persons",
            "videos",
            "information"
        ]
    },
    {
        "Text": "#G28# As a user, I want to identify products in videos, and receive related information about them.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "identify",
            "receive"
        ],
        "Entity": [
            "products",
            "videos",
            "information"
        ]
    },
    {
        "Text": "#G28# As a user, I want to identify broadcaster logos in videos, and receive related information about them.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "identify",
            "receive"
        ],
        "Entity": [
            "broadcaster",
            "logos",
            "videos",
            "information"
        ]
    },
    {
        "Text": "#G28# As a user, I want to identify brands in videos, and receive related information about them.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "identify",
            "brands",
            "receive"
        ],
        "Entity": [
            "brands",
            "videos",
            "information"
        ]
    },
    {
        "Text": "#G28# As a user, I want to take a picture or upload an image, so that I am recommended with videos related to that picture or image.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "take",
            "picture",
            "upload",
            "image",
            "picture"
        ],
        "Entity": [
            "take",
            "picture",
            "image",
            "videos",
            "picture"
        ]
    },
    {
        "Text": "#G28# As a user, I want to walk around, access content using a geographical map and be informed if there are videos covering the area, monuments or any other relevant point of interest.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "walk",
            "access",
            "content",
            "using",
            "map",
            "are",
            "point"
        ],
        "Entity": [
            "walk",
            "access",
            "content",
            "using",
            "map",
            "there",
            "videos",
            "covering",
            "area",
            "monuments",
            "point"
        ]
    },
    {
        "Text": "#G28# As a user, I want to search content items using automatic speech recognition.\t",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "search",
            "content",
            "items",
            "using"
        ],
        "Entity": [
            "search",
            "content",
            "items",
            "using",
            "automatic",
            "speech"
        ]
    },
    {
        "Text": "#G28# As an admin, I want to see, validate and edit segmentation of videos.\t",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "see",
            "validate",
            "edit"
        ],
        "Entity": [
            "see",
            "edit",
            "segmentation"
        ]
    },
    {
        "Text": "#G28# As an admin, I want to annotate news video segments and extract a topic for each segment.\t",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "annotate",
            "segments",
            "extract"
        ],
        "Entity": [
            "news",
            "video",
            "segments",
            "extract",
            "topic"
        ]
    },
    {
        "Text": "#G28# As an admin, I want to filter and rank videos based on A/V quality aspects.\t",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "filter",
            "rank",
            "based"
        ],
        "Entity": [
            "filter",
            "rank",
            "videos",
            "quality"
        ]
    },
    {
        "Text": "#G28# As an admin, I want to get a quick assessment of whether audio material has been edited before the upload.\t",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "get",
            "has",
            "been"
        ],
        "Entity": [
            "quick",
            "assessment",
            "audio",
            "material"
        ]
    },
    {
        "Text": "#G28# As an admin, I want to prefilter nudity content.\t",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want"
        ],
        "Entity": [
            "nudity"
        ]
    },
    {
        "Text": "#G28# As an admin, I want to prefilter content using search based on low-level asset information.\t",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "content",
            "using",
            "search",
            "based"
        ],
        "Entity": [
            "content",
            "using",
            "search",
            "asset"
        ]
    },
    {
        "Text": "#G28# As an admin, I want to automatically validated the ingested contents for copyright infringement.\t",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "contents",
            "copyright"
        ],
        "Entity": [
            "contents",
            "copyright"
        ]
    },
    {
        "Text": "#G28# As an admin, I want to prefilter the content using search on high-level asset information such as metadata and tags either recognized by the system of provided by the user.\t",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "content",
            "using",
            "search",
            "tags",
            "recognized"
        ],
        "Entity": [
            "content",
            "using",
            "search",
            "asset",
            "information",
            "tags",
            "system"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to assess how interesting or appealing or complex a picture is based on automated analysis, citizen annotations, and comments on Talk.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "assess",
            "picture",
            "based",
            "automated",
            "comments"
        ],
        "Entity": [
            "how",
            "complex",
            "picture",
            "analysis",
            "citizen",
            "annotations",
            "comments"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to detect when a scientist should be prompted to look at a subject, based on annotations and information from Talk comments.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "detect",
            "should",
            "look",
            "subject",
            "based",
            "talk"
        ],
        "Entity": [
            "scientist",
            "look",
            "subject",
            "annotations",
            "information",
            "talk"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to identify volunteer types.",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "identify",
            "volunteer",
            "types"
        ],
        "Entity": [
            "volunteer",
            "types"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to preclassify the Galaxy Zoo images using simple low-level image features.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "images",
            "using",
            "image"
        ],
        "Entity": [
            "galaxy",
            "zoo",
            "images",
            "using",
            "simple",
            "image"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to automatically detect Snapshot Serengeti images with no classifiable animals in them.",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "detect",
            "images"
        ],
        "Entity": [
            "snapshot",
            "images",
            "animals"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to perform automatic image series detection for the case of timestamping malfunction in Snapshot Serengeti images.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "perform",
            "image",
            "case",
            "malfunction"
        ],
        "Entity": [
            "automatic",
            "image",
            "series",
            "detection",
            "case",
            "malfunction",
            "snapshot"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to perform automatic animal species preclassification in Snapshot Serengeti.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "perform"
        ],
        "Entity": [
            "automatic",
            "animal",
            "species",
            "snapshot"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to perform automatic animal attribute preclassification in Snapshot Serengeti.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "perform",
            "attribute"
        ],
        "Entity": [
            "automatic",
            "animal",
            "attribute",
            "snapshot"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to perform automatic animal number detection in Snapshot Serengeti.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "perform",
            "number"
        ],
        "Entity": [
            "automatic",
            "animal",
            "number",
            "detection",
            "snapshot"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to perform automatic segmentation or localization of plankton in Plankton Portal.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "perform"
        ],
        "Entity": [
            "automatic",
            "segmentation",
            "localization",
            "plankton",
            "plankton"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to automatically detect Plankton Portal images with no classifiable plankton in them.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "detect",
            "images"
        ],
        "Entity": [
            "plankton",
            "portal",
            "images",
            "plankton"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to perform automatic detection of plankton size or orientation in Plankton Portal images.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "perform",
            "size"
        ],
        "Entity": [
            "automatic",
            "detection",
            "plankton",
            "size",
            "orientation",
            "plankton",
            "portal"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to perform automatic preclassification of plankton species in Plankton Portal images.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "perform"
        ],
        "Entity": [
            "automatic",
            "plankton",
            "species",
            "plankton",
            "portal"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to perform automatic worm motion analysis to reduce video duration in Worm Watch Lab.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "perform",
            "worm",
            "motion",
            "reduce",
            "worm",
            "watch"
        ],
        "Entity": [
            "automatic",
            "worm",
            "motion",
            "analysis",
            "video",
            "duration",
            "worm",
            "watch"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to automatically detect the time in a Worm Watch Lab video where the worm lays an egg.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "detect",
            "time",
            "worm",
            "watch",
            "worm",
            "lays"
        ],
        "Entity": [
            "time",
            "worm",
            "watch",
            "lab",
            "video",
            "where",
            "worm",
            "lays"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to detect important features such as areas of flooding, damage, temporary shelters, blocked roads etc in the satellite images.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "detect",
            "features",
            "damage",
            "shelters",
            "satellite"
        ],
        "Entity": [
            "features",
            "areas",
            "flooding",
            "damage",
            "temporary",
            "shelters",
            "roads",
            "satellite"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to assess the probability/weight of a volunteer's classification based on their experience.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "assess",
            "based"
        ],
        "Entity": [
            "classification"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to perform prefiltering of the images to remove artefacts such as bright stars and camera read errors.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "perform",
            "images",
            "remove",
            "stars",
            "read"
        ],
        "Entity": [
            "images",
            "remove",
            "artefacts",
            "bright",
            "stars",
            "camera",
            "read"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to detect moving and transient objects in the images.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "detect",
            "objects"
        ],
        "Entity": [
            "moving",
            "transient",
            "objects"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to remove background noise and distracting sounds from the audio files.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "remove",
            "background",
            "noise",
            "sounds"
        ],
        "Entity": [
            "remove",
            "background",
            "noise",
            "sounds",
            "audio"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to group whale calls that are similar.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "group",
            "whale",
            "calls",
            "are"
        ],
        "Entity": [
            "group",
            "whale",
            "calls"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to identify the number of whales heard in a single audio file.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "identify",
            "number",
            "whales",
            "heard",
            "single"
        ],
        "Entity": [
            "number",
            "whales",
            "single",
            "audio"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to know when I should interrupt a volunteer.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "know",
            "should",
            "interrupt"
        ],
        "Entity": [
            "know",
            "interrupt"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to know whether I should interrupt a volunteer with text, an image, or a video.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "know",
            "should",
            "interrupt",
            "volunteer",
            "image"
        ],
        "Entity": [
            "know",
            "interrupt",
            "volunteer",
            "text",
            "image"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to know when I should educate a volunteer.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "know",
            "should",
            "educate"
        ],
        "Entity": [
            "know"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to know whether I should educate a volunteer with text, an image, or a video.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "know",
            "should",
            "educate",
            "volunteer",
            "image"
        ],
        "Entity": [
            "know",
            "volunteer",
            "text",
            "image"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to know which piece of education I should give to a volunteer.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "know",
            "piece",
            "should",
            "give"
        ],
        "Entity": [
            "know",
            "piece",
            "education",
            "give"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to know when a volunteer has made an interesting comment on a subject.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "know",
            "volunteer",
            "has",
            "made",
            "comment"
        ],
        "Entity": [
            "know",
            "volunteer",
            "comment"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to know when Zoonibot should comment on a subject.",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "know",
            "should",
            "comment",
            "subject"
        ],
        "Entity": [
            "know",
            "comment",
            "subject"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to know when Zoonibot should give an explanation.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "know",
            "should",
            "give"
        ],
        "Entity": [
            "know",
            "give"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to know what Zoonibot should say to a volunteer.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "know",
            "should",
            "say"
        ],
        "Entity": [
            "know",
            "say"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to group subjects by similarity.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "group",
            "subjects"
        ],
        "Entity": [
            "group",
            "subjects"
        ]
    },
    {
        "Text": "#G28# As a Zooniverse admin, I want to recommend different projects to volunteers based on their previous experiences.\t",
        "Persona": [
            " Zooniverse admin"
        ],
        "Action": [
            "want",
            "recommend",
            "projects",
            "volunteers",
            "based"
        ],
        "Entity": [
            "projects",
            "volunteers"
        ]
    },
    {
        "Text": "#G28# As an admin, I want to see a summary of articles, so that I reuse them.\t",
        "Persona": [
            " admin"
        ],
        "Action": [
            "want",
            "see",
            "articles",
            "reuse"
        ],
        "Entity": [
            "see",
            "summary",
            "articles"
        ]
    }
]