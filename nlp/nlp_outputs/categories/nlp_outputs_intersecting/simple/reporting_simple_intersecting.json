[
    {
        "Text": "#G02# As a UI designer, I want to redesign the Resources page, so that it matches the new Broker design styles.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "redesign",
            "page",
            "matches",
            "broker",
            "design",
            "styles"
        ],
        "Entity": [
            "resources",
            "page",
            "matches",
            "broker",
            "design",
            "styles"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to report to the Agencies about user testing, so that they are aware of their contributions to making Broker a better UX.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "report",
            "are",
            "broker",
            "better"
        ],
        "Entity": [
            "report",
            "agencies",
            "user",
            "testing",
            "contributions",
            "making",
            "broker",
            "better"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to move on to round 2 of DABS or FABS landing page edits, so that I can get approvals from leadership.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "move",
            "round",
            "dabs",
            "page",
            "edits",
            "can",
            "get"
        ],
        "Entity": [
            "move",
            "round",
            "dabs",
            "landing",
            "page",
            "edits",
            "can",
            "approvals",
            "leadership"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to move on to round 3 of the Help page edits, so that I can get approvals from leadership.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "move",
            "round",
            "help",
            "page",
            "edits",
            "can",
            "get"
        ],
        "Entity": [
            "move",
            "round",
            "help",
            "page",
            "edits",
            "can",
            "approvals",
            "leadership"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to add the updates on a FABS submission to be modified when the publishStatus changes, so that I know when the status of the submission has changed.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "add",
            "updates",
            "modified",
            "changes",
            "know",
            "has",
            "changed"
        ],
        "Entity": [
            "updates",
            "submission",
            "changes",
            "know",
            "status",
            "submission"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to move on to round 2 of Homepage edits, so that I can get approvals from leadership.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "move",
            "round",
            "edits",
            "can",
            "get"
        ],
        "Entity": [
            "move",
            "round",
            "edits",
            "can",
            "approvals",
            "leadership"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to Upload and Validate the error message to have accurate text.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "upload",
            "validate",
            "message",
            "have"
        ],
        "Entity": [
            "error",
            "message",
            "text"
        ]
    },
    {
        "Text": "#G02# As a Website user, I want to access published FABS files, so that I can see the new files as they come in.",
        "Persona": [
            " Website user"
        ],
        "Action": [
            "want",
            "access",
            "files",
            "can",
            "see",
            "files",
            "come"
        ],
        "Entity": [
            "access",
            "files",
            "can",
            "see",
            "files"
        ]
    },
    {
        "Text": "#G02# As an owner, I want to be sure that USAspending only send grant records to my system.",
        "Persona": [
            " owner"
        ],
        "Action": [
            "want",
            "send",
            "grant",
            "records"
        ],
        "Entity": [
            "send",
            "grant",
            "records",
            "system"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to update the Broker validation rule table to account for the rule updates in DB-2213.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "update",
            "broker",
            "rule",
            "table",
            "account",
            "rule",
            "updates"
        ],
        "Entity": [
            "update",
            "broker",
            "validation",
            "rule",
            "table",
            "account",
            "rule",
            "updates"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to add the GTAS window data to the database, so that I can ensure the site is locked down during the GTAS submission period.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "add",
            "window",
            "can",
            "ensure",
            "site",
            "down"
        ],
        "Entity": [
            "window",
            "data",
            "database",
            "can",
            "ensure",
            "site",
            "down",
            "submission",
            "period"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want  to help create content mockups, so that I can submit my data efficiently.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "help",
            "create",
            "content",
            "can",
            "submit"
        ],
        "Entity": [
            "help",
            "content",
            "can",
            "data"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to track the issues that come up in Tech Thursday, so that I know what to test and what want s to be fixed.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "track",
            "issues",
            "come",
            "know",
            "test",
            "want"
        ],
        "Entity": [
            "track",
            "issues",
            "tech",
            "know",
            "test"
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to create a user testing summary from the UI SME, so that I can know what UI improvements we will follow through on.",
        "Persona": [
            " Owner"
        ],
        "Action": [
            "want",
            "create",
            "can",
            "know",
            "will",
            "follow"
        ],
        "Entity": [
            "user",
            "testing",
            "summary",
            "can",
            "know",
            "improvements",
            "will",
            "follow"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to begin user testing, so that I can validate stakeholder UI improvement requests.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "begin",
            "can",
            "validate",
            "requests"
        ],
        "Entity": [
            "user",
            "testing",
            "can",
            "stakeholder",
            "improvement",
            "requests"
        ]
    },
    {
        "Text": "#G02# As a UI designer, I want to schedule user testing, so that I can give the testers advanced notice to ensure buy-in.",
        "Persona": [
            " UI designer"
        ],
        "Action": [
            "want",
            "schedule",
            "can",
            "give",
            "notice",
            "ensure",
            "buy-in"
        ],
        "Entity": [
            "schedule",
            "user",
            "testing",
            "can",
            "give",
            "testers",
            "notice",
            "ensure"
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to design a schedule from the UI SME, so that I know the potential timeline of the UI improvements wanted.",
        "Persona": [
            " Owner"
        ],
        "Action": [
            "want",
            "design",
            "schedule",
            "know"
        ],
        "Entity": [
            "design",
            "schedule",
            "know",
            "potential",
            "improvements"
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to design an audit from the UI SME, so that I know the potential scope of the UI improvements want ed.",
        "Persona": [
            " Owner"
        ],
        "Action": [
            "want",
            "design",
            "audit",
            "know",
            "want"
        ],
        "Entity": [
            "design",
            "audit",
            "know",
            "potential",
            "scope",
            "improvements"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to prevent users from double publishing FABS submissions after refreshing, so that there are no duplicates.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "prevent",
            "double",
            "are",
            "duplicates"
        ],
        "Entity": [
            "users",
            "double",
            "publishing",
            "submissions",
            "there",
            "duplicates"
        ]
    },
    {
        "Text": "#G02# As an data user, I want to receive updates to FABS records.",
        "Persona": [
            " data user"
        ],
        "Action": [
            "want",
            "receive",
            "updates",
            "records"
        ],
        "Entity": [
            "updates",
            "records"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to be able to include a large number of flexfields without performance impact.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "include",
            "number",
            "impact"
        ],
        "Entity": [
            "able",
            "large",
            "number",
            "performance",
            "impact"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to update the FABS sample file to remove FundingAgencyCode after FABS is updated to no longer require the header.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "update",
            "sample",
            "file",
            "remove",
            "updated",
            "require"
        ],
        "Entity": [
            "update",
            "sample",
            "file",
            "remove",
            "header"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to ensure that deleted FSRS records are not included in submissions.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "ensure",
            "deleted",
            "records",
            "are"
        ],
        "Entity": [
            "ensure",
            "records",
            "submissions"
        ]
    },
    {
        "Text": "#G02# As a website user, I want to see updated financial assistance data daily.",
        "Persona": [
            " website user"
        ],
        "Action": [
            "want",
            "see",
            "updated"
        ],
        "Entity": [
            "see",
            "assistance",
            "data",
            "daily"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to ensure that attempts to correct or delete non-existent records don't create new published data.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "ensure",
            "attempts",
            "correct",
            "delete",
            "records",
            "don't",
            "create"
        ],
        "Entity": [
            "ensure",
            "attempts",
            "records",
            "don't",
            "data"
        ]
    },
    {
        "Text": "#G02# As an Owner, I want to reset the environment to only take Staging MAX permissions, so that I can ensure that the FABS testers no longer have access.",
        "Persona": [
            " Owner"
        ],
        "Action": [
            "want",
            "reset",
            "take",
            "can",
            "ensure",
            "have",
            "access"
        ],
        "Entity": [
            "reset",
            "environment",
            "take",
            "staging",
            "max",
            "permissions",
            "can",
            "ensure",
            "testers",
            "access"
        ]
    },
    {
        "Text": "#G02# As a user, I want to have accurate and complete data related to PPoPCode and PPoPCongressionalDistrict.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "have",
            "complete"
        ],
        "Entity": [
            "data"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to clarify to users what exactly is triggering the CFDA error code in each case.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "clarify",
            "code",
            "case"
        ],
        "Entity": [
            "users",
            "error",
            "code",
            "case"
        ]
    },
    {
        "Text": "#G02# As a broker team member, I want to make some updates to the SQL codes for clarity.",
        "Persona": [
            " broker team member"
        ],
        "Action": [
            "want",
            "make",
            "updates",
            "codes"
        ],
        "Entity": [
            "make",
            "updates",
            "codes",
            "clarity"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to have all derived data elements derived properly.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "have",
            "derived",
            "derived"
        ],
        "Entity": [
            "all",
            "data",
            "elements"
        ]
    },
    {
        "Text": "#G02# As a data user, I want to see the office names derived from office codes, so that I can have appropriate context for understanding them.",
        "Persona": [
            " data user"
        ],
        "Action": [
            "want",
            "see",
            "names",
            "derived",
            "codes",
            "can",
            "have",
            "appropriate"
        ],
        "Entity": [
            "see",
            "office",
            "names",
            "office",
            "codes",
            "can",
            "context",
            "understanding"
        ]
    },
    {
        "Text": "#G02# As a broker team member, I want to ensure the Broker resources, validations, and P&P pages are updated appropriately for the launch of FABS and DAIMS v1.1.",
        "Persona": [
            " broker team member"
        ],
        "Action": [
            "want",
            "ensure",
            "broker",
            "pages",
            "are",
            "updated",
            "launch"
        ],
        "Entity": [
            "ensure",
            "broker",
            "resources",
            "validations",
            "pages",
            "launch"
        ]
    },
    {
        "Text": "#G02# As a broker team member, I want to derive FundingAgencyCode, so that the data quality and completeness improves.",
        "Persona": [
            " broker team member"
        ],
        "Action": [
            "want",
            "derive",
            "improves"
        ],
        "Entity": [
            "data",
            "quality",
            "completeness",
            "improves"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to use the schema v1.1 headers in my FABS file.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "use",
            "file"
        ],
        "Entity": [
            "use",
            "schema",
            "headers",
            "file"
        ]
    },
    {
        "Text": "#G02# As a agency user, I want to map the FederalActionObligation properly to the Atom Feed.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "map",
            "feed"
        ],
        "Entity": [
            "map",
            "atom",
            "feed"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to have PPoPZIP+4 work the same as the Legal Entity ZIP validations.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "have",
            "work",
            "zip"
        ],
        "Entity": [
            "work",
            "entity",
            "zip",
            "validations"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to link the SAMPLE FILE on the \"What you want  to submit\" dialog to point to the correct file, so that I have an accurate reference for my agency submissions.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "link",
            "sample",
            "file",
            "want",
            "point",
            "correct",
            "file",
            "have",
            "reference"
        ],
        "Entity": [
            "link",
            "sample",
            "file",
            "you",
            "dialog",
            "point",
            "file",
            "reference",
            "agency",
            "submissions"
        ]
    },
    {
        "Text": "#G02# As a user, I want to access the raw agency published files from FABS via USAspending.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "access",
            "files"
        ],
        "Entity": [
            "access",
            "raw",
            "agency",
            "files"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to determine how agencies will generate and validate D Files from FABS and FPDS data.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "determine",
            "will",
            "generate",
            "validate",
            "files"
        ],
        "Entity": [
            "how",
            "agencies",
            "will",
            "files",
            "data"
        ]
    },
    {
        "Text": "#G02# As a user, I want to generate and validate D Files from FABS and FPDS data.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "generate",
            "validate",
            "files"
        ],
        "Entity": [
            "files",
            "data"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to receive a more helpful file-level error when I upload a file with the wrong extension.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "receive",
            "upload",
            "file",
            "wrong"
        ],
        "Entity": [
            "more",
            "error",
            "file",
            "wrong",
            "extension"
        ]
    },
    {
        "Text": "#G02# As a tester, I want to have access to test features in environments other than Staging, so that I can test any nonProd feature in any environment.",
        "Persona": [
            " tester"
        ],
        "Action": [
            "want",
            "have",
            "access",
            "test",
            "features",
            "can",
            "test",
            "feature"
        ],
        "Entity": [
            "access",
            "test",
            "features",
            "environments",
            "staging",
            "can",
            "test",
            "feature",
            "environment"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to submission errors to accurately represent FABS errors, so that I know why my submission didn't work.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "represent",
            "know",
            "work"
        ],
        "Entity": [
            "submission",
            "errors",
            "errors",
            "know",
            "why",
            "submission",
            "didn't",
            "work"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to accurately see who created a submission, so that I'm not confused about who last updated a submission.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "see",
            "created",
            "confused",
            "last",
            "updated"
        ],
        "Entity": [
            "see",
            "who",
            "submission",
            "who",
            "last",
            "submission"
        ]
    },
    {
        "Text": "#G02# As an Agency user, I want to better understand my file-level errors.",
        "Persona": [
            " Agency user"
        ],
        "Action": [
            "want",
            "better",
            "understand"
        ],
        "Entity": [
            "better",
            "errors"
        ]
    },
    {
        "Text": "#G02# As a Developer , I want to provide FABS groups that function under the FREC paradigm.",
        "Persona": [
            " Developer "
        ],
        "Action": [
            "want",
            "provide",
            "groups",
            "function"
        ],
        "Entity": [
            "groups",
            "function",
            "paradigm"
        ]
    },
    {
        "Text": "#G02# As a tester, I want to ensure that FABS is deriving fields properly through a robust test file plus a follow up check.",
        "Persona": [
            " tester"
        ],
        "Action": [
            "want",
            "ensure",
            "deriving",
            "fields",
            "test",
            "file",
            "follow",
            "check"
        ],
        "Entity": [
            "ensure",
            "deriving",
            "fields",
            "test",
            "file",
            "plus",
            "follow",
            "check"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to submit records for individual recipients without receiving a DUNS error.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "submit",
            "records",
            "receiving"
        ],
        "Entity": [
            "records",
            "individual",
            "recipients",
            "receiving",
            "duns",
            "error"
        ]
    },
    {
        "Text": "#G02# As a Developer, I want to prevent duplicate transactions from being published and deal with the time gap between validation and the publishing decision.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "prevent",
            "duplicate",
            "deal",
            "time",
            "gap"
        ],
        "Entity": [
            "duplicate",
            "transactions",
            "being",
            "deal",
            "time",
            "gap",
            "validation",
            "publishing",
            "decision"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to submit a citywide as a PPoPZIP and pass validations.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "submit",
            "pass"
        ],
        "Entity": [
            "pass",
            "validations"
        ]
    },
    {
        "Text": "#G02# As a Broker user, I want to have updated error codes that accurately reflect the logic and provide enough information, so that I can fix my submission.",
        "Persona": [
            " Broker user"
        ],
        "Action": [
            "want",
            "have",
            "updated",
            "codes",
            "reflect",
            "provide",
            "can",
            "fix"
        ],
        "Entity": [
            "error",
            "codes",
            "logic",
            "enough",
            "information",
            "can",
            "fix",
            "submission"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to leave off the last 4 digits of the ZIP without an error, so that I can complete my submissions.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "leave",
            "last",
            "zip",
            "can",
            "complete"
        ],
        "Entity": [
            "leave",
            "off",
            "last",
            "digits",
            "zip",
            "error",
            "can",
            "submissions"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to make sure the historical data includes all necessary columns, so that the information in the database is correct.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "make",
            "includes",
            "correct"
        ],
        "Entity": [
            "make",
            "data",
            "all",
            "necessary",
            "columns",
            "information",
            "database"
        ]
    },
    {
        "Text": "#G02# As a data user, I want to access two additional fields from the FPDS data pull.",
        "Persona": [
            " data user"
        ],
        "Action": [
            "want",
            "access",
            "fields",
            "pull"
        ],
        "Entity": [
            "access",
            "two",
            "fields",
            "data",
            "pull"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to download the uploaded FABS file, so that I can get the uploaded file.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "download",
            "file",
            "can",
            "get",
            "file"
        ],
        "Entity": [
            "file",
            "can",
            "file"
        ]
    },
    {
        "Text": "#G02# As a Developer I want to quickly access Broker application data, so that I can investigate issues.",
        "Persona": [
            " Developer I want to quickly access Broker application data"
        ],
        "Action": [
            "can",
            "investigate",
            "issues"
        ],
        "Entity": [
            "can",
            "issues"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to have read-only access to DABS, so that I can view DABS pages without wanting two sets of permissions.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "have",
            "access",
            "dabs",
            "can",
            "view",
            "dabs",
            "pages",
            "sets"
        ],
        "Entity": [
            "access",
            "dabs",
            "can",
            "view",
            "dabs",
            "pages",
            "two",
            "sets",
            "permissions"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to have my validations run in a reasonable amount of time.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "have",
            "run",
            "amount",
            "time"
        ],
        "Entity": [
            "validations",
            "run",
            "amount",
            "time"
        ]
    },
    {
        "Text": "#G02# As a FABS user, I want to see correct status labels on the Submission Dashboard, so that I can quickly see my submission history.",
        "Persona": [
            " FABS user"
        ],
        "Action": [
            "want",
            "see",
            "correct",
            "labels",
            "can",
            "see"
        ],
        "Entity": [
            "see",
            "status",
            "labels",
            "submission",
            "dashboard",
            "can",
            "see",
            "submission",
            "history"
        ]
    },
    {
        "Text": "#G02# As an agency user, I want to submit my data elements surrounded by quotation marks, so that Excel won't strip off leading and trailing zeroes.",
        "Persona": [
            " agency user"
        ],
        "Action": [
            "want",
            "submit",
            "marks",
            "excel",
            "strip",
            "zeroes"
        ],
        "Entity": [
            "data",
            "elements",
            "quotation",
            "marks",
            "strip",
            "off",
            "leading",
            "trailing",
            "zeroes"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to edit a dataset I have published, So that I can correct or enhance existing data.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "edit",
            "have",
            "can",
            "correct",
            "enhance"
        ],
        "Entity": [
            "able",
            "edit",
            "can",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to edit the model of data I have already imported, So that I can fix bugs or make enhancements in the API built for my data.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "edit",
            "model",
            "have",
            "can",
            "fix",
            "bugs",
            "make",
            "built"
        ],
        "Entity": [
            "able",
            "edit",
            "model",
            "data",
            "can",
            "fix",
            "bugs",
            "make",
            "enhancements",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to delete a dataset I have published, So that I can remove unwanted data from OpenSpending.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "delete",
            "have",
            "can",
            "remove"
        ],
        "Entity": [
            "able",
            "can",
            "remove",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Platform Administrator, I want to be able to Hide any dataset already added as Public, So that I can maintain Public/Hidden status for other users.",
        "Persona": [
            " Platform Administrator"
        ],
        "Action": [
            "want",
            "hide",
            "can",
            "maintain"
        ],
        "Entity": [
            "able",
            "hide",
            "public",
            "can",
            "status",
            "users"
        ]
    },
    {
        "Text": "#G05# As a Platform Administrator, I want to have a view on all datasets published by all users, So that I can perform management actions on any dataset.",
        "Persona": [
            " Platform Administrator"
        ],
        "Action": [
            "want",
            "have",
            "view",
            "can",
            "perform"
        ],
        "Entity": [
            "view",
            "all",
            "all",
            "users",
            "can",
            "management",
            "actions"
        ]
    },
    {
        "Text": "#G05# As a Platform Administrator, I want to be able to delete any dataset published, So that I can deal with takedown requests, or clean up test datasets.",
        "Persona": [
            " Platform Administrator"
        ],
        "Action": [
            "want",
            "delete",
            "can",
            "deal",
            "requests",
            "clean",
            "test"
        ],
        "Entity": [
            "able",
            "can",
            "deal",
            "requests",
            "clean",
            "test"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to edit the data source of data I have already imported, So that I can fix bugs or make enhancements in the API built for my data.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "edit",
            "have",
            "can",
            "fix",
            "bugs",
            "make",
            "built"
        ],
        "Entity": [
            "able",
            "edit",
            "data",
            "source",
            "data",
            "can",
            "fix",
            "bugs",
            "make",
            "enhancements",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to have the Packager support Constants, So that I can model dimensions that may not exist in the source file.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "have",
            "support",
            "can",
            "model",
            "dimensions",
            "may",
            "exist",
            "file"
        ],
        "Entity": [
            "support",
            "constants",
            "can",
            "model",
            "dimensions",
            "may",
            "source",
            "file"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to import data in Excel, So that I do not have to convert data formats in order to use the data packager.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "import",
            "excel",
            "have",
            "convert",
            "formats",
            "order",
            "use"
        ],
        "Entity": [
            "able",
            "import",
            "data",
            "convert",
            "data",
            "formats",
            "order",
            "use",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to know what my data needs to be able to be visualised on a map, So that I can visualise it on a map.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "know",
            "needs",
            "map",
            "can",
            "map"
        ],
        "Entity": [
            "know",
            "data",
            "needs",
            "able",
            "map",
            "can",
            "map"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to import data in JSON, So that I do not have to convert data formats in order to use the data packager.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "import",
            "have",
            "convert",
            "formats",
            "order",
            "use"
        ],
        "Entity": [
            "able",
            "import",
            "data",
            "convert",
            "data",
            "formats",
            "order",
            "use",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to import data from a Google Spreadsheet, So that I do not have to convert data formats in order to use the data packager.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "import",
            "have",
            "convert",
            "formats",
            "order",
            "use"
        ],
        "Entity": [
            "able",
            "import",
            "data",
            "spreadsheet",
            "convert",
            "data",
            "formats",
            "order",
            "use",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to import data from Fiscal Data Package descriptor file, So that I do not have to convert data formats in order to use the data packager.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "import",
            "package",
            "file",
            "have",
            "convert",
            "formats",
            "order",
            "use"
        ],
        "Entity": [
            "able",
            "import",
            "data",
            "fiscal",
            "data",
            "package",
            "file",
            "convert",
            "data",
            "formats",
            "order",
            "use",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to provide the Platform Administrator with additional GeoJSON sources, So that I can improve the map-based visualisations of my data.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "provide",
            "can",
            "improve"
        ],
        "Entity": [
            "able",
            "platform",
            "administrator",
            "sources",
            "can",
            "improve",
            "visualisations",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to filter, sort and aggregate data by multiple dimensions and measures, So that I can get more granular views on the data.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "filter",
            "sort",
            "aggregate",
            "dimensions",
            "measures",
            "can",
            "get",
            "views"
        ],
        "Entity": [
            "able",
            "filter",
            "sort",
            "aggregate",
            "data",
            "multiple",
            "dimensions",
            "measures",
            "can",
            "more",
            "views",
            "data"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to download a CSV of the data that is used in any visualisation I am viewing, So that I can use the data in other tools.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "download",
            "can",
            "use",
            "tools"
        ],
        "Entity": [
            "able",
            "data",
            "visualisation",
            "viewing",
            "can",
            "use",
            "data",
            "tools"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to change the display of all monetary measures across a set of currencies, So that I can understand localised amounts in non-localised figures.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "change",
            "display",
            "measures",
            "set",
            "can",
            "understand",
            "localised",
            "amounts",
            "figures"
        ],
        "Entity": [
            "able",
            "change",
            "display",
            "all",
            "measures",
            "set",
            "currencies",
            "can",
            "amounts",
            "figures"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to see textual descriptions that accompany embedded visualisations, So that I can more easily understand what I am viewing.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "see",
            "accompany",
            "embedded",
            "can",
            "understand"
        ],
        "Entity": [
            "see",
            "descriptions",
            "visualisations",
            "can",
            "more",
            "viewing"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to share a view state as a URL to social networks, So that I can share data that I have found with others.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "share",
            "view",
            "state",
            "networks",
            "can",
            "share",
            "have",
            "found"
        ],
        "Entity": [
            "able",
            "share",
            "view",
            "state",
            "social",
            "networks",
            "can",
            "share",
            "data",
            "found"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to download an image ofa particular view state, So that I can use it offline.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "download",
            "image",
            "view",
            "state",
            "can",
            "use"
        ],
        "Entity": [
            "able",
            "image",
            "particular",
            "view",
            "state",
            "can",
            "use"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to share an image of a particular view state to the social networks that support this, So that I can provide richer context in those communication channels for data I am sharing.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "share",
            "image",
            "view",
            "state",
            "networks",
            "support",
            "can",
            "provide",
            "channels"
        ],
        "Entity": [
            "able",
            "share",
            "image",
            "particular",
            "view",
            "state",
            "social",
            "networks",
            "support",
            "can",
            "context",
            "communication",
            "channels",
            "data",
            "sharing"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to have stepped zoom on map visualisations, So that I can have better control over the navigation experience inside a map view.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "have",
            "stepped",
            "zoom",
            "map",
            "can",
            "have",
            "better",
            "control",
            "experience",
            "map",
            "view"
        ],
        "Entity": [
            "able",
            "zoom",
            "map",
            "visualisations",
            "can",
            "better",
            "control",
            "over",
            "navigation",
            "experience",
            "inside",
            "map",
            "view"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to have consistent use of colour on map visualisations, So that I can better understand the visual logic of the map view.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "have",
            "use",
            "colour",
            "map",
            "can",
            "better",
            "understand",
            "map",
            "view"
        ],
        "Entity": [
            "use",
            "colour",
            "map",
            "visualisations",
            "can",
            "better",
            "visual",
            "logic",
            "map",
            "view"
        ]
    },
    {
        "Text": "#G05# As a Developer, I want to be able to customise the Brand Name and Icon, and Primary Color of all frontend Javascript apps, So that I can customise the branding for my own needs.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "customise",
            "brand",
            "name",
            "color",
            "can",
            "customise",
            "own",
            "needs"
        ],
        "Entity": [
            "able",
            "brand",
            "name",
            "icon",
            "primary",
            "color",
            "all",
            "can",
            "branding",
            "needs"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to understand if a user is a Publisher, So that I can offer functionality based on Dataset Publisher privileges.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "understand",
            "can",
            "offer",
            "based",
            "privileges"
        ],
        "Entity": [
            "able",
            "user",
            "publisher",
            "can",
            "offer",
            "publisher",
            "privileges"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to understand if a user is an Administrator, So that I can offer functionality based on Platform Administration privileges.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "understand",
            "can",
            "offer",
            "based",
            "privileges"
        ],
        "Entity": [
            "able",
            "user",
            "administrator",
            "can",
            "offer",
            "platform",
            "administration",
            "privileges"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to get bordering regions|cities when I query a region|city, So that I can provider wider visual context for mapping visualisations.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "get",
            "query",
            "can"
        ],
        "Entity": [
            "able",
            "query",
            "can",
            "provider",
            "visual",
            "context",
            "mapping",
            "visualisations"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to dynamically request polygons based on the query made, So that I can provide maps that match the query.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "request",
            "based",
            "query",
            "made",
            "can",
            "provide",
            "maps",
            "match",
            "query"
        ],
        "Entity": [
            "able",
            "request",
            "polygons",
            "query",
            "can",
            "maps",
            "match",
            "query"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to have a flexible API using HASC codes for countries, regions and cities, So that I can visualise budget data on maps.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "have",
            "using",
            "codes",
            "can",
            "budget",
            "maps"
        ],
        "Entity": [
            "using",
            "codes",
            "countries",
            "regions",
            "cities",
            "can",
            "budget",
            "data",
            "maps"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to get a CSV output of any cube-based query, So that I can use work with tools that read CSV.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "get",
            "output",
            "query",
            "can",
            "use",
            "work",
            "tools",
            "read"
        ],
        "Entity": [
            "able",
            "output",
            "query",
            "can",
            "use",
            "work",
            "tools",
            "read"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to get a set of monetary measures transferred to different currencies, So that I can use this in scenarios that might enable comparison by normalisation.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "get",
            "set",
            "measures",
            "transferred",
            "can",
            "use",
            "might",
            "enable"
        ],
        "Entity": [
            "able",
            "set",
            "measures",
            "currencies",
            "can",
            "use",
            "scenarios",
            "might",
            "comparison",
            "normalisation"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to use metadata to get results from multiple datasets, So that I can build user experiences based on more than one dataset more easily.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "use",
            "get",
            "results",
            "can",
            "build",
            "experiences",
            "based"
        ],
        "Entity": [
            "able",
            "use",
            "results",
            "multiple",
            "can",
            "build",
            "user",
            "experiences",
            "more",
            "one",
            "more"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to use data to get results from multiple datasets, So that I can build user experiences based on more than one dataset more easily.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "use",
            "get",
            "results",
            "can",
            "build",
            "experiences",
            "based"
        ],
        "Entity": [
            "able",
            "use",
            "data",
            "results",
            "multiple",
            "can",
            "build",
            "user",
            "experiences",
            "more",
            "one",
            "more"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to normalise measures by population, So that I work with datasets in reference to their contextual constraints.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "normalise",
            "measures",
            "work",
            "reference"
        ],
        "Entity": [
            "able",
            "measures",
            "population",
            "work",
            "reference",
            "constraints"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to normalise measures by geographical area, So that I work with datasets in reference to their contextual constraints.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "normalise",
            "measures",
            "work",
            "reference"
        ],
        "Entity": [
            "able",
            "measures",
            "area",
            "work",
            "reference",
            "constraints"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to normalise measures by GDP, so I work with datasets in reference to their contextual constraints.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "normalise",
            "measures",
            "work",
            "reference"
        ],
        "Entity": [
            "able",
            "measures",
            "work",
            "reference",
            "constraints"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to normalise measures by GINI and related socioeconomic indexes, So that I work with datasets in reference to their contextual constraints.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "normalise",
            "measures",
            "indexes",
            "work",
            "reference"
        ],
        "Entity": [
            "able",
            "measures",
            "indexes",
            "work",
            "reference",
            "constraints"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to get a relative percentage of a measure to the total of the dataset it comes from, So that I can build alternative displays of the data.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "get",
            "measure",
            "total",
            "comes",
            "can",
            "build",
            "displays"
        ],
        "Entity": [
            "able",
            "relative",
            "percentage",
            "measure",
            "total",
            "comes",
            "can",
            "build",
            "alternative",
            "displays",
            "data"
        ]
    },
    {
        "Text": "#G05# As an API User, I want to be able to persistently store visualisation state in the database, So that such can be shared more easily and contribute to a visualisation gallery.",
        "Persona": [
            " API User"
        ],
        "Action": [
            "want",
            "store",
            "state",
            "can",
            "contribute"
        ],
        "Entity": [
            "able",
            "store",
            "visualisation",
            "state",
            "database",
            "can",
            "more",
            "visualisation",
            "gallery"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to have my dataset update automatically as the source file/files changes, So that OpenSpending always shows current data.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "have",
            "update",
            "changes",
            "shows"
        ],
        "Entity": [
            "update",
            "source",
            "changes",
            "shows",
            "current",
            "data"
        ]
    },
    {
        "Text": "#G05# As an OpenSpending Community Member, I want to have a blog that highlights any and all projects in the open fiscal space, So that I can relate to openspending.org as the central hub of fiscal openness.",
        "Persona": [
            " OpenSpending Community Member"
        ],
        "Action": [
            "want",
            "have",
            "highlights",
            "projects",
            "open",
            "space",
            "can",
            "relate"
        ],
        "Entity": [
            "highlights",
            "all",
            "projects",
            "open",
            "fiscal",
            "space",
            "can",
            "central",
            "hub",
            "fiscal",
            "openness"
        ]
    },
    {
        "Text": "#G05# As a User, I want to be able to set my own username, So that my data is more easily discoverable.",
        "Persona": [
            " User"
        ],
        "Action": [
            "want",
            "set",
            "own"
        ],
        "Entity": [
            "able",
            "set",
            "data",
            "more"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to be able to add a dataset in a Hidden state, So that I can work on a dataset before having it discoverable via OpenSpending user interfaces.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "add",
            "hidden",
            "state",
            "can",
            "work"
        ],
        "Entity": [
            "able",
            "state",
            "can",
            "work",
            "user",
            "interfaces"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to have a view on all the datasets I have published, So that I can perform management actions on my own datasets.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "have",
            "view",
            "have",
            "can",
            "perform",
            "own"
        ],
        "Entity": [
            "view",
            "all",
            "can",
            "management",
            "actions"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to have a functioning Python Client, So that I can add data to the datastore in bulk from the command line or my own programs.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "add",
            "bulk",
            "command",
            "line",
            "own",
            "programs"
        ],
        "Entity": [
            "functioning",
            "python",
            "client",
            "can",
            "data",
            "bulk",
            "command",
            "line",
            "programs"
        ]
    },
    {
        "Text": "#G05# As an OpenSpending Community Member, I want to have an app where I can find examples of use of fiscal data visualisations, So that I can find guidance in creating my own with Open Spending.",
        "Persona": [
            " OpenSpending Community Member"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "find",
            "examples",
            "use",
            "can",
            "find",
            "creating",
            "own",
            "open",
            "spending"
        ],
        "Entity": [
            "where",
            "can",
            "find",
            "examples",
            "use",
            "fiscal",
            "data",
            "visualisations",
            "can",
            "find",
            "guidance",
            "open",
            "spending"
        ]
    },
    {
        "Text": "#G05# As a Data Publishing User, I want to know if my CSV file is valid, So that I can fix possible data issues before publishing it on Open Spending.",
        "Persona": [
            " Data Publishing User"
        ],
        "Action": [
            "want",
            "know",
            "file",
            "can",
            "fix",
            "issues",
            "open",
            "spending"
        ],
        "Entity": [
            "know",
            "file",
            "can",
            "fix",
            "possible",
            "data",
            "issues",
            "publishing",
            "open",
            "spending"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to be able to search any dataset published and publicly accessible by their title and metadata, So that I can find the datasets I'm interested in.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "search",
            "title",
            "can",
            "find"
        ],
        "Entity": [
            "able",
            "search",
            "title",
            "can",
            "find"
        ]
    },
    {
        "Text": "#G05# As a Data Consuming User, I want to visualize by default in treemap, bubble tree, map and pivot table the most recent year when my dataset contain multiple years, So that I'm not confused with the amounts.",
        "Persona": [
            " Data Consuming User"
        ],
        "Action": [
            "want",
            "visualize",
            "default",
            "bubble",
            "tree",
            "map",
            "pivot",
            "table",
            "contain",
            "confused",
            "amounts"
        ],
        "Entity": [
            "default",
            "bubble",
            "tree",
            "map",
            "pivot",
            "table",
            "most",
            "year",
            "multiple",
            "years",
            "amounts"
        ]
    },
    {
        "Text": "#G05# As an API user, I want to be able to change the colors of the embedded visualisations in my own platform, So that I can customize the visualisations.",
        "Persona": [
            " API user"
        ],
        "Action": [
            "want",
            "change",
            "colors",
            "embedded",
            "own",
            "can",
            "customize"
        ],
        "Entity": [
            "able",
            "change",
            "colors",
            "visualisations",
            "platform",
            "can",
            "visualisations"
        ]
    },
    {
        "Text": "#G05# As an API user, I want to be able to change some of the styling of the embedded Viewer in my own platform, So that I can brand it to my own organisation's color scheme.",
        "Persona": [
            " API user"
        ],
        "Action": [
            "want",
            "change",
            "styling",
            "embedded",
            "own",
            "can",
            "brand",
            "own",
            "color",
            "scheme"
        ],
        "Entity": [
            "able",
            "change",
            "viewer",
            "platform",
            "can",
            "brand",
            "color",
            "scheme"
        ]
    },
    {
        "Text": "#G05# As a Platform administrator, I want to be able to translate the data types hierarchies of the Viewer while in embed mode, So that my users can understand the interface in their native language.",
        "Persona": [
            " Platform administrator"
        ],
        "Action": [
            "want",
            "translate",
            "types",
            "while",
            "embed",
            "can",
            "understand"
        ],
        "Entity": [
            "able",
            "data",
            "types",
            "hierarchies",
            "viewer",
            "while",
            "mode",
            "users",
            "can",
            "interface",
            "native",
            "language"
        ]
    }
]