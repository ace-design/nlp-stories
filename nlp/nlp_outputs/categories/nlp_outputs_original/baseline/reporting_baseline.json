[
    {
        "PID": "#G02#",
        "Text": "#G02# As a Data user, I want to have the 12-19-2017 deletions processed.",
        "Persona": [
            "Data user"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "processed"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "12-19-2017 deletions"
            ],
            "Secondary Entity": [
                ""
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Data user",
                "have"
            ]
        ],
        "Targets": [
            [
                "processed",
                "12-19-2017 deletions"
            ],
            [
                "have",
                "12-19-2017 deletions"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to redesign the Resources page, so that it matches the new Broker design styles.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "redesign"
            ],
            "Secondary Action": [
                "matches"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "Resources page"
            ],
            "Secondary Entity": [
                "new Broker design styles"
            ]
        },
        "Benefit": "it matches the new Broker design styles",
        "Triggers": [
            [
                "UI designer",
                "redesign"
            ]
        ],
        "Targets": [
            [
                "redesign",
                "Resources page"
            ],
            [
                "matches",
                "new Broker design styles"
            ]
        ],
        "Contains": [
            [
                "Resources page",
                "new Broker design styles"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to report to the Agencies about user testing, so that they are aware of their contributions to making Broker a better UX.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "report"
            ],
            "Secondary Action": [
                "aware",
                "making"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "user testing"
            ],
            "Secondary Entity": [
                "Agencies",
                "contributions",
                "Broker",
                "better UX"
            ]
        },
        "Benefit": "they are aware of their contributions to making Broker a better UX",
        "Triggers": [
            [
                "UI designer",
                "report"
            ]
        ],
        "Targets": [
            [
                "report",
                "user testing"
            ],
            [
                "aware",
                "contributions"
            ],
            [
                "making",
                "Broker"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to move on to round 2 of DABS or FABS landing page edits, so that I can get approvals from leadership.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "move on"
            ],
            "Secondary Action": [
                "get"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "round 2"
            ],
            "Secondary Entity": [
                "FABS landing page edits",
                "DABS",
                "approvals",
                "leadership"
            ]
        },
        "Benefit": "I can get approvals from leadership",
        "Triggers": [
            [
                "UI designer",
                "move on"
            ]
        ],
        "Targets": [
            [
                "move on",
                "round 2"
            ],
            [
                "get",
                "approvals"
            ]
        ],
        "Contains": [
            [
                "DABS",
                "round 2"
            ],
            [
                "FABS landing page edits",
                "round 2"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to move on to round 3 of the Help page edits, so that I can get approvals from leadership.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "move on"
            ],
            "Secondary Action": [
                "get"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "round 3"
            ],
            "Secondary Entity": [
                "Help page edits",
                "approvals",
                "leadership"
            ]
        },
        "Benefit": "I can get approvals from leadership",
        "Triggers": [
            [
                "UI designer",
                "move on"
            ]
        ],
        "Targets": [
            [
                "move on",
                "round 3"
            ],
            [
                "get",
                "approvals"
            ]
        ],
        "Contains": [
            [
                "Help page edits",
                "round 3"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want to be able to log better, so that I can troubleshoot issues with particular submissions and functions.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "log better"
            ],
            "Secondary Action": [
                "troubleshoot"
            ]
        },
        "Entity": {
            "Primary Entity": [
                ""
            ],
            "Secondary Entity": [
                "particular submissions",
                "issues",
                "functions"
            ]
        },
        "Benefit": "I can troubleshoot issues with particular submissions and functions",
        "Triggers": [
            [
                "Developer",
                "log better"
            ]
        ],
        "Targets": [
            [
                "troubleshoot",
                "issues"
            ]
        ],
        "Contains": [
            [
                "functions",
                "issues"
            ],
            [
                "particular submissions",
                "issues"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer, I want to add the updates on a FABS submission to be modified when the publishStatus changes, so that I know when the status of the submission has changed.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "add"
            ],
            "Secondary Action": [
                "know",
                "be modified",
                "changes"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "updates"
            ],
            "Secondary Entity": [
                "FABS submission",
                "publishStatus",
                "status",
                "submission"
            ]
        },
        "Benefit": "I know when the status of the submission has changed",
        "Triggers": [
            [
                "Developer",
                "add"
            ]
        ],
        "Targets": [
            [
                "add",
                "updates"
            ],
            [
                "know",
                "status"
            ],
            [
                "changes",
                "publishStatus"
            ]
        ],
        "Contains": [
            [
                "submission",
                "status"
            ],
            [
                "FABS submission",
                "updates"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a DevOps engineer, I want New Relic to provide useful data across all applications.",
        "Persona": [
            "DevOps engineer"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "provide"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "New Relic"
            ],
            "Secondary Entity": [
                "useful data",
                "all applications"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "DevOps engineer",
                "want"
            ]
        ],
        "Targets": [
            [
                "provide",
                "useful data"
            ],
            [
                "want",
                "New Relic"
            ]
        ],
        "Contains": [
            [
                "New Relic",
                "useful data"
            ],
            [
                "all applications",
                "useful data"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer,  I want to move on to round 2 of the Help page edits, so that I can get approvals from leadership.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "move on"
            ],
            "Secondary Action": [
                "get"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "round 2"
            ],
            "Secondary Entity": [
                "approvals",
                "Help page edits",
                "leadership"
            ]
        },
        "Benefit": "I can get approvals from leadership",
        "Triggers": [
            [
                "UI designer",
                "move on"
            ]
        ],
        "Targets": [
            [
                "move on",
                "round 2"
            ],
            [
                "get",
                "approvals"
            ]
        ],
        "Contains": [
            [
                "Help page edits",
                "round 2"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to move on to round 2 of Homepage edits, so that I can get approvals from leadership.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "move"
            ],
            "Secondary Action": [
                "get"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "round 2"
            ],
            "Secondary Entity": [
                "Homepage edits",
                "approvals",
                "leadership"
            ]
        },
        "Benefit": "I can get approvals from leadership",
        "Triggers": [
            [
                "UI designer",
                "move"
            ]
        ],
        "Targets": [
            [
                "get",
                "approvals"
            ],
            [
                "move",
                "round 2"
            ]
        ],
        "Contains": [
            [
                "Homepage edits",
                "round 2"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Broker user, I want to Upload and Validate the error message to have accurate text.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "Upload",
                "Validate"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "error message"
            ],
            "Secondary Entity": [
                "accurate text"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Broker user",
                "Upload"
            ],
            [
                "Broker user",
                "Validate"
            ]
        ],
        "Targets": [
            [
                "Validate",
                "error message"
            ],
            [
                "Upload",
                "error message"
            ]
        ],
        "Contains": [
            [
                "error message",
                "accurate text"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Broker user, I want the D1 file generation to be synced with the FPDS data load, so that I don't have to regenerate a file if no data has been updated.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "synced"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "D1 file generation"
            ],
            "Secondary Entity": [
                "FPDS data load",
                "file",
                "data"
            ]
        },
        "Benefit": "I don't have to regenerate a file if no data has been updated",
        "Triggers": [
            [
                "Broker user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "D1 file generation"
            ],
            [
                "synced",
                "FPDS data load"
            ],
            [
                "synced",
                "D1 file generation"
            ]
        ],
        "Contains": [
            [
                "file",
                "data"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Website user, I want to access published FABS files, so that I can see the new files as they come in.",
        "Persona": [
            "Website user"
        ],
        "Action": {
            "Primary Action": [
                "access"
            ],
            "Secondary Action": [
                "see"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "published FABS files"
            ],
            "Secondary Entity": [
                "new files"
            ]
        },
        "Benefit": "I can see the new files as they come in",
        "Triggers": [
            [
                "Website user",
                "access"
            ]
        ],
        "Targets": [
            [
                "access",
                "published FABS files"
            ],
            [
                "see",
                "new files"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an owner, I want to be sure that USAspending only send grant records to my system.",
        "Persona": [
            "owner"
        ],
        "Action": {
            "Primary Action": [
                "be sure"
            ],
            "Secondary Action": [
                "only send"
            ]
        },
        "Entity": {
            "Primary Entity": [
                ""
            ],
            "Secondary Entity": [
                "USAspending",
                "grant records",
                "system"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "owner",
                "be sure"
            ]
        ],
        "Targets": [
            [
                "only send",
                "grant records"
            ]
        ],
        "Contains": [
            [
                "system",
                "grant records"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer, I want to update the Broker validation rule table to account for the rule updates in DB-2213.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "update"
            ],
            "Secondary Action": [
                "account"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "Broker validation rule table"
            ],
            "Secondary Entity": [
                "rule updates",
                "DB-2213"
            ]
        },
        "Benefit": "account for the rule updates in DB-2213",
        "Triggers": [
            [
                "Developer",
                "update"
            ]
        ],
        "Targets": [
            [
                "update",
                "Broker validation rule table"
            ],
            [
                "account",
                "rule updates"
            ]
        ],
        "Contains": [
            [
                "DB-2213",
                "rule updates"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer, I want to add the GTAS window data to the database, so that I can ensure the site is locked down during the GTAS submission period.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "add"
            ],
            "Secondary Action": [
                "ensure",
                "locked down"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "GTAS window data"
            ],
            "Secondary Entity": [
                "site",
                "GTAS submission period",
                "database"
            ]
        },
        "Benefit": "I can ensure the site is locked down during the GTAS submission period",
        "Triggers": [
            [
                "Developer",
                "add"
            ]
        ],
        "Targets": [
            [
                "add",
                "GTAS window data"
            ],
            [
                "locked down",
                "site"
            ]
        ],
        "Contains": [
            [
                "database",
                "GTAS window data"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer, I want D Files generation requests to be managed and cached, so that duplicate requests do not cause performance issues.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "managed",
                "cached"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "D Files generation requests"
            ],
            "Secondary Entity": [
                "duplicate requests",
                "performance issues"
            ]
        },
        "Benefit": "duplicate requests do not cause performance issues",
        "Triggers": [
            [
                "Developer",
                "want"
            ]
        ],
        "Targets": [
            [
                "managed",
                "D Files generation requests"
            ],
            [
                "cached",
                "D Files generation requests"
            ],
            [
                "want",
                "D Files generation requests"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want to be able to include a large number of flexfields without performance impact.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "include"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "large number of flexfields"
            ],
            "Secondary Entity": [
                "performance impact"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Agency user",
                "include"
            ]
        ],
        "Targets": [
            [
                "include",
                "large number of flexfields"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Broker user, I want  to help create content mockups, so that I can submit my data efficiently.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "help create"
            ],
            "Secondary Action": [
                "submit"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "content mockups"
            ],
            "Secondary Entity": [
                "data"
            ]
        },
        "Benefit": "I can submit my data efficiently",
        "Triggers": [
            [
                "Broker user",
                "help create"
            ]
        ],
        "Targets": [
            [
                "submit",
                "data"
            ],
            [
                "help create",
                "content mockups"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to track the issues that come up in Tech Thursday, so that I know what to test and what want s to be fixed.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "track"
            ],
            "Secondary Action": [
                "know",
                "test",
                "fixed"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "issues"
            ],
            "Secondary Entity": [
                "Tech Thursday"
            ]
        },
        "Benefit": "I know what to test and what want s to be fixed",
        "Triggers": [
            [
                "UI designer",
                "track"
            ]
        ],
        "Targets": [
            [
                "fixed",
                "issues"
            ],
            [
                "track",
                "issues"
            ],
            [
                "know",
                "issues"
            ],
            [
                "test",
                "issues"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Owner, I want to create a user testing summary from the UI SME, so that I can know what UI improvements we will follow through on.",
        "Persona": [
            "Owner"
        ],
        "Action": {
            "Primary Action": [
                "create"
            ],
            "Secondary Action": [
                "know",
                "follow through"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "user testing summary"
            ],
            "Secondary Entity": [
                "UI SME",
                "UI improvements"
            ]
        },
        "Benefit": "I can know what UI improvements we will follow through on",
        "Triggers": [
            [
                "Owner",
                "create"
            ]
        ],
        "Targets": [
            [
                "create",
                "user testing summary"
            ],
            [
                "know",
                "UI improvements"
            ],
            [
                "follow through",
                "UI improvements"
            ]
        ],
        "Contains": [
            [
                "UI SME",
                "user testing summary"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to begin user testing, so that I can validate stakeholder UI improvement requests.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "begin"
            ],
            "Secondary Action": [
                "validate"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "user testing"
            ],
            "Secondary Entity": [
                "stakeholder UI improvement requests"
            ]
        },
        "Benefit": "I can validate stakeholder UI improvement requests",
        "Triggers": [
            [
                "UI designer",
                "begin"
            ]
        ],
        "Targets": [
            [
                "begin",
                "user testing"
            ],
            [
                "validate",
                "stakeholder UI improvement requests"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to schedule user testing, so that I can give the testers advanced notice to ensure buy-in.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "schedule"
            ],
            "Secondary Action": [
                "give",
                "ensure"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "user testing"
            ],
            "Secondary Entity": [
                "testers",
                "advanced notice",
                "buy-in"
            ]
        },
        "Benefit": "I can give the testers advanced notice to ensure buy-in",
        "Triggers": [
            [
                "UI designer",
                "schedule"
            ]
        ],
        "Targets": [
            [
                "schedule",
                "user testing"
            ],
            [
                "ensure",
                "buy-in"
            ],
            [
                "give",
                "advanced notice"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Owner, I want to design a schedule from the UI SME, so that I know the potential timeline of the UI improvements wanted.",
        "Persona": [
            "Owner"
        ],
        "Action": {
            "Primary Action": [
                "design"
            ],
            "Secondary Action": [
                "know"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "schedule"
            ],
            "Secondary Entity": [
                "potential timeline",
                "UI SME",
                "UI improvements"
            ]
        },
        "Benefit": "I know the potential timeline of the UI improvements wanted",
        "Triggers": [
            [
                "Owner",
                "design"
            ]
        ],
        "Targets": [
            [
                "design",
                "schedule"
            ],
            [
                "know",
                "potential timeline"
            ]
        ],
        "Contains": [
            [
                "UI SME",
                "schedule"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Owner, I want to design an audit from the UI SME, so that I know the potential scope of the UI improvements want ed.",
        "Persona": [
            "Owner"
        ],
        "Action": {
            "Primary Action": [
                "design"
            ],
            "Secondary Action": [
                "know"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "audit"
            ],
            "Secondary Entity": [
                "UI SME",
                "potential scope",
                "UI improvements"
            ]
        },
        "Benefit": "I know the potential scope of the UI improvements want ed",
        "Triggers": [
            [
                "Owner",
                "design"
            ]
        ],
        "Targets": [
            [
                "design",
                "audit"
            ],
            [
                "know",
                "potential scope"
            ]
        ],
        "Contains": [
            [
                "UI SME",
                "audit"
            ],
            [
                "potential scope",
                "UI improvements"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer, I want to prevent users from double publishing FABS submissions after refreshing, so that there are no duplicates.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "prevent"
            ],
            "Secondary Action": [
                "refreshing"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "double publishing FABS submissions"
            ],
            "Secondary Entity": [
                "users",
                "duplicates"
            ]
        },
        "Benefit": "there are no duplicates",
        "Triggers": [
            [
                "Developer",
                "prevent"
            ]
        ],
        "Targets": [
            [
                "prevent",
                "double publishing FABS submissions"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an data user, I want to receive updates to FABS records.",
        "Persona": [
            "data user"
        ],
        "Action": {
            "Primary Action": [
                "receive"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "updates"
            ],
            "Secondary Entity": [
                "FABS records"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "data user",
                "receive"
            ]
        ],
        "Targets": [
            [
                "receive",
                "updates"
            ]
        ],
        "Contains": [
            [
                "FABS records",
                "updates"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want to update the FABS sample file to remove FundingAgencyCode after FABS is updated to no longer require the header.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "update"
            ],
            "Secondary Action": [
                "remove",
                "no longer require"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FABS sample file"
            ],
            "Secondary Entity": [
                "FundingAgencyCode",
                "FABS",
                "header"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Developer",
                "update"
            ]
        ],
        "Targets": [
            [
                "update",
                "FABS sample file"
            ],
            [
                "remove",
                "FundingAgencyCode"
            ],
            [
                "no longer require",
                "header"
            ]
        ],
        "Contains": [
            [
                "FABS",
                "header"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to ensure that deleted FSRS records are not included in submissions.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "ensure"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                ""
            ],
            "Secondary Entity": [
                "deleted FSRS records",
                "submissions"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "ensure"
            ]
        ],
        "Targets": [],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a website user, I want to see updated financial assistance data daily.",
        "Persona": [
            "website user"
        ],
        "Action": {
            "Primary Action": [
                "see"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "updated financial assistance data daily"
            ],
            "Secondary Entity": [
                ""
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "website user",
                "see"
            ]
        ],
        "Targets": [
            [
                "see",
                "updated financial assistance data daily"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want the publish button in FABS to deactivate after I click it while the derivations are happening, so that I cannot click it multiple times for the same submission.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "deactivate",
                "click",
                "happening"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "publish button"
            ],
            "Secondary Entity": [
                "FABS",
                "derivations",
                "same submission"
            ]
        },
        "Benefit": "I cannot click it multiple times for the same submission",
        "Triggers": [
            [
                "user",
                "want"
            ]
        ],
        "Targets": [
            [
                "deactivate",
                "publish button"
            ],
            [
                "click",
                "publish button"
            ],
            [
                "want",
                "publish button"
            ]
        ],
        "Contains": [
            [
                "FABS",
                "publish button"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want to ensure that attempts to correct or delete non-existent records don't create new published data.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "ensure"
            ],
            "Secondary Action": [
                "correct",
                "delete"
            ]
        },
        "Entity": {
            "Primary Entity": [
                ""
            ],
            "Secondary Entity": [
                "attempts",
                "non-existent records",
                "new published data"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Developer",
                "ensure"
            ]
        ],
        "Targets": [
            [
                "correct",
                "non-existent records"
            ],
            [
                "delete",
                "non-existent records"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Owner, I want to reset the environment to only take Staging MAX permissions, so that I can ensure that the FABS testers no longer have access.",
        "Persona": [
            "Owner"
        ],
        "Action": {
            "Primary Action": [
                "reset"
            ],
            "Secondary Action": [
                "ensure",
                "only take",
                "no longer have"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "environment"
            ],
            "Secondary Entity": [
                "Staging MAX permissions",
                "FABS testers",
                "access"
            ]
        },
        "Benefit": "I can ensure that the FABS testers no longer have access",
        "Triggers": [
            [
                "Owner",
                "reset"
            ]
        ],
        "Targets": [
            [
                "reset",
                "environment"
            ],
            [
                "only take",
                "Staging MAX permissions"
            ],
            [
                "no longer have",
                "access"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want the flexfields in my submission file to appear in the warning and error files when the only error is a missing required element.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "appear in"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "flexfields"
            ],
            "Secondary Entity": [
                "only error",
                "missing required element",
                "submission file",
                "warning and error files"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "flexfields"
            ],
            [
                "appear in",
                "warning and error files"
            ]
        ],
        "Contains": [
            [
                "submission file",
                "flexfields"
            ],
            [
                "only error",
                "missing required element"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want to have accurate and complete data related to PPoPCode and PPoPCongressionalDistrict.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "accurate and complete data"
            ],
            "Secondary Entity": [
                "PPoPCode",
                "PPoPCongressionalDistrict"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "accurate and complete data"
            ]
        ],
        "Contains": [
            [
                "PPoPCode",
                "accurate and complete data"
            ],
            [
                "PPoPCongressionalDistrict",
                "accurate and complete data"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want the FABS validation rules to accept zero and blank for loan records.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "accept"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FABS validation rules"
            ],
            "Secondary Entity": [
                "zero",
                "blank",
                "loan records"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "FABS validation rules"
            ],
            [
                "accept",
                "zero"
            ],
            [
                "accept",
                "blank"
            ]
        ],
        "Contains": [
            [
                "loan records",
                "zero"
            ],
            [
                "loan records",
                "blank"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want FABS deployed into production, so I can submit my Financial Assistance data.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "submit",
                "deployed"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FABS"
            ],
            "Secondary Entity": [
                "production",
                "Financial Assistance data"
            ]
        },
        "Benefit": "I can submit my Financial Assistance data",
        "Triggers": [
            [
                "Agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "deployed",
                "production"
            ],
            [
                "submit",
                "Financial Assistance data"
            ],
            [
                "want",
                "FABS"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want to clarify to users what exactly is triggering the CFDA error code in each case.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "clarify"
            ],
            "Secondary Action": [
                "triggering"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "users"
            ],
            "Secondary Entity": [
                "CFDA error code",
                "each case",
                "what"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Developer",
                "clarify"
            ]
        ],
        "Targets": [
            [
                "clarify",
                "users"
            ],
            [
                "triggering",
                "CFDA error code"
            ],
            [
                "each case",
                "CFDA error code"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to be confident that the data coming from SAM is complete.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "be confident"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "data"
            ],
            "Secondary Entity": [
                "SAM"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "be confident"
            ]
        ],
        "Targets": [
            [
                "be confident",
                "data"
            ]
        ],
        "Contains": [
            [
                "SAM",
                "data"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want my domain models to be indexed properly, so that I can get validation results back in a reasonable amount of time.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "indexed properly",
                "get"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "domain models"
            ],
            "Secondary Entity": [
                "validation results",
                "reasonable amount of time"
            ]
        },
        "Benefit": "I can get validation results back in a reasonable amount of time",
        "Triggers": [
            [
                "Developer",
                "want"
            ]
        ],
        "Targets": [
            [
                "indexed properly",
                "domain models"
            ],
            [
                "get",
                "validation results"
            ],
            [
                "want",
                "domain models"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want the FABS validation rules to accept zero and blank for non-loan records.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "accept"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FABS validation rules"
            ],
            "Secondary Entity": [
                "zero",
                "blank",
                "non-loan records"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "FABS validation rules"
            ],
            [
                "accept",
                "zero"
            ],
            [
                "accept",
                "blank"
            ]
        ],
        "Contains": [
            [
                "non-loan records",
                "blank"
            ],
            [
                "non-loan records",
                "zero"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a broker team member, I want to make some updates to the SQL codes for clarity.",
        "Persona": [
            "broker team member"
        ],
        "Action": {
            "Primary Action": [
                "make"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "some updates"
            ],
            "Secondary Entity": [
                "SQL codes"
            ]
        },
        "Benefit": "for clarity",
        "Triggers": [
            [
                "broker team member",
                "make"
            ]
        ],
        "Targets": [
            [
                "make",
                "some updates"
            ]
        ],
        "Contains": [
            [
                "SQL codes",
                "some updates"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to have all derived data elements derived properly.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "derived properly"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "derived data elements"
            ],
            "Secondary Entity": [
                ""
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "derived data elements"
            ],
            [
                "derived properly",
                "derived data elements"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a broker team member, I want to add the 00***** and 00FORGN PPoPCode cases to the derivation logic.",
        "Persona": [
            "broker team member"
        ],
        "Action": {
            "Primary Action": [
                "add"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "00*****",
                "00FORGN PPoPCode cases"
            ],
            "Secondary Entity": [
                "derivation logic"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "broker team member",
                "add"
            ]
        ],
        "Targets": [
            [
                "add",
                "00*****"
            ],
            [
                "add",
                "00FORGN PPoPCode cases"
            ]
        ],
        "Contains": [
            [
                "derivation logic",
                "00FORGN PPoPCode cases"
            ],
            [
                "derivation logic",
                "00*****"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a data user, I want to see the office names derived from office codes, so that I can have appropriate context for understanding them.",
        "Persona": [
            "data user"
        ],
        "Action": {
            "Primary Action": [
                "see"
            ],
            "Secondary Action": [
                "have",
                "understanding"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "office names"
            ],
            "Secondary Entity": [
                "office codes",
                "appropriate context"
            ]
        },
        "Benefit": "I can have appropriate context for understanding them",
        "Triggers": [
            [
                "data user",
                "see"
            ]
        ],
        "Targets": [
            [
                "see",
                "office names"
            ],
            [
                "have",
                "appropriate context"
            ],
            [
                "understanding",
                "office codes"
            ]
        ],
        "Contains": [
            [
                "office codes",
                "office names"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a broker user, I want the historical FABS loader to derive fields, so that my agency codes are correct in the PublishedAwardFinancialAssistance table.",
        "Persona": [
            "broker user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "derive"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "historical FABS loader"
            ],
            "Secondary Entity": [
                "fields",
                "agency codes",
                "PublishedAwardFinancialAssistance table"
            ]
        },
        "Benefit": "my agency codes are correct in the PublishedAwardFinancialAssistance table",
        "Triggers": [
            [
                "broker user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "historical FABS loader"
            ],
            [
                "derive",
                "fields"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a broker team member, I want to ensure the Broker resources, validations, and P&P pages are updated appropriately for the launch of FABS and DAIMS v1.1.",
        "Persona": [
            "broker team member"
        ],
        "Action": {
            "Primary Action": [
                "ensure"
            ],
            "Secondary Action": [
                "updated appropriately"
            ]
        },
        "Entity": {
            "Primary Entity": [
                ""
            ],
            "Secondary Entity": [
                "Broker resources",
                "validations",
                "P&P pages",
                "launch",
                "FABS",
                "DAIMS v1.1"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "broker team member",
                "ensure"
            ]
        ],
        "Targets": [
            [
                "updated appropriately",
                "Broker resources"
            ],
            [
                "updated appropriately",
                "validations"
            ],
            [
                "updated appropriately",
                "P&P pages"
            ]
        ],
        "Contains": [
            [
                "launch",
                "FABS"
            ],
            [
                "launch",
                "DAIMS v1.1"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer, I want the data loaded from historical FABS to include the FREC derivations, so that I can have consistent FREC data for USASpending.gov.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "include",
                "have"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "data loaded"
            ],
            "Secondary Entity": [
                "historical FABS",
                "FREC derivations",
                "consistent FREC data",
                "USASpending.gov"
            ]
        },
        "Benefit": "I can have consistent FREC data for USASpending.gov",
        "Triggers": [
            [
                "Developer",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "data loaded"
            ],
            [
                "include",
                "FREC derivations"
            ],
            [
                "have",
                "consistent FREC data"
            ]
        ],
        "Contains": [
            [
                "historical FABS",
                "data loaded"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I don't want to see NASA grants displayed as contracts.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "don't want to see"
            ],
            "Secondary Action": [
                "displayed"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "NASA grants"
            ],
            "Secondary Entity": [
                "contracts"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "don't want to see"
            ]
        ],
        "Targets": [
            [
                "don't want to see",
                "NASA grants"
            ],
            [
                "displayed",
                "NASA grants"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want the DUNS validations to accept records whose ActionTypes are B, C, or D and the DUNS is registered in SAM, even though it may have expired.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "accept",
                "registered"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "DUNS validations"
            ],
            "Secondary Entity": [
                "records",
                "ActionTypes",
                "B",
                "C",
                "SAM",
                "D",
                "DUNS"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "DUNS validations"
            ],
            [
                "accept",
                "records"
            ],
            [
                "registered",
                "DUNS"
            ]
        ],
        "Contains": [
            [
                "ActionTypes",
                "C"
            ],
            [
                "SAM",
                "DUNS"
            ],
            [
                "records",
                "ActionTypes"
            ],
            [
                "ActionTypes",
                "B"
            ],
            [
                "ActionTypes",
                "D"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want the DUNS validations to accept records whose ActionDates are before the current registration date in SAM, but after the initial registration date.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "accept"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "DUNS validations"
            ],
            "Secondary Entity": [
                "ActionDates",
                "current registration date",
                "initial registration date",
                "records",
                "SAM"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "DUNS validations"
            ],
            [
                "accept",
                "records"
            ]
        ],
        "Contains": [
            [
                "records",
                "ActionDates"
            ],
            [
                "SAM",
                "records"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a broker team member, I want to derive FundingAgencyCode, so that the data quality and completeness improves.",
        "Persona": [
            "broker team member"
        ],
        "Action": {
            "Primary Action": [
                "derive"
            ],
            "Secondary Action": [
                "improves"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FundingAgencyCode"
            ],
            "Secondary Entity": [
                "completeness",
                "data quality"
            ]
        },
        "Benefit": "the data quality and completeness improves",
        "Triggers": [
            [
                "broker team member",
                "derive"
            ]
        ],
        "Targets": [
            [
                "derive",
                "FundingAgencyCode"
            ],
            [
                "improves",
                "completeness"
            ],
            [
                "improves",
                "data quality"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want the maximum length allowed for LegalEntityAddressLine3 to match Schema v1.1.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "match"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "maximum length allowed"
            ],
            "Secondary Entity": [
                "LegalEntityAddressLine3",
                "Schema v1.1"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "maximum length allowed"
            ],
            [
                "match",
                "Schema v1.1"
            ]
        ],
        "Contains": [
            [
                "LegalEntityAddressLine3",
                "maximum length allowed"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to use the schema v1.1 headers in my FABS file.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "use"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "schema v1.1 headers"
            ],
            "Secondary Entity": [
                "FABS file"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "use"
            ]
        ],
        "Targets": [
            [
                "use",
                "schema v1.1 headers"
            ]
        ],
        "Contains": [
            [
                "FABS file",
                "schema v1.1 headers"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a agency user, I want to map the FederalActionObligation properly to the Atom Feed.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "map"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FederalActionObligation"
            ],
            "Secondary Entity": [
                "Atom Feed"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "map"
            ]
        ],
        "Targets": [
            [
                "map",
                "FederalActionObligation"
            ]
        ],
        "Contains": [
            [
                "Atom Feed",
                "FederalActionObligation"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Broker user, I want to have PPoPZIP+4 work the same as the Legal Entity ZIP validations.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "work the same"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "PPoPZIP+4"
            ],
            "Secondary Entity": [
                "Legal Entity ZIP validations"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Broker user",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "PPoPZIP+4"
            ],
            [
                "work the same",
                "PPoPZIP+4"
            ],
            [
                "work the same",
                "Legal Entity ZIP validations"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to link the SAMPLE FILE on the \"What you want  to submit\" dialog to point to the correct file, so that I have an accurate reference for my agency submissions.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "link"
            ],
            "Secondary Action": [
                "point",
                "have"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "SAMPLE FILE"
            ],
            "Secondary Entity": [
                "\"What you want  to submit\" dialog",
                "correct file",
                "accurate reference",
                "agency submissions"
            ]
        },
        "Benefit": "I have an accurate reference for my agency submissions",
        "Triggers": [
            [
                "FABS user",
                "link"
            ]
        ],
        "Targets": [
            [
                "link",
                "SAMPLE FILE"
            ],
            [
                "point",
                "correct file"
            ],
            [
                "have",
                "accurate reference"
            ]
        ],
        "Contains": [
            [
                "\"What you want  to submit\" dialog",
                "SAMPLE FILE"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want FPDS data to be up-to-date daily.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "be up-to-date daily"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FPDS data"
            ],
            "Secondary Entity": [
                ""
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "FPDS data"
            ],
            [
                "be up-to-date daily",
                "FPDS data"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want to access the raw agency published files from FABS via USAspending.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "access"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "raw agency published files"
            ],
            "Secondary Entity": [
                "FABS",
                "USAspending"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "access"
            ]
        ],
        "Targets": [
            [
                "access",
                "raw agency published files"
            ]
        ],
        "Contains": [
            [
                "USAspending",
                "FABS"
            ],
            [
                "FABS",
                "raw agency published files"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want to determine how agencies will generate and validate D Files from FABS and FPDS data.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "determine"
            ],
            "Secondary Action": [
                "validate",
                "generate"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "how"
            ],
            "Secondary Entity": [
                "D Files",
                "FABS",
                "agencies",
                "FPDS data"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Developer",
                "determine"
            ]
        ],
        "Targets": [
            [
                "generate",
                "D Files"
            ],
            [
                "validate",
                "D Files"
            ],
            [
                "determine",
                "how"
            ]
        ],
        "Contains": [
            [
                "FABS",
                "D Files"
            ],
            [
                "FPDS data",
                "D Files"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want to generate and validate D Files from FABS and FPDS data.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "generate",
                "validate"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "D Files"
            ],
            "Secondary Entity": [
                "FABS",
                "FPDS data"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "generate"
            ],
            [
                "user",
                "validate"
            ]
        ],
        "Targets": [
            [
                "validate",
                "D Files"
            ],
            [
                "generate",
                "D Files"
            ]
        ],
        "Contains": [
            [
                "FABS",
                "D Files"
            ],
            [
                "FPDS data",
                "D Files"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want the header information box to show updated date AND time, so that I know when it was updated.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "show",
                "know",
                "updated"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "header information box"
            ],
            "Secondary Entity": [
                "updated date AND time",
                "when"
            ]
        },
        "Benefit": "I know when it was updated",
        "Triggers": [
            [
                "Agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "show",
                "updated date AND time"
            ],
            [
                "want",
                "header information box"
            ],
            [
                "know",
                "when"
            ]
        ],
        "Contains": [
            [
                "header information box",
                "updated date AND time"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want to receive a more helpful file-level error when I upload a file with the wrong extension.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "receive"
            ],
            "Secondary Action": [
                "upload"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "helpful file-level error"
            ],
            "Secondary Entity": [
                "file",
                "wrong extension"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Agency user",
                "receive"
            ]
        ],
        "Targets": [
            [
                "receive",
                "helpful file-level error"
            ],
            [
                "upload",
                "file"
            ]
        ],
        "Contains": [
            [
                "file",
                "wrong extension"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a tester, I want to have access to test features in environments other than Staging, so that I can test any nonProd feature in any environment.",
        "Persona": [
            "tester"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "test"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "access"
            ],
            "Secondary Entity": [
                "test features",
                "environments",
                "Staging",
                "any environment",
                "any nonProd feature"
            ]
        },
        "Benefit": "I can test any nonProd feature in any environment",
        "Triggers": [
            [
                "tester",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "access"
            ],
            [
                "test",
                "any nonProd feature"
            ]
        ],
        "Contains": [
            [
                "environments",
                "test features"
            ],
            [
                "Staging",
                "test features"
            ],
            [
                "any environment",
                "any nonProd feature"
            ],
            [
                "test features",
                "access"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to submission errors to accurately represent FABS errors, so that I know why my submission didn't work.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "accurately represent",
                "know"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "submission errors"
            ],
            "Secondary Entity": [
                "FABS errors",
                "submission",
                "why"
            ]
        },
        "Benefit": "I know why my submission didn't work",
        "Triggers": [
            [
                "FABS user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "submission errors"
            ],
            [
                "accurately represent",
                "FABS errors"
            ],
            [
                "know",
                "why"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want the frontend URLs to more accurately reflect the page I'm accessing, so that I'm not confused.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "more accurately reflect"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "frontend URLs"
            ],
            "Secondary Entity": [
                "page I'm accessing"
            ]
        },
        "Benefit": "I'm not confused",
        "Triggers": [
            [
                "FABS user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "frontend URLs"
            ],
            [
                "more accurately reflect",
                "page I'm accessing"
            ]
        ],
        "Contains": [
            [
                "page I'm accessing",
                "frontend URLs"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want all historical Financial Assistance data loaded for FABS go-live.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "loaded"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "all historical Financial Assistance data"
            ],
            "Secondary Entity": [
                "FABS go-live"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "all historical Financial Assistance data"
            ],
            [
                "loaded",
                "all historical Financial Assistance data"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want the historical FPDS data loader to include both extracted historical data and FPDS feed data.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "include"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "historical FPDS data loader"
            ],
            "Secondary Entity": [
                "FPDS feed data",
                "extracted historical data"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Developer",
                "want"
            ]
        ],
        "Targets": [
            [
                "include",
                "extracted historical data"
            ],
            [
                "include",
                "FPDS feed data"
            ],
            [
                "want",
                "historical FPDS data loader"
            ]
        ],
        "Contains": [
            [
                "historical FPDS data loader",
                "extracted historical data"
            ],
            [
                "historical FPDS data loader",
                "FPDS feed data"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want historical FPDS data loaded.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "loaded"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "historical FPDS data"
            ],
            "Secondary Entity": [
                ""
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "loaded",
                "historical FPDS data"
            ],
            [
                "want",
                "historical FPDS data"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want to accurately see who created a submission, so that I'm not confused about who last updated a submission.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "accurately see"
            ],
            "Secondary Action": [
                "created",
                "last updated"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "who"
            ],
            "Secondary Entity": [
                "submission",
                "who",
                "submission"
            ]
        },
        "Benefit": "I'm not confused about who last updated a submission",
        "Triggers": [
            [
                "Agency user",
                "accurately see"
            ]
        ],
        "Targets": [
            [
                "accurately see",
                "who"
            ],
            [
                "created",
                "submission"
            ],
            [
                "last updated",
                "submission"
            ]
        ],
        "Contains": [
            [
                "who",
                "submission"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to get File F in the correct format.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "get"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "File F"
            ],
            "Secondary Entity": [
                "correct format"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "get"
            ]
        ],
        "Targets": [
            [
                "get",
                "File F"
            ]
        ],
        "Contains": [
            [
                "File F",
                "correct format"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want to better understand my file-level errors.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "better understand"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "file-level errors"
            ],
            "Secondary Entity": [
                ""
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Agency user",
                "better understand"
            ]
        ],
        "Targets": [
            [
                "better understand",
                "file-level errors"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want to provide FABS groups that function under the FREC paradigm.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "provide"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FABS groups"
            ],
            "Secondary Entity": [
                "FREC paradigm"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Developer",
                "provide"
            ]
        ],
        "Targets": [
            [
                "provide",
                "FABS groups"
            ]
        ],
        "Contains": [
            [
                "FABS groups",
                "FREC paradigm"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a tester, I want to ensure that FABS is deriving fields properly through a robust test file plus a follow up check.",
        "Persona": [
            "tester"
        ],
        "Action": {
            "Primary Action": [
                "ensure"
            ],
            "Secondary Action": [
                "deriving"
            ]
        },
        "Entity": {
            "Primary Entity": [
                ""
            ],
            "Secondary Entity": [
                "FABS",
                "fields",
                "robust test file",
                "follow up check"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "tester",
                "ensure"
            ]
        ],
        "Targets": [
            [
                "deriving",
                "fields"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an owner, I only want zero-padded fields, so that I can justify padding.",
        "Persona": [
            "owner"
        ],
        "Action": {
            "Primary Action": [
                "only want"
            ],
            "Secondary Action": [
                "justify"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "zero-padded fields"
            ],
            "Secondary Entity": [
                "padding"
            ]
        },
        "Benefit": "I can justify padding",
        "Triggers": [
            [
                "owner",
                "only want"
            ]
        ],
        "Targets": [
            [
                "only want",
                "zero-padded fields"
            ],
            [
                "justify",
                "padding"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Broker user, I want to submit records for individual recipients without receiving a DUNS error.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "submit"
            ],
            "Secondary Action": [
                "without receiving"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "records"
            ],
            "Secondary Entity": [
                "individual recipients",
                "DUNS error"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Broker user",
                "submit"
            ]
        ],
        "Targets": [
            [
                "submit",
                "records"
            ],
            [
                "without receiving",
                "DUNS error"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want more information about how many rows will be published prior to deciding whether to publish.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "deciding",
                "published prior",
                "publish"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "more information"
            ],
            "Secondary Entity": [
                "how many rows"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "more information"
            ],
            [
                "published prior",
                "how many rows"
            ]
        ],
        "Contains": [
            [
                "more information",
                "how many rows"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer, I want to prevent duplicate transactions from being published and deal with the time gap between validation and the publishing decision.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "prevent",
                "deal"
            ],
            "Secondary Action": [
                "published"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "duplicate transactions",
                "time gap"
            ],
            "Secondary Entity": [
                "publishing decision",
                "validation"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Developer",
                "prevent"
            ],
            [
                "Developer",
                "deal"
            ]
        ],
        "Targets": [
            [
                "prevent",
                "duplicate transactions"
            ],
            [
                "deal",
                "time gap"
            ]
        ],
        "Contains": [
            [
                "validation",
                "time gap"
            ],
            [
                "publishing decision",
                "time gap"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to submit a citywide as a PPoPZIP and pass validations.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "submit",
                "pass"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "citywide",
                "validations"
            ],
            "Secondary Entity": [
                "PPoPZIP"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "FABS user",
                "submit"
            ],
            [
                "FABS user",
                "pass"
            ]
        ],
        "Targets": [
            [
                "submit",
                "citywide"
            ],
            [
                "pass",
                "validations"
            ]
        ],
        "Contains": [
            [
                "citywide",
                "PPoPZIP"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Broker user, I want to have updated error codes that accurately reflect the logic and provide enough information, so that I can fix my submission.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "fix",
                "provide"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "updated error codes"
            ],
            "Secondary Entity": [
                "logic",
                "enough information",
                "submission"
            ]
        },
        "Benefit": "I can fix my submission",
        "Triggers": [
            [
                "Broker user",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "updated error codes"
            ],
            [
                "fix",
                "submission"
            ],
            [
                "provide",
                "enough information"
            ]
        ],
        "Contains": [
            [
                "updated error codes",
                "logic"
            ],
            [
                "updated error codes",
                "enough information"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to leave off the last 4 digits of the ZIP without an error, so that I can complete my submissions.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "leave off"
            ],
            "Secondary Action": [
                "complete"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "last 4 digits"
            ],
            "Secondary Entity": [
                "ZIP",
                "submissions",
                "error"
            ]
        },
        "Benefit": "I can complete my submissions",
        "Triggers": [
            [
                "agency user",
                "leave off"
            ]
        ],
        "Targets": [
            [
                "leave off",
                "last 4 digits"
            ],
            [
                "complete",
                "submissions"
            ]
        ],
        "Contains": [
            [
                "ZIP",
                "last 4 digits"
            ],
            [
                "submissions",
                "ZIP"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to make sure the historical data includes all necessary columns, so that the information in the database is correct.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "make sure"
            ],
            "Secondary Action": [
                "includes"
            ]
        },
        "Entity": {
            "Primary Entity": [
                ""
            ],
            "Secondary Entity": [
                "all necessary columns",
                "information",
                "database",
                "historical data"
            ]
        },
        "Benefit": "the information in the database is correct",
        "Triggers": [
            [
                "FABS user",
                "make sure"
            ]
        ],
        "Targets": [
            [
                "includes",
                "all necessary columns"
            ]
        ],
        "Contains": [
            [
                "database",
                "information"
            ],
            [
                "historical data",
                "all necessary columns"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a data user, I want to access two additional fields from the FPDS data pull.",
        "Persona": [
            "data user"
        ],
        "Action": {
            "Primary Action": [
                "access"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "two additional fields"
            ],
            "Secondary Entity": [
                "FPDS data pull"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "data user",
                "access"
            ]
        ],
        "Targets": [
            [
                "access",
                "two additional fields"
            ]
        ],
        "Contains": [
            [
                "FPDS data pull",
                "two additional fields"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want additional helpful info in the submission dashboard, so that I can better manage submissions and IG requests.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "better manage"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "additional helpful info"
            ],
            "Secondary Entity": [
                "submission dashboard",
                "submissions",
                "IG requests"
            ]
        },
        "Benefit": "I can better manage submissions and IG requests",
        "Triggers": [
            [
                "FABS user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "additional helpful info"
            ],
            [
                "better manage",
                "submissions"
            ],
            [
                "better manage",
                "IG requests"
            ]
        ],
        "Contains": [
            [
                "submission dashboard",
                "additional helpful info"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to download the uploaded FABS file, so that I can get the uploaded file.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "download"
            ],
            "Secondary Action": [
                "get"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "uploaded FABS file"
            ],
            "Secondary Entity": [
                "uploaded file"
            ]
        },
        "Benefit": "I can get the uploaded file",
        "Triggers": [
            [
                "FABS user",
                "download"
            ]
        ],
        "Targets": [
            [
                "download",
                "uploaded FABS file"
            ],
            [
                "get",
                "uploaded file"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer I want to quickly access Broker application data, so that I can investigate issues.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "quickly access"
            ],
            "Secondary Action": [
                "investigate"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "Broker application data"
            ],
            "Secondary Entity": [
                "issues"
            ]
        },
        "Benefit": "I can investigate issues",
        "Triggers": [
            [
                "Developer",
                "quickly access"
            ]
        ],
        "Targets": [
            [
                "quickly access",
                "Broker application data"
            ],
            [
                "investigate",
                "issues"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want to determine the best way to load historical FPDS data, so that I can load all FPDS data since 2007.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "determine"
            ],
            "Secondary Action": [
                "load",
                "load"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "best way"
            ],
            "Secondary Entity": [
                "historical FPDS data",
                "FPDS data since 2007"
            ]
        },
        "Benefit": "I can load all FPDS data since 2007",
        "Triggers": [
            [
                "Developer",
                "determine"
            ]
        ],
        "Targets": [
            [
                "determine",
                "best way"
            ],
            [
                "load",
                "historical FPDS data"
            ],
            [
                "load",
                "FPDS data since 2007"
            ]
        ],
        "Contains": [
            [
                "historical FPDS data",
                "FPDS data since 2007"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want the language on FABS pages to be appropriate for me, so that I am not confused.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "language"
            ],
            "Secondary Entity": [
                "FABS pages"
            ]
        },
        "Benefit": "I am not confused",
        "Triggers": [
            [
                "FABS user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "language"
            ]
        ],
        "Contains": [
            [
                "FABS pages",
                "language"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I do not want  DABS banner messages and vice versa, so that I have the appropriate information for my application.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "have"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "DABS banner messages"
            ],
            "Secondary Entity": [
                "appropriate information",
                "application"
            ]
        },
        "Benefit": "I have the appropriate information for my application",
        "Triggers": [
            [
                "FABS user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "DABS banner messages"
            ],
            [
                "have",
                "appropriate information"
            ]
        ],
        "Contains": [
            [
                "application",
                "appropriate information"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to have read-only access to DABS, so that I can view DABS pages without wanting two sets of permissions.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "view",
                "without wanting"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "read-only access"
            ],
            "Secondary Entity": [
                "DABS",
                "two sets of permissions",
                "DABS pages"
            ]
        },
        "Benefit": "I can view DABS pages without wanting two sets of permissions",
        "Triggers": [
            [
                "FABS user",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "read-only access"
            ],
            [
                "view",
                "DABS pages"
            ],
            [
                "without wanting",
                "two sets of permissions"
            ]
        ],
        "Contains": [
            [
                "DABS",
                "read-only access"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to have my validations run in a reasonable amount of time.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "run"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "validations"
            ],
            "Secondary Entity": [
                "reasonable amount of time"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "FABS user",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "validations"
            ],
            [
                "run",
                "reasonable amount of time"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to see correct status labels on the Submission Dashboard, so that I can quickly see my submission history.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "see"
            ],
            "Secondary Action": [
                "quickly see"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "correct status labels"
            ],
            "Secondary Entity": [
                "Submission Dashboard",
                "submission history"
            ]
        },
        "Benefit": "I can quickly see my submission history",
        "Triggers": [
            [
                "FABS user",
                "see"
            ]
        ],
        "Targets": [
            [
                "see",
                "correct status labels"
            ],
            [
                "quickly see",
                "submission history"
            ]
        ],
        "Contains": [
            [
                "Submission Dashboard",
                "correct status labels"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to know when the submission periods start and end, so that I know when the submission starts and ends.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "know"
            ],
            "Secondary Action": [
                "know"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "submission periods start and end"
            ],
            "Secondary Entity": [
                "submission starts and ends"
            ]
        },
        "Benefit": "I know when the submission starts and ends",
        "Triggers": [
            [
                "agency user",
                "know"
            ]
        ],
        "Targets": [
            [
                "know",
                "submission periods start and end"
            ],
            [
                "know",
                "submission starts and ends"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want a landing page to navigate to either FABS or DABS pages, so that I can access both sides of the site.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "navigate",
                "access"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "landing page"
            ],
            "Secondary Entity": [
                "FABS",
                "DABS pages",
                "both sides of the site"
            ]
        },
        "Benefit": "I can access both sides of the site",
        "Triggers": [
            [
                "agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "landing page"
            ],
            [
                "navigate",
                "FABS"
            ],
            [
                "navigate",
                "DABS pages"
            ],
            [
                "access",
                "both sides of the site"
            ]
        ],
        "Contains": [
            [
                "landing page",
                "FABS"
            ],
            [
                "landing page",
                "DABS pages"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to submit my data elements surrounded by quotation marks, so that Excel won't strip off leading and trailing zeroes.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "submit"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "data elements surrounded by quotation marks"
            ],
            "Secondary Entity": [
                "leading and trailing zeroes",
                "Excel"
            ]
        },
        "Benefit": "Excel won't strip off leading and trailing zeroes",
        "Triggers": [
            [
                "agency user",
                "submit"
            ]
        ],
        "Targets": [
            [
                "submit",
                "data elements surrounded by quotation marks"
            ]
        ],
        "Contains": [
            [
                "Excel",
                "data elements surrounded by quotation marks"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to be able to edit a dataset I have published, So that I can correct or enhance existing data.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "edit"
            ],
            "Secondary Action": [
                "correct",
                "enhance"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "dataset I have published"
            ],
            "Secondary Entity": [
                "existing data"
            ]
        },
        "Benefit": "I can correct or enhance existing data",
        "Triggers": [
            [
                "Data Publishing User",
                "edit"
            ]
        ],
        "Targets": [
            [
                "correct",
                "existing data"
            ],
            [
                "enhance",
                "existing data"
            ],
            [
                "edit",
                "dataset I have published"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to be able to edit the model of data I have already imported, So that I can fix bugs or make enhancements in the API built for my data.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "edit"
            ],
            "Secondary Action": [
                "fix",
                "make"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "model"
            ],
            "Secondary Entity": [
                "bugs",
                "enhancements",
                "data",
                "API",
                "data I have already imported"
            ]
        },
        "Benefit": "I can fix bugs or make enhancements in the API built for my data",
        "Triggers": [
            [
                "Data Publishing User",
                "edit"
            ]
        ],
        "Targets": [
            [
                "fix",
                "bugs"
            ],
            [
                "make",
                "enhancements"
            ],
            [
                "edit",
                "model"
            ]
        ],
        "Contains": [
            [
                "API",
                "enhancements"
            ],
            [
                "data",
                "API"
            ],
            [
                "data I have already imported",
                "model"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to be able to delete a dataset I have published, So that I can remove unwanted data from OpenSpending.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "delete"
            ],
            "Secondary Action": [
                "remove"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "dataset I have published"
            ],
            "Secondary Entity": [
                "unwanted data",
                "OpenSpending"
            ]
        },
        "Benefit": "I can remove unwanted data from OpenSpending",
        "Triggers": [
            [
                "Data Publishing User",
                "delete"
            ]
        ],
        "Targets": [
            [
                "remove",
                "unwanted data"
            ],
            [
                "delete",
                "dataset I have published"
            ]
        ],
        "Contains": [
            [
                "OpenSpending",
                "unwanted data"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Platform Administrator, I want to be able to Hide any dataset already added as Public, So that I can maintain Public/Hidden status for other users.",
        "Persona": [
            "Platform Administrator"
        ],
        "Action": {
            "Primary Action": [
                "Hide"
            ],
            "Secondary Action": [
                "maintain"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "any dataset already added"
            ],
            "Secondary Entity": [
                "Public/Hidden status",
                "other users"
            ]
        },
        "Benefit": "I can maintain Public/Hidden status for other users",
        "Triggers": [
            [
                "Platform Administrator",
                "Hide"
            ]
        ],
        "Targets": [
            [
                "maintain",
                "Public/Hidden status"
            ],
            [
                "Hide",
                "any dataset already added"
            ]
        ],
        "Contains": [
            [
                "other users",
                "Public/Hidden status"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Platform Administrator, I want to have a view on all datasets published by all users, So that I can perform management actions on any dataset.",
        "Persona": [
            "Platform Administrator"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "perform"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "view"
            ],
            "Secondary Entity": [
                "all users",
                "any dataset",
                "datasets published",
                "management actions"
            ]
        },
        "Benefit": "I can perform management actions on any dataset",
        "Triggers": [
            [
                "Platform Administrator",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "view"
            ],
            [
                "perform",
                "management actions"
            ]
        ],
        "Contains": [
            [
                "any dataset",
                "management actions"
            ],
            [
                "view",
                "datasets published"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Platform Administrator, I want to be able to delete any dataset published, So that I can deal with takedown requests, or clean up test datasets.",
        "Persona": [
            "Platform Administrator"
        ],
        "Action": {
            "Primary Action": [
                "delete"
            ],
            "Secondary Action": [
                "deal",
                "clean up"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "any dataset published"
            ],
            "Secondary Entity": [
                "takedown requests",
                "test datasets"
            ]
        },
        "Benefit": "I can deal with takedown requests, or clean up test datasets",
        "Triggers": [
            [
                "Platform Administrator",
                "delete"
            ]
        ],
        "Targets": [
            [
                "delete",
                "any dataset published"
            ],
            [
                "deal",
                "takedown requests"
            ],
            [
                "clean up",
                "test datasets"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to be able to edit the data source of data I have already imported, So that I can fix bugs or make enhancements in the API built for my data.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "edit"
            ],
            "Secondary Action": [
                "fix",
                "make"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "data source"
            ],
            "Secondary Entity": [
                "bugs",
                "enhancements",
                "data",
                "API",
                "data I have already imported"
            ]
        },
        "Benefit": "I can fix bugs or make enhancements in the API built for my data",
        "Triggers": [
            [
                "Data Publishing User",
                "edit"
            ]
        ],
        "Targets": [
            [
                "edit",
                "data source"
            ],
            [
                "fix",
                "bugs"
            ],
            [
                "make",
                "enhancements"
            ]
        ],
        "Contains": [
            [
                "API",
                "enhancements"
            ],
            [
                "data",
                "API"
            ],
            [
                "data I have already imported",
                "data source"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to have the Packager support Constants, So that I can model dimensions that may not exist in the source file.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "model"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "Packager support Constants"
            ],
            "Secondary Entity": [
                "dimensions",
                "source file"
            ]
        },
        "Benefit": "I can model dimensions that may not exist in the source file",
        "Triggers": [
            [
                "Data Publishing User",
                "have"
            ]
        ],
        "Targets": [
            [
                "model",
                "dimensions"
            ],
            [
                "have",
                "Packager support Constants"
            ]
        ],
        "Contains": [
            [
                "source file",
                "dimensions"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to be able to import data in Excel, So that I do not have to convert data formats in order to use the data packager.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "import"
            ],
            "Secondary Action": [
                "use"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "data"
            ],
            "Secondary Entity": [
                "data packager",
                "Excel",
                "data formats"
            ]
        },
        "Benefit": "I do not have to convert data formats in order to use the data packager",
        "Triggers": [
            [
                "Data Publishing User",
                "import"
            ]
        ],
        "Targets": [
            [
                "import",
                "data"
            ],
            [
                "use",
                "data packager"
            ]
        ],
        "Contains": [
            [
                "Excel",
                "data"
            ],
            [
                "data",
                "data formats"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to know what my data needs to be able to be visualised on a map, So that I can visualise it on a map.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "know"
            ],
            "Secondary Action": [
                "visualise",
                "visualised"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "what"
            ],
            "Secondary Entity": [
                "map",
                "map",
                "data"
            ]
        },
        "Benefit": "I can visualise it on a map",
        "Triggers": [
            [
                "Data Publishing User",
                "know"
            ]
        ],
        "Targets": [
            [
                "visualised",
                "data"
            ],
            [
                "visualise",
                "data"
            ],
            [
                "know",
                "what"
            ]
        ],
        "Contains": [
            [
                "map",
                "data"
            ],
            [
                "map",
                "data"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to be able to import data in JSON, So that I do not have to convert data formats in order to use the data packager.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "import"
            ],
            "Secondary Action": [
                "use"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "data"
            ],
            "Secondary Entity": [
                "JSON",
                "data formats",
                "data packager"
            ]
        },
        "Benefit": "I do not have to convert data formats in order to use the data packager",
        "Triggers": [
            [
                "Data Publishing User",
                "import"
            ]
        ],
        "Targets": [
            [
                "import",
                "data"
            ],
            [
                "use",
                "data packager"
            ]
        ],
        "Contains": [
            [
                "data",
                "data formats"
            ],
            [
                "JSON",
                "data"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to be able to import data from a Google Spreadsheet, So that I do not have to convert data formats in order to use the data packager.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "import"
            ],
            "Secondary Action": [
                "use"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "data"
            ],
            "Secondary Entity": [
                "Google Spreadsheet",
                "data formats",
                "data packager"
            ]
        },
        "Benefit": "I do not have to convert data formats in order to use the data packager",
        "Triggers": [
            [
                "Data Publishing User",
                "import"
            ]
        ],
        "Targets": [
            [
                "import",
                "data"
            ],
            [
                "use",
                "data packager"
            ]
        ],
        "Contains": [
            [
                "Google Spreadsheet",
                "data"
            ],
            [
                "data",
                "data formats"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to be able to import data from Fiscal Data Package descriptor file, So that I do not have to convert data formats in order to use the data packager.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "import"
            ],
            "Secondary Action": [
                "use"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "data"
            ],
            "Secondary Entity": [
                "Fiscal Data Package descriptor file",
                "data formats",
                "data packager"
            ]
        },
        "Benefit": "I do not have to convert data formats in order to use the data packager",
        "Triggers": [
            [
                "Data Publishing User",
                "import"
            ]
        ],
        "Targets": [
            [
                "import",
                "data"
            ],
            [
                "use",
                "data packager"
            ]
        ],
        "Contains": [
            [
                "Fiscal Data Package descriptor file",
                "data"
            ],
            [
                "data",
                "data formats"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to be able to provide the Platform Administrator with additional GeoJSON sources, So that I can improve the map-based visualisations of my data.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "provide"
            ],
            "Secondary Action": [
                "improve"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "Platform Administrator"
            ],
            "Secondary Entity": [
                "additional GeoJSON sources",
                "map-based visualisations",
                "data"
            ]
        },
        "Benefit": "I can improve the map-based visualisations of my data",
        "Triggers": [
            [
                "Data Publishing User",
                "provide"
            ]
        ],
        "Targets": [
            [
                "provide",
                "Platform Administrator"
            ],
            [
                "improve",
                "map-based visualisations"
            ]
        ],
        "Contains": [
            [
                "Platform Administrator",
                "additional GeoJSON sources"
            ],
            [
                "map-based visualisations",
                "data"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Consuming User, I want to be able to filter, sort and aggregate data by multiple dimensions and measures, So that I can get more granular views on the data.",
        "Persona": [
            "Data Consuming User"
        ],
        "Action": {
            "Primary Action": [
                "filter",
                "sort",
                "aggregate"
            ],
            "Secondary Action": [
                "get"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "data"
            ],
            "Secondary Entity": [
                "multiple dimensions",
                "data",
                "measures",
                "more granular views"
            ]
        },
        "Benefit": "I can get more granular views on the data",
        "Triggers": [
            [
                "Data Consuming User",
                "filter"
            ],
            [
                "Data Consuming User",
                "sort"
            ],
            [
                "Data Consuming User",
                "aggregate"
            ]
        ],
        "Targets": [
            [
                "filter",
                "data"
            ],
            [
                "sort",
                "data"
            ],
            [
                "aggregate",
                "data"
            ],
            [
                "get",
                "more granular views"
            ]
        ],
        "Contains": [
            [
                "data",
                "multiple dimensions"
            ],
            [
                "data",
                "measures"
            ],
            [
                "data",
                "more granular views"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Consuming User, I want to be able to download a CSV of the data that is used in any visualisation I am viewing, So that I can use the data in other tools.",
        "Persona": [
            "Data Consuming User"
        ],
        "Action": {
            "Primary Action": [
                "download"
            ],
            "Secondary Action": [
                "use"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "CSV"
            ],
            "Secondary Entity": [
                "data",
                "data",
                "other tools",
                "any visualisation I am viewing"
            ]
        },
        "Benefit": "I can use the data in other tools",
        "Triggers": [
            [
                "Data Consuming User",
                "download"
            ]
        ],
        "Targets": [
            [
                "download",
                "CSV"
            ],
            [
                "use",
                "data"
            ]
        ],
        "Contains": [
            [
                "other tools",
                "data"
            ],
            [
                "CSV",
                "data"
            ],
            [
                "any visualisation I am viewing",
                "data"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Consuming User, I want to be able to change the display of all monetary measures across a set of currencies, So that I can understand localised amounts in non-localised figures.",
        "Persona": [
            "Data Consuming User"
        ],
        "Action": {
            "Primary Action": [
                "change"
            ],
            "Secondary Action": [
                "understand"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "display"
            ],
            "Secondary Entity": [
                "monetary measures",
                "set of currencies",
                "localised amounts",
                "non-localised figures"
            ]
        },
        "Benefit": "I can understand localised amounts in non-localised figures",
        "Triggers": [
            [
                "Data Consuming User",
                "change"
            ]
        ],
        "Targets": [
            [
                "change",
                "display"
            ],
            [
                "understand",
                "localised amounts"
            ]
        ],
        "Contains": [
            [
                "monetary measures",
                "display"
            ],
            [
                "set of currencies",
                "monetary measures"
            ],
            [
                "non-localised figures",
                "localised amounts"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Consuming User, I want to see textual descriptions that accompany embedded visualisations, So that I can more easily understand what I am viewing.",
        "Persona": [
            "Data Consuming User"
        ],
        "Action": {
            "Primary Action": [
                "see"
            ],
            "Secondary Action": [
                "easily understand"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "textual descriptions"
            ],
            "Secondary Entity": [
                "embedded visualisations"
            ]
        },
        "Benefit": "I can more easily understand what I am viewing",
        "Triggers": [
            [
                "Data Consuming User",
                "see "
            ]
        ],
        "Targets": [
            [
                "see ",
                "textual descriptions"
            ],
            [
                "easily understand",
                "embedded visualisations"
            ]
        ],
        "Contains": [
            [
                "embedded visualisations",
                "textual descriptions"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Consuming User, I want to be able to share a view state as a URL to social networks, So that I can share data that I have found with others.",
        "Persona": [
            "Data Consuming User"
        ],
        "Action": {
            "Primary Action": [
                "share"
            ],
            "Secondary Action": [
                "share"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "view state"
            ],
            "Secondary Entity": [
                "URL",
                "social networks",
                "others",
                "data"
            ]
        },
        "Benefit": "I can share data that I have found with others",
        "Triggers": [
            [
                "Data Consuming User",
                "share"
            ]
        ],
        "Targets": [
            [
                "share",
                "view state"
            ],
            [
                "share",
                "data"
            ]
        ],
        "Contains": [
            [
                "view state",
                "URL"
            ],
            [
                "social networks",
                "view state"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Consuming User, I want to be able to download an image ofa particular view state, So that I can use it offline.",
        "Persona": [
            "Data Consuming User"
        ],
        "Action": {
            "Primary Action": [
                "download"
            ],
            "Secondary Action": [
                "use"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "image"
            ],
            "Secondary Entity": [
                "particular view state"
            ]
        },
        "Benefit": "I can use it offline",
        "Triggers": [
            [
                "Data Consuming User",
                "download"
            ]
        ],
        "Targets": [
            [
                "download",
                "image"
            ],
            [
                "use",
                "image"
            ]
        ],
        "Contains": [
            [
                "image",
                "particular view state"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Consuming User, I want to be able to share an image of a particular view state to the social networks that support this, So that I can provide richer context in those communication channels for data I am sharing.",
        "Persona": [
            "Data Consuming User"
        ],
        "Action": {
            "Primary Action": [
                "share"
            ],
            "Secondary Action": [
                "provide",
                "support"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "image"
            ],
            "Secondary Entity": [
                "richer context",
                "particular view state",
                "social networks",
                "communication channels",
                "data I am sharing"
            ]
        },
        "Benefit": "I can provide richer context in those communication channels for data I am sharing",
        "Triggers": [
            [
                "Data Consuming User",
                "share"
            ]
        ],
        "Targets": [
            [
                "share",
                "image"
            ],
            [
                "provide",
                "richer context"
            ],
            [
                "support",
                "image"
            ]
        ],
        "Contains": [
            [
                "social networks",
                "image"
            ],
            [
                "image",
                "particular view state"
            ],
            [
                "communication channels",
                "richer context"
            ],
            [
                "data I am sharing",
                "richer context"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Consuming User, I want to be able to have stepped zoom on map visualisations, So that I can have better control over the navigation experience inside a map view.",
        "Persona": [
            "Data Consuming User"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "have"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "stepped zoom"
            ],
            "Secondary Entity": [
                "map visualisations",
                "better control",
                "navigation experience",
                "map view"
            ]
        },
        "Benefit": "I can have better control over the navigation experience inside a map view",
        "Triggers": [
            [
                "Data Consuming User",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "stepped zoom"
            ],
            [
                "have",
                "better control"
            ]
        ],
        "Contains": [
            [
                "map visualisations",
                "stepped zoom"
            ],
            [
                "map view",
                "navigation experience"
            ],
            [
                "navigation experience",
                "better control"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Consuming User, I want to have consistent use of colour on map visualisations, So that I can better understand the visual logic of the map view.",
        "Persona": [
            "Data Consuming User"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "better understand"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "consistent use"
            ],
            "Secondary Entity": [
                "colour",
                "map visualisations",
                "visual logic",
                "map view"
            ]
        },
        "Benefit": "I can better understand the visual logic of the map view",
        "Triggers": [
            [
                "Data Consuming User",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "consistent use"
            ],
            [
                "better understand",
                "visual logic"
            ]
        ],
        "Contains": [
            [
                "map visualisations",
                "colour"
            ],
            [
                "map view",
                "visual logic"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Developer, I want to be able to customise the Brand Name and Icon, and Primary Color of all frontend Javascript apps, So that I can customise the branding for my own needs.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "customise"
            ],
            "Secondary Action": [
                "customise"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "Brand Name",
                "Icon",
                "Primary Color"
            ],
            "Secondary Entity": [
                "frontend Javascript apps",
                "own needs",
                "branding"
            ]
        },
        "Benefit": "I can customise the branding for my own needs",
        "Triggers": [
            [
                "Developer",
                "customise"
            ]
        ],
        "Targets": [
            [
                "customise",
                "Brand Name"
            ],
            [
                "customise",
                "Icon"
            ],
            [
                "customise",
                "Primary Color"
            ],
            [
                "customise",
                "branding"
            ]
        ],
        "Contains": [
            [
                "frontend Javascript apps",
                "Brand Name"
            ],
            [
                "frontend Javascript apps",
                "Icon"
            ],
            [
                "frontend Javascript apps",
                "Primary Color"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API User, I want to be able to understand if a user is a Publisher, So that I can offer functionality based on Dataset Publisher privileges.",
        "Persona": [
            "API User"
        ],
        "Action": {
            "Primary Action": [
                "understand"
            ],
            "Secondary Action": [
                "offer"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "user"
            ],
            "Secondary Entity": [
                "Publisher",
                "functionality",
                "Dataset Publisher privileges"
            ]
        },
        "Benefit": "I can offer functionality based on Dataset Publisher privileges",
        "Triggers": [
            [
                "API User",
                "understand"
            ]
        ],
        "Targets": [
            [
                "understand",
                "user"
            ],
            [
                "offer",
                "functionality"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API User, I want to be able to understand if a user is an Administrator, So that I can offer functionality based on Platform Administration privileges.",
        "Persona": [
            "API User"
        ],
        "Action": {
            "Primary Action": [
                "understand"
            ],
            "Secondary Action": [
                "offer"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "user"
            ],
            "Secondary Entity": [
                "Administrator",
                "functionality",
                "Platform Administration privileges"
            ]
        },
        "Benefit": "I can offer functionality based on Platform Administration privileges",
        "Triggers": [
            [
                "API User",
                "understand"
            ]
        ],
        "Targets": [
            [
                "offer",
                "functionality"
            ],
            [
                "understand",
                "user"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API User, I want to be able to get bordering regions|cities when I query a region|city, So that I can provider wider visual context for mapping visualisations.",
        "Persona": [
            "API User"
        ],
        "Action": {
            "Primary Action": [
                "get"
            ],
            "Secondary Action": [
                "query",
                "provider"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "cities",
                "bordering regions"
            ],
            "Secondary Entity": [
                "region",
                "city,",
                "wider visual context",
                "mapping visualisations"
            ]
        },
        "Benefit": "I can provider wider visual context for mapping visualisations",
        "Triggers": [
            [
                "API User",
                "get"
            ]
        ],
        "Targets": [
            [
                "provider",
                "wider visual context"
            ],
            [
                "get",
                "cities"
            ],
            [
                "query",
                "city,"
            ],
            [
                "get",
                "bordering regions"
            ],
            [
                "query",
                "region"
            ]
        ],
        "Contains": [
            [
                "mapping visualisations",
                "wider visual context"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API User, I want to be able to dynamically request polygons based on the query made, So that I can provide maps that match the query.",
        "Persona": [
            "API User"
        ],
        "Action": {
            "Primary Action": [
                "dynamically request"
            ],
            "Secondary Action": [
                "provide"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "polygons"
            ],
            "Secondary Entity": [
                "query",
                "maps",
                "query"
            ]
        },
        "Benefit": "I can provide maps that match the query",
        "Triggers": [
            [
                "API User",
                "dynamically request"
            ]
        ],
        "Targets": [
            [
                "dynamically request",
                "polygons"
            ],
            [
                "provide",
                "maps"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API User, I want to have a flexible API using HASC codes for countries, regions and cities, So that I can visualise budget data on maps.",
        "Persona": [
            "API User"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "visualise",
                "using"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "flexible API"
            ],
            "Secondary Entity": [
                "HASC codes",
                "countries",
                "regions",
                "cities",
                "budget data",
                "maps"
            ]
        },
        "Benefit": "I can visualise budget data on maps",
        "Triggers": [
            [
                "API User",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "flexible API"
            ],
            [
                "visualise",
                "budget data"
            ],
            [
                "using",
                "HASC codes"
            ]
        ],
        "Contains": [
            [
                "maps",
                "budget data"
            ],
            [
                "cities",
                "HASC codes"
            ],
            [
                "regions",
                "HASC codes"
            ],
            [
                "countries",
                "HASC codes"
            ],
            [
                "flexible API",
                "HASC codes"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API User, I want to be able to get a CSV output of any cube-based query, So that I can use work with tools that read CSV.",
        "Persona": [
            "API User"
        ],
        "Action": {
            "Primary Action": [
                "get"
            ],
            "Secondary Action": [
                "use",
                "read"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "CSV output"
            ],
            "Secondary Entity": [
                "any cube-based query",
                "work",
                "tools",
                "CSV"
            ]
        },
        "Benefit": "I can use work with tools that read CSV",
        "Triggers": [
            [
                "API User",
                "get"
            ]
        ],
        "Targets": [
            [
                "get",
                "CSV output"
            ],
            [
                "use",
                "work"
            ],
            [
                "read",
                "CSV"
            ]
        ],
        "Contains": [
            [
                "work",
                "tools"
            ],
            [
                "any cube-based query",
                "CSV output"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API User, I want to be able to get a set of monetary measures transferred to different currencies, So that I can use this in scenarios that might enable comparison by normalisation.",
        "Persona": [
            "API User"
        ],
        "Action": {
            "Primary Action": [
                "get"
            ],
            "Secondary Action": [
                "use",
                "transferred",
                "enable"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "set of monetary measures"
            ],
            "Secondary Entity": [
                "different currencies",
                "scenarios",
                "comparison by normalisation"
            ]
        },
        "Benefit": "I can use this in scenarios that might enable comparison by normalisation",
        "Triggers": [
            [
                "API User",
                "get"
            ]
        ],
        "Targets": [
            [
                "get",
                "set of monetary measures"
            ],
            [
                "use",
                "different currencies"
            ],
            [
                "transferred",
                "different currencies"
            ],
            [
                "enable",
                "comparison by normalisation"
            ]
        ],
        "Contains": [
            [
                "scenarios",
                "different currencies"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API User, I want to be able to use metadata to get results from multiple datasets, So that I can build user experiences based on more than one dataset more easily.",
        "Persona": [
            "API User"
        ],
        "Action": {
            "Primary Action": [
                "use"
            ],
            "Secondary Action": [
                "get",
                "build"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "metadata"
            ],
            "Secondary Entity": [
                "results",
                "multiple datasets",
                "user experiences",
                "more than one dataset"
            ]
        },
        "Benefit": "I can build user experiences based on more than one dataset more easily",
        "Triggers": [
            [
                "API User",
                "use"
            ]
        ],
        "Targets": [
            [
                "use",
                "metadata"
            ],
            [
                "get",
                "results"
            ],
            [
                "build",
                "user experiences"
            ]
        ],
        "Contains": [
            [
                "multiple datasets",
                "results"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API User, I want to be able to use data to get results from multiple datasets, So that I can build user experiences based on more than one dataset more easily.",
        "Persona": [
            "API User"
        ],
        "Action": {
            "Primary Action": [
                "use"
            ],
            "Secondary Action": [
                "build",
                "get"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "data"
            ],
            "Secondary Entity": [
                "multiple datasets",
                "results",
                "user experiences",
                "more than one dataset"
            ]
        },
        "Benefit": "I can build user experiences based on more than one dataset more easily",
        "Triggers": [
            [
                "API User",
                "use"
            ]
        ],
        "Targets": [
            [
                "get",
                "results"
            ],
            [
                "use",
                "data"
            ],
            [
                "build",
                "user experiences"
            ]
        ],
        "Contains": [
            [
                "multiple datasets",
                "results"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API User, I want to be able to normalise measures by population, So that I work with datasets in reference to their contextual constraints.",
        "Persona": [
            "API User"
        ],
        "Action": {
            "Primary Action": [
                "normalise"
            ],
            "Secondary Action": [
                "work"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "measures"
            ],
            "Secondary Entity": [
                "population",
                "datasets",
                "contextual constraints"
            ]
        },
        "Benefit": "I work with datasets in reference to their contextual constraints",
        "Triggers": [
            [
                "API User",
                "normalise"
            ]
        ],
        "Targets": [
            [
                "normalise",
                "measures"
            ],
            [
                "work",
                "datasets"
            ]
        ],
        "Contains": [
            [
                "datasets",
                "contextual constraints"
            ],
            [
                "measures",
                "population"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API User, I want to be able to normalise measures by geographical area, So that I work with datasets in reference to their contextual constraints.",
        "Persona": [
            "API User"
        ],
        "Action": {
            "Primary Action": [
                "normalise"
            ],
            "Secondary Action": [
                "work"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "measures"
            ],
            "Secondary Entity": [
                "geographical area",
                "datasets",
                "contextual constraints"
            ]
        },
        "Benefit": "I work with datasets in reference to their contextual constraints",
        "Triggers": [
            [
                "API User",
                "normalise"
            ]
        ],
        "Targets": [
            [
                "work",
                "datasets"
            ],
            [
                "normalise",
                "measures"
            ]
        ],
        "Contains": [
            [
                "measures",
                "geographical area"
            ],
            [
                "datasets",
                "contextual constraints"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API User, I want to be able to normalise measures by GDP, so I work with datasets in reference to their contextual constraints.",
        "Persona": [
            "API User"
        ],
        "Action": {
            "Primary Action": [
                "normalise"
            ],
            "Secondary Action": [
                "work"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "measures"
            ],
            "Secondary Entity": [
                "GDP",
                "datasets",
                "contextual constraints"
            ]
        },
        "Benefit": "I work with datasets in reference to their contextual constraints",
        "Triggers": [
            [
                "API User",
                "normalise"
            ]
        ],
        "Targets": [
            [
                "normalise",
                "measures"
            ],
            [
                "work",
                "datasets"
            ]
        ],
        "Contains": [
            [
                "datasets",
                "contextual constraints"
            ],
            [
                "measures",
                "GDP"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API User, I want to be able to normalise measures by GINI and related socioeconomic indexes, So that I work with datasets in reference to their contextual constraints.",
        "Persona": [
            "API User"
        ],
        "Action": {
            "Primary Action": [
                "normalise"
            ],
            "Secondary Action": [
                "work"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "measures"
            ],
            "Secondary Entity": [
                "GINI",
                "related socioeconomic indexes",
                "datasets",
                "contextual constraints"
            ]
        },
        "Benefit": "I work with datasets in reference to their contextual constraints",
        "Triggers": [
            [
                "API User",
                "normalise"
            ]
        ],
        "Targets": [
            [
                "normalise",
                "measures"
            ],
            [
                "work",
                "datasets"
            ]
        ],
        "Contains": [
            [
                "datasets",
                "contextual constraints"
            ],
            [
                "GINI",
                "measures"
            ],
            [
                "related socioeconomic indexes",
                "measures"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API User, I want to be able to get a relative percentage of a measure to the total of the dataset it comes from, So that I can build alternative displays of the data.",
        "Persona": [
            "API User"
        ],
        "Action": {
            "Primary Action": [
                "get"
            ],
            "Secondary Action": [
                "build"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "relative percentage"
            ],
            "Secondary Entity": [
                "total of the dataset",
                "alternative displays",
                "data",
                "measure"
            ]
        },
        "Benefit": "I can build alternative displays of the data",
        "Triggers": [
            [
                "API User",
                "get"
            ]
        ],
        "Targets": [
            [
                "build",
                "alternative displays"
            ],
            [
                "get",
                "relative percentage"
            ]
        ],
        "Contains": [
            [
                "data",
                "alternative displays"
            ],
            [
                "measure",
                "relative percentage"
            ],
            [
                "total of the dataset",
                "measure"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API User, I want to be able to persistently store visualisation state in the database, So that such can be shared more easily and contribute to a visualisation gallery.",
        "Persona": [
            "API User"
        ],
        "Action": {
            "Primary Action": [
                "persistently store"
            ],
            "Secondary Action": [
                "shared more easily",
                "contribute"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "visualisation state"
            ],
            "Secondary Entity": [
                "database",
                "visualisation gallery"
            ]
        },
        "Benefit": "such can be shared more easily and contribute to a visualisation gallery",
        "Triggers": [
            [
                "API User",
                "persistently store"
            ]
        ],
        "Targets": [
            [
                "shared more easily",
                "visualisation state"
            ],
            [
                "contribute",
                "visualisation gallery"
            ],
            [
                "persistently store",
                "visualisation state"
            ]
        ],
        "Contains": [
            [
                "database",
                "visualisation state"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to have my dataset update automatically as the source file/files changes, So that OpenSpending always shows current data.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "update automatically",
                "always shows"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "dataset"
            ],
            "Secondary Entity": [
                "source file/files",
                "OpenSpending",
                "current data"
            ]
        },
        "Benefit": "OpenSpending always shows current data",
        "Triggers": [
            [
                "Data Publishing User",
                "have"
            ]
        ],
        "Targets": [
            [
                "always shows",
                "current data"
            ],
            [
                "update automatically",
                "dataset"
            ],
            [
                "have",
                "dataset"
            ]
        ],
        "Contains": [
            [
                "OpenSpending",
                "dataset"
            ],
            [
                "dataset",
                "current data"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an OpenSpending Community Member, I want to have a blog that highlights any and all projects in the open fiscal space, So that I can relate to openspending.org as the central hub of fiscal openness.",
        "Persona": [
            "OpenSpending Community Member"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "highlights",
                "relate"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "blog"
            ],
            "Secondary Entity": [
                "any and all projects",
                "open fiscal space",
                "openspending.org",
                "central hub",
                "fiscal openness"
            ]
        },
        "Benefit": "I can relate to openspending.org as the central hub of fiscal openness",
        "Triggers": [
            [
                "OpenSpending Community Member",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "blog"
            ],
            [
                "highlights",
                "any and all projects"
            ],
            [
                "relate",
                "openspending.org"
            ]
        ],
        "Contains": [
            [
                "blog",
                "any and all projects"
            ],
            [
                "open fiscal space",
                "any and all projects"
            ],
            [
                "central hub",
                "fiscal openness"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a User, I want to be able to set my own username, So that my data is more easily discoverable.",
        "Persona": [
            "User"
        ],
        "Action": {
            "Primary Action": [
                "set"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "own username"
            ],
            "Secondary Entity": [
                "data"
            ]
        },
        "Benefit": "my data is more easily discoverable",
        "Triggers": [
            [
                "User",
                "set"
            ]
        ],
        "Targets": [
            [
                "set",
                "own username"
            ]
        ],
        "Contains": [
            [
                "own username",
                "data"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to be able to add a dataset in a Hidden state, So that I can work on a dataset before having it discoverable via OpenSpending user interfaces.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "add"
            ],
            "Secondary Action": [
                "work"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "dataset"
            ],
            "Secondary Entity": [
                "Hidden state",
                "dataset",
                "OpenSpending user interfaces"
            ]
        },
        "Benefit": "I can work on a dataset before having it discoverable via OpenSpending user interfaces",
        "Triggers": [
            [
                "Data Publishing User",
                "add"
            ]
        ],
        "Targets": [
            [
                "work",
                "dataset"
            ],
            [
                "add",
                "dataset"
            ]
        ],
        "Contains": [
            [
                "dataset",
                "Hidden state"
            ],
            [
                "OpenSpending user interfaces",
                "dataset"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to be able to Hide a dataset that I have already added as Public, So that I can fix my mistakes or have a dataset primarily for my own use.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "Hide"
            ],
            "Secondary Action": [
                "fix",
                "have"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "dataset"
            ],
            "Secondary Entity": [
                "mistakes",
                "dataset"
            ]
        },
        "Benefit": "I can fix my mistakes or have a dataset primarily for my own use",
        "Triggers": [
            [
                "Data Publishing User",
                "Hide"
            ]
        ],
        "Targets": [
            [
                "Hide",
                "dataset"
            ],
            [
                "fix",
                "mistakes"
            ],
            [
                "have",
                "dataset"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to have a view on all the datasets I have published, So that I can perform management actions on my own datasets.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "perform"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "view"
            ],
            "Secondary Entity": [
                "management actions",
                "own datasets",
                "datasets I have published"
            ]
        },
        "Benefit": "I can perform management actions on my own datasets",
        "Triggers": [
            [
                "Data Publishing User",
                "have"
            ]
        ],
        "Targets": [
            [
                "perform",
                "management actions"
            ],
            [
                "have",
                "view"
            ]
        ],
        "Contains": [
            [
                "own datasets",
                "management actions"
            ],
            [
                "datasets I have published",
                "view"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to have a functioning Python Client, So that I can add data to the datastore in bulk from the command line or my own programs.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "add"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "functioning Python Client"
            ],
            "Secondary Entity": [
                "datastore",
                "command line",
                "data",
                "own programs"
            ]
        },
        "Benefit": "I can add data to the datastore in bulk from the command line or my own programs",
        "Triggers": [
            [
                "Data Publishing User",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "functioning Python Client"
            ],
            [
                "add",
                "data"
            ]
        ],
        "Contains": [
            [
                "datastore",
                "data"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an OpenSpending Community Member, I want to have an app where I can find examples of use of fiscal data visualisations, So that I can find guidance in creating my own with Open Spending.",
        "Persona": [
            "OpenSpending Community Member"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "find",
                "find",
                "creating"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "app"
            ],
            "Secondary Entity": [
                "examples",
                "guidance",
                "Open Spending",
                "fiscal data visualisations",
                "use"
            ]
        },
        "Benefit": "I can find guidance in creating my own with Open Spending",
        "Triggers": [
            [
                "OpenSpending Community Member",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "app"
            ],
            [
                "find",
                "examples"
            ],
            [
                "find",
                "guidance"
            ],
            [
                "creating",
                "fiscal data visualisations"
            ]
        ],
        "Contains": [
            [
                "use",
                "fiscal data visualisations"
            ],
            [
                "Open Spending",
                "fiscal data visualisations"
            ],
            [
                "examples",
                "use"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Publishing User, I want to know if my CSV file is valid, So that I can fix possible data issues before publishing it on Open Spending.",
        "Persona": [
            "Data Publishing User"
        ],
        "Action": {
            "Primary Action": [
                "know"
            ],
            "Secondary Action": [
                "fix",
                "publishing"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "CSV file"
            ],
            "Secondary Entity": [
                "possible data issues",
                "Open Spending"
            ]
        },
        "Benefit": "I can fix possible data issues before publishing it on Open Spending",
        "Triggers": [
            [
                "Data Publishing User",
                "know"
            ]
        ],
        "Targets": [
            [
                "publishing",
                "CSV file"
            ],
            [
                "know",
                "CSV file"
            ],
            [
                "fix",
                "possible data issues"
            ]
        ],
        "Contains": [
            [
                "Open Spending",
                "CSV file"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Consuming User, I want to be able to search any dataset published and publicly accessible by their title and metadata, So that I can find the datasets I'm interested in.",
        "Persona": [
            "Data Consuming User"
        ],
        "Action": {
            "Primary Action": [
                "search"
            ],
            "Secondary Action": [
                "find"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "any dataset published and publicly accessible"
            ],
            "Secondary Entity": [
                "title",
                "metadata",
                "datasets"
            ]
        },
        "Benefit": "I can find the datasets I'm interested in",
        "Triggers": [
            [
                "Data Consuming User",
                "search"
            ]
        ],
        "Targets": [
            [
                "find",
                "datasets"
            ],
            [
                "search",
                "any dataset published and publicly accessible"
            ]
        ],
        "Contains": [
            [
                "any dataset published and publicly accessible",
                "title"
            ],
            [
                "any dataset published and publicly accessible",
                "metadata"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Data Consuming User, I want to visualize by default in treemap, bubble tree, map and pivot table the most recent year when my dataset contain multiple years, So that I'm not confused with the amounts.",
        "Persona": [
            "Data Consuming User"
        ],
        "Action": {
            "Primary Action": [
                "visualize by default"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "bubble tree",
                "treemap",
                "map",
                "pivot table"
            ],
            "Secondary Entity": [
                "most recent year",
                "dataset",
                "multiple years",
                "amounts"
            ]
        },
        "Benefit": "I'm not confused with the amounts",
        "Triggers": [
            [
                "Data Consuming User",
                "visualize by default"
            ]
        ],
        "Targets": [
            [
                "visualize by default",
                "bubble tree"
            ],
            [
                "visualize by default",
                "treemap"
            ],
            [
                "visualize by default",
                "map"
            ],
            [
                "visualize by default",
                "pivot table"
            ]
        ],
        "Contains": [
            [
                "dataset",
                "multiple years"
            ],
            [
                "treemap",
                "dataset"
            ],
            [
                "bubble tree",
                "dataset"
            ],
            [
                "map",
                "dataset"
            ],
            [
                "pivot table",
                "dataset"
            ],
            [
                "most recent year",
                "dataset"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API user, I want to be able to change the colors of the embedded visualisations in my own platform, So that I can customize the visualisations.",
        "Persona": [
            "API user"
        ],
        "Action": {
            "Primary Action": [
                "change"
            ],
            "Secondary Action": [
                "customize"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "colors"
            ],
            "Secondary Entity": [
                "visualisations",
                "embedded visualisations",
                "own platform"
            ]
        },
        "Benefit": "I can customize the visualisations",
        "Triggers": [
            [
                "API user",
                "change"
            ]
        ],
        "Targets": [
            [
                "change",
                "colors"
            ],
            [
                "customize",
                "visualisations"
            ]
        ],
        "Contains": [
            [
                "embedded visualisations",
                "colors"
            ],
            [
                "own platform",
                "embedded visualisations"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As an API user, I want to be able to change some of the styling of the embedded Viewer in my own platform, So that I can brand it to my own organisation's color scheme.",
        "Persona": [
            "API user"
        ],
        "Action": {
            "Primary Action": [
                "change"
            ],
            "Secondary Action": [
                "brand"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "styling"
            ],
            "Secondary Entity": [
                "embedded Viewer",
                "own platform",
                "own organisation's color scheme"
            ]
        },
        "Benefit": "I can brand it to my own organisation's color scheme",
        "Triggers": [
            [
                "API user",
                "change"
            ]
        ],
        "Targets": [
            [
                "brand",
                "own organisation's color scheme"
            ],
            [
                "change",
                "styling"
            ]
        ],
        "Contains": [
            [
                "styling",
                "own organisation's color scheme"
            ],
            [
                "own platform",
                "embedded Viewer"
            ],
            [
                "embedded Viewer",
                "styling"
            ]
        ]
    },
    {
        "PID": "#G05#",
        "Text": "#G05# As a Platform administrator, I want to be able to translate the data types hierarchies of the Viewer while in embed mode, So that my users can understand the interface in their native language.",
        "Persona": [
            "Platform administrator"
        ],
        "Action": {
            "Primary Action": [
                "translate"
            ],
            "Secondary Action": [
                "understand"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "data types hierarchies"
            ],
            "Secondary Entity": [
                "Viewer",
                "embed mode",
                "interface",
                "native language",
                "users"
            ]
        },
        "Benefit": "my users can understand the interface in their native language",
        "Triggers": [
            [
                "Platform administrator",
                "translate"
            ]
        ],
        "Targets": [
            [
                "translate",
                "data types hierarchies"
            ],
            [
                "understand",
                "interface"
            ]
        ],
        "Contains": [
            [
                "Viewer",
                "data types hierarchies"
            ],
            [
                "Viewer",
                "embed mode"
            ],
            [
                "interface",
                "native language"
            ],
            [
                "users",
                "native language"
            ]
        ]
    }
]