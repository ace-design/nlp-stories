[
    {
        "Text": "#G08# As a Developer, I want to get a Data Package into Node, so that I can start using the data for doing analysis and visualizations.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "node",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get a Data Package into Julia in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I want to add type information to my data, so that it is more useful to others and can be used better with tools like visualization programs. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "add",
            "type",
            "can",
            "better",
            "tools",
            "like",
            "programs"
        ],
        "Entity": [
            "type",
            "information",
            "data",
            "more",
            "useful",
            "can",
            "better",
            "tools",
            "like",
            "visualization",
            "programs"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I want to be able to provide a visualization of data in the Data Package, so that I can provide my analysis and show my work to users of the data. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "provide",
            "package",
            "can",
            "provide",
            "show",
            "work"
        ],
        "Entity": [
            "able",
            "visualization",
            "data",
            "data",
            "package",
            "can",
            "analysis",
            "show",
            "work",
            "users",
            "data"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to be able to save new visualizations, so that I can share them with others or include them in the Data Package. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "save",
            "can",
            "share",
            "include",
            "package"
        ],
        "Entity": [
            "able",
            "save",
            "visualizations",
            "can",
            "share",
            "data",
            "package"
        ]
    },
    {
        "Text": "#G08# As a ResearcherPublisher, I want to know that my data conforms to its Data Package profile, so that I can feel trust in the validity and usefulness of the data. ",
        "Persona": [
            " ResearcherPublisher"
        ],
        "Action": [
            "want",
            "know",
            "conforms",
            "package",
            "profile",
            "can",
            "feel",
            "trust"
        ],
        "Entity": [
            "know",
            "data",
            "data",
            "package",
            "profile",
            "can",
            "feel",
            "trust",
            "validity",
            "usefulness",
            "data"
        ]
    },
    {
        "Text": "#G08# As a ResearcherPublisher, I want to understand the ways in which my data is invalid, so that I can know how to fix it. ",
        "Persona": [
            " ResearcherPublisher"
        ],
        "Action": [
            "want",
            "understand",
            "invalid",
            "can",
            "know",
            "fix"
        ],
        "Entity": [
            "ways",
            "data",
            "invalid",
            "can",
            "know",
            "how",
            "fix"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get a Data Package into R in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get a Data Package into Excel in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "excel",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get a Data Package into SPSS in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get a Data Package into STATA in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to be able to translate my EML dataset to a Data Package, so that I can benefit from the wide array of tools available for Data Packages. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "translate",
            "package",
            "can",
            "benefit",
            "array",
            "tools",
            "packages"
        ],
        "Entity": [
            "able",
            "data",
            "package",
            "can",
            "benefit",
            "wide",
            "array",
            "tools",
            "data",
            "packages"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get a Data Package into LibreOffice/OpenOffice in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to get a Data Package into Python in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "python",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want a jQuery plugin for Core Data Packages, so that I can use it to apply to form control that uses a core dataset for autocompletion. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "core",
            "packages",
            "can",
            "use",
            "apply",
            "form",
            "control",
            "uses",
            "core"
        ],
        "Entity": [
            "core",
            "data",
            "packages",
            "can",
            "use",
            "form",
            "control",
            "uses",
            "core"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get my Excel spreadsheet into a Data Package, so that I can benefit from better tooling and standardization. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "get",
            "excel",
            "package",
            "can",
            "benefit",
            "better"
        ],
        "Entity": [
            "spreadsheet",
            "data",
            "package",
            "can",
            "benefit",
            "better",
            "tooling",
            "standardization"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to do exploratory data analysis in R and operationalize that analysis in Python, so that I can use the best tool for the job.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "can",
            "use",
            "best",
            "tool",
            "job"
        ],
        "Entity": [
            "data",
            "analysis",
            "analysis",
            "python",
            "can",
            "use",
            "best",
            "tool",
            "job"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to get a Data Package into Clojure in seconds, so that I can start using the data in doing analysis and visualizations. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to get a Data Package into Julia in seconds, so that I can start using the data in doing analysis and visualizations. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to get a Data Package into C++ in seconds, so that I can start using the data in doing analysis and visualizations. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "get",
            "package",
            "seconds",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "data",
            "package",
            "seconds",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis",
            "visualizations"
        ]
    },
    {
        "Text": "#G08# As a Machine Learning expert, I would like to package ML datasets as data packages, so that I can easily import them into my ML platform, so that I can start using the data in doing analysis. ",
        "Persona": [
            " Machine Learning expert"
        ],
        "Action": [
            "would",
            "like",
            "package",
            "packages",
            "can",
            "import",
            "can",
            "start",
            "using"
        ],
        "Entity": [
            "like",
            "package",
            "data",
            "packages",
            "can",
            "import",
            "platform",
            "can",
            "start",
            "using",
            "data",
            "doing",
            "analysis"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want an Elasticsearch integration, so that I can integrate data-packaged data with pipelines that use Elasticsearch. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "can",
            "integrate",
            "pipelines",
            "use"
        ],
        "Entity": [
            "integration",
            "can",
            "data",
            "pipelines",
            "use"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want an SPSS integration, so that I can integrate data-packaged data with pipelines that use SPSS. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "can",
            "integrate",
            "pipelines",
            "use"
        ],
        "Entity": [
            "integration",
            "can",
            "data",
            "pipelines",
            "use"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want an EPrints integration, so that I can integrate data-packaged data with pipelines that use EPrints. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "can",
            "integrate",
            "pipelines",
            "use"
        ],
        "Entity": [
            "integration",
            "can",
            "data",
            "pipelines",
            "use"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want a Mongo integration, so that I can integrate data-packaged data with pipelines that use Mongo. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "can",
            "integrate",
            "pipelines",
            "use"
        ],
        "Entity": [
            "mongo",
            "integration",
            "can",
            "data",
            "pipelines",
            "use",
            "mongo"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want a DAT integration, so that I can integrate data-packaged data with pipelines that use DAT. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "can",
            "integrate",
            "pipelines",
            "use"
        ],
        "Entity": [
            "integration",
            "can",
            "data",
            "pipelines",
            "use"
        ]
    },
    {
        "Text": "#G08# As a ResearcherGovernment Publisher, I want to add general reference data to my narrow dataset, so that my dataset is more useful. ",
        "Persona": [
            " ResearcherGovernment Publisher"
        ],
        "Action": [
            "want",
            "add",
            "general",
            "reference",
            "narrow"
        ],
        "Entity": [
            "general",
            "reference",
            "data",
            "narrow",
            "more",
            "useful"
        ]
    },
    {
        "Text": "#G08# As a ResearcherGovernment Publisher, I want to add general country names to my dataset that only contains country codes, so that my dataset is more readable. ",
        "Persona": [
            " ResearcherGovernment Publisher"
        ],
        "Action": [
            "want",
            "add",
            "general",
            "names",
            "contains",
            "codes"
        ],
        "Entity": [
            "general",
            "country",
            "names",
            "country",
            "codes",
            "more"
        ]
    },
    {
        "Text": "#G08# As a ResearcherGovernment Publisher, I want to add reference data on inflation to my spending dataset, so that the spending lines in my dataset is more understandable. ",
        "Persona": [
            " ResearcherGovernment Publisher"
        ],
        "Action": [
            "want",
            "add",
            "reference",
            "spending",
            "spending",
            "lines"
        ],
        "Entity": [
            "reference",
            "data",
            "inflation",
            "spending",
            "spending",
            "lines",
            "more"
        ]
    },
    {
        "Text": "#G08# As a ResearcherGovernment Publisher, I want to map lines in my dataset using geographic data in my dataset, so that my dataset is more engaging for non-technical users. ",
        "Persona": [
            " ResearcherGovernment Publisher"
        ],
        "Action": [
            "want",
            "map",
            "lines",
            "using"
        ],
        "Entity": [
            "map",
            "lines",
            "using",
            "data",
            "more",
            "users"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to be able to reference a remote-controlled vocabulary for my dataset, so that I can be sure that column of my dataset are valid against a single shard list of terms. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "reference",
            "can",
            "are",
            "single",
            "list",
            "terms"
        ],
        "Entity": [
            "able",
            "reference",
            "vocabulary",
            "can",
            "column",
            "single",
            "shard",
            "list",
            "terms"
        ]
    },
    {
        "Text": "#G08# As a developer, I want an DSpace integration, so that I can integrate data-packaged data with pipelines that use Dspace. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "can",
            "integrate",
            "pipelines",
            "use"
        ],
        "Entity": [
            "integration",
            "can",
            "data",
            "pipelines",
            "use"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want Feather integration, so that I can integrate data-packaged data with pipelines that use Feather. ",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "feather",
            "can",
            "integrate",
            "pipelines",
            "use",
            "feather"
        ],
        "Entity": [
            "feather",
            "integration",
            "can",
            "data",
            "pipelines",
            "use",
            "feather"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want HDF5 integration, so that I can integrate data-packaged data with pipelines that use HDF5.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "can",
            "integrate",
            "pipelines",
            "use"
        ],
        "Entity": [
            "integration",
            "can",
            "data",
            "pipelines",
            "use"
        ]
    },
    {
        "Text": "#G08# As a Researcher, working with data, I want an Microsoft Power BI integration, so that I can import datasets without downloading them locally. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "power",
            "can",
            "import"
        ],
        "Entity": [
            "working",
            "data",
            "power",
            "integration",
            "can",
            "import"
        ]
    },
    {
        "Text": "#G08# As a ResearcherPublisher, I want an integration with Zenodo, so that when I store my dataset in GitHub, I don’t have to retype descriptive information about my dataset. ",
        "Persona": [
            " ResearcherPublisher"
        ],
        "Action": [
            "want",
            "store",
            "have",
            "retype"
        ],
        "Entity": [
            "integration",
            "store",
            "information"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I would like an integration with Open Refine, so that I can output cleaned Data Packages. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "would",
            "like",
            "open",
            "refine",
            "can",
            "output",
            "packages"
        ],
        "Entity": [
            "like",
            "integration",
            "open",
            "can",
            "output",
            "data",
            "packages"
        ]
    },
    {
        "Text": "#G08# As a ResearcherPublisher, I want to publish Data Packages to CKAN, so that my data is findable, and I can have a data API. ",
        "Persona": [
            " ResearcherPublisher"
        ],
        "Action": [
            "want",
            "publish",
            "packages",
            "can",
            "have"
        ],
        "Entity": [
            "data",
            "packages",
            "data",
            "can",
            "data"
        ]
    },
    {
        "Text": "#G08# As a ResearcherDeveloper, would like the ability import/export from MS-SQL, so that I can use Data Packages in workflows that involve MS-SQL. ",
        "Persona": [
            " ResearcherDeveloper"
        ],
        "Action": [
            "would",
            "like",
            "can",
            "use",
            "packages",
            "involve"
        ],
        "Entity": [
            "like",
            "ability",
            "can",
            "use",
            "data",
            "packages"
        ]
    },
    {
        "Text": "#G08# As a Researcher, working with data in NetCDF, I want NetCDF integration, so that I can store my data in plaintext while still retaining its metadata. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "can",
            "store",
            "while",
            "still"
        ],
        "Entity": [
            "working",
            "data",
            "integration",
            "can",
            "store",
            "data",
            "while",
            "still"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want an integration with https://data.mendeley.com/, so that I can validate my data upon ingest to the service.",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "can",
            "validate",
            "ingest",
            "service"
        ],
        "Entity": [
            "integration",
            "can",
            "data",
            "service"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I would like an integration with Excel, so that I can output cleaned Data Packages. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "would",
            "like",
            "excel",
            "can",
            "output",
            "packages"
        ],
        "Entity": [
            "like",
            "integration",
            "can",
            "output",
            "data",
            "packages"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I want to store my data quickly and easily online. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "store"
        ],
        "Entity": [
            "store",
            "data"
        ]
    },
    {
        "Text": "#G08# As a Repository Manager, I want a tool that makes it easy for researchers/ users to add basic metadata to their research data, so that it is more findable and therefore useful. ",
        "Persona": [
            " Repository Manager"
        ],
        "Action": [
            "want",
            "tool",
            "makes",
            "easy",
            "add",
            "research"
        ],
        "Entity": [
            "tool",
            "makes",
            "researchers",
            "users",
            "basic",
            "research",
            "data",
            "more",
            "useful"
        ]
    },
    {
        "Text": "#G08# As a ResearcherPublisher, I want validate my data with a minimum of clicks, so that I can feel trust in the validity and usefulness of the data. ",
        "Persona": [
            " ResearcherPublisher"
        ],
        "Action": [
            "want",
            "validate",
            "clicks",
            "can",
            "feel",
            "trust"
        ],
        "Entity": [
            "data",
            "minimum",
            "clicks",
            "can",
            "feel",
            "trust",
            "validity",
            "usefulness",
            "data"
        ]
    },
    {
        "Text": "#G08# As a publisher, I want to be able to check that every time I update my data it is still good, so that I can catch errors early and store reliable data. ",
        "Persona": [
            " publisher"
        ],
        "Action": [
            "want",
            "check",
            "time",
            "update",
            "still",
            "can",
            "catch",
            "store"
        ],
        "Entity": [
            "able",
            "check",
            "time",
            "update",
            "data",
            "still",
            "good",
            "can",
            "catch",
            "errors",
            "store",
            "data"
        ]
    },
    {
        "Text": "#G08# As a DeveloperWrangler, I want to use a command line tool that allows met to validate data, so that I can feel trust in the validity and usefulness of the data quickly and in the context of my command line workflow. ",
        "Persona": [
            " DeveloperWrangler"
        ],
        "Action": [
            "want",
            "use",
            "command",
            "line",
            "tool",
            "allows",
            "met",
            "validate",
            "can",
            "feel",
            "trust",
            "command",
            "line"
        ],
        "Entity": [
            "use",
            "command",
            "line",
            "tool",
            "data",
            "can",
            "feel",
            "trust",
            "validity",
            "usefulness",
            "data",
            "context",
            "command",
            "line"
        ]
    },
    {
        "Text": "#G08# As a developer, I want an online service that is connected to my data repository that validates data on update, so that I can delegate data validation to a third party. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "service",
            "validates",
            "update",
            "can",
            "delegate",
            "party"
        ],
        "Entity": [
            "service",
            "data",
            "repository",
            "data",
            "update",
            "can",
            "delegate",
            "data",
            "validation",
            "third",
            "party"
        ]
    },
    {
        "Text": "#G08# As a government Publisher, I want to make it easy to prove that our published data is valid, so that I can claim that we are living up to our transparency commitments. ",
        "Persona": [
            " government Publisher"
        ],
        "Action": [
            "want",
            "make",
            "easy",
            "prove",
            "can",
            "claim",
            "are"
        ],
        "Entity": [
            "make",
            "data",
            "can",
            "claim",
            "living",
            "transparency",
            "commitments"
        ]
    },
    {
        "Text": "#G08# As a Civic Tech Activist, I want to make it easy to assess the quality of data stored by the government, so that I can make sure that government is living up to its transparency commitments. ",
        "Persona": [
            " Civic Tech Activist"
        ],
        "Action": [
            "want",
            "make",
            "easy",
            "assess",
            "stored",
            "can",
            "make"
        ],
        "Entity": [
            "make",
            "quality",
            "data",
            "government",
            "can",
            "make",
            "government",
            "living",
            "transparency",
            "commitments"
        ]
    },
    {
        "Text": "#G08# As a publisher, I want to embed an interactive preview of my data on my site, so that users can be encouraged that this is the correct data for them. ",
        "Persona": [
            " publisher"
        ],
        "Action": [
            "want",
            "embed",
            "preview",
            "site",
            "can",
            "encouraged",
            "correct"
        ],
        "Entity": [
            "preview",
            "data",
            "site",
            "users",
            "can",
            "data"
        ]
    },
    {
        "Text": "#G08# As a publisher, I want to embed a preview button on my site, so that users can preview the data and be encouraged that this is the correct data for them.",
        "Persona": [
            " publisher"
        ],
        "Action": [
            "want",
            "embed",
            "preview",
            "button",
            "site",
            "can",
            "preview",
            "encouraged",
            "correct"
        ],
        "Entity": [
            "preview",
            "button",
            "site",
            "users",
            "can",
            "preview",
            "data",
            "data"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I want to know how many users have previewed a dataset, so that I know how interest in a dataset relates to its actual download numbers. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "know",
            "have",
            "know",
            "interest",
            "relates",
            "download",
            "numbers"
        ],
        "Entity": [
            "know",
            "how",
            "many",
            "users",
            "know",
            "how",
            "interest",
            "numbers"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to customize an existing wizard for my specific type of data, so that I can give my users a great user experience.",
        "Persona": [
            " Developer"
        ],
        "Action": [
            "want",
            "customize",
            "type",
            "can",
            "give",
            "experience"
        ],
        "Entity": [
            "wizard",
            "specific",
            "type",
            "data",
            "can",
            "give",
            "users",
            "great",
            "user",
            "experience"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I want to add useful metadata or add in new data columns to make the dataset more useful. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "want",
            "add",
            "add",
            "make"
        ],
        "Entity": [
            "useful",
            "data",
            "columns",
            "make",
            "more",
            "useful"
        ]
    },
    {
        "Text": "#G08# As a publisher, I want to package reproducible steps to get a certain data state, so my methodology is transparent and can be rerun by others. ",
        "Persona": [
            " publisher"
        ],
        "Action": [
            "want",
            "package",
            "steps",
            "get",
            "state",
            "can",
            "rerun"
        ],
        "Entity": [
            "package",
            "steps",
            "data",
            "state",
            "methodology",
            "can",
            "rerun"
        ]
    },
    {
        "Text": "#G08# As a DeveloperDataWrangler, I want to store my Data Package in GitHub and have it automatically stored into CKAN, so that I get a data API and my dataset is listed in a relevant catalog. ",
        "Persona": [
            " DeveloperDataWrangler"
        ],
        "Action": [
            "want",
            "store",
            "package",
            "have",
            "stored",
            "get",
            "catalog"
        ],
        "Entity": [
            "store",
            "data",
            "package",
            "data",
            "catalog"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want a tool that can generate basic statistics about a dataset, so that I can get a quick preview of the data. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "tool",
            "can",
            "generate",
            "can",
            "get",
            "preview"
        ],
        "Entity": [
            "tool",
            "can",
            "basic",
            "statistics",
            "can",
            "quick",
            "preview",
            "data"
        ]
    },
    {
        "Text": "#G08# As a DeveloperPublisher, I want a tool to create an embeddable data summary via iframe, so that I can embed data summaries across sites. ",
        "Persona": [
            " DeveloperPublisher"
        ],
        "Action": [
            "want",
            "tool",
            "create",
            "can",
            "embed",
            "sites"
        ],
        "Entity": [
            "tool",
            "data",
            "summary",
            "can",
            "data",
            "summaries",
            "sites"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want an app that generates an OpenRefine reconciliation API endpoint from a Tabular Data Package, so that I can use it to clean messy data. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "generates",
            "package",
            "can",
            "use",
            "clean"
        ],
        "Entity": [
            "reconciliation",
            "data",
            "package",
            "can",
            "use",
            "clean",
            "data"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want an app that create proxy Data Packages for well know and reliable data, sources, so that I can load high quality data using Data Package tooling. ",
        "Persona": [
            " Researcher"
        ],
        "Action": [
            "want",
            "create",
            "packages",
            "well",
            "know",
            "can",
            "load",
            "using",
            "package"
        ],
        "Entity": [
            "proxy",
            "data",
            "packages",
            "well",
            "know",
            "data",
            "sources",
            "can",
            "load",
            "high",
            "quality",
            "data",
            "using",
            "data",
            "package",
            "tooling"
        ]
    },
    {
        "Text": "#G08# As a RepositoryManagerResearcher, I want an app that acts as a match-making service for packaging data, so that owners are paired with data packagers. ",
        "Persona": [
            " RepositoryManagerResearcher"
        ],
        "Action": [
            "want",
            "acts",
            "service",
            "are"
        ],
        "Entity": [
            "acts",
            "service",
            "packaging",
            "data",
            "owners",
            "data"
        ]
    },
    {
        "Text": "#G08# As a developer, I would like to create a web socket protocol for Frictionless data tools, so that I can easily use data packages with additional data analysis tools. ",
        "Persona": [
            " developer"
        ],
        "Action": [
            "would",
            "like",
            "create",
            "web",
            "socket",
            "tools",
            "can",
            "use",
            "packages",
            "tools"
        ],
        "Entity": [
            "like",
            "web",
            "socket",
            "protocol",
            "data",
            "tools",
            "can",
            "use",
            "data",
            "packages",
            "data",
            "analysis",
            "tools"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I would like a tool to check data availability persistence after publication. ",
        "Persona": [
            " Publisher"
        ],
        "Action": [
            "would",
            "like",
            "tool",
            "check"
        ],
        "Entity": [
            "like",
            "tool",
            "check",
            "data",
            "availability",
            "persistence",
            "publication"
        ]
    },
    {
        "Text": "#G08# As a ResearcherPublisher, I want to specify the funding that contributed to the creation of a given dataset, so that funding agencies can identify the funding, source for a given dataset. ",
        "Persona": [
            " ResearcherPublisher"
        ],
        "Action": [
            "want",
            "specify",
            "contributed",
            "given",
            "can",
            "identify",
            "given"
        ],
        "Entity": [
            "funding",
            "creation",
            "given",
            "funding",
            "agencies",
            "can",
            "funding",
            "source",
            "given"
        ]
    },
    {
        "Text": "#G08# As a ResearcherPublisher, I want to add a DOI to a dataset, so that I can cite it in papers stored  with the data. ",
        "Persona": [
            " ResearcherPublisher"
        ],
        "Action": [
            "want",
            "add",
            "can",
            "cite",
            "papers",
            "stored"
        ],
        "Entity": [
            "can",
            "papers",
            "data"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to include the code of a dataset type in my app artifact and create a dataset of that type when deploying the app.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "include",
            "code",
            "type",
            "create",
            "type"
        ],
        "Entity": [
            "code",
            "type",
            "artifact",
            "type"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to deploy a new version of a dataset type as part of deploying a new version of the app that includes it and I expect that all dataset instances of that type that were created as part of the app deployment start using the new code.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "deploy",
            "type",
            "part",
            "includes",
            "expect",
            "instances",
            "type",
            "were",
            "created",
            "part",
            "start",
            "using",
            "code"
        ],
        "Entity": [
            "version",
            "type",
            "part",
            "version",
            "all",
            "instances",
            "type",
            "part",
            "deployment",
            "start",
            "using",
            "code"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to deploy a new version of a dataset type as part of an app artifact, without affecting other datasets of this type.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "deploy",
            "type",
            "part",
            "type"
        ],
        "Entity": [
            "version",
            "type",
            "part",
            "artifact",
            "type"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to explore a dataset instance of a type that was deployed as part of an app.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "explore",
            "instance",
            "type",
            "was",
            "part"
        ],
        "Entity": [
            "instance",
            "type",
            "part"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that when I deploy an artifact without creating an app this will not create any dataset types or instances.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "ensure",
            "deploy",
            "creating",
            "will",
            "create",
            "types",
            "instances"
        ],
        "Entity": [
            "ensure",
            "artifact",
            "will",
            "types",
            "instances"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to share a dataset type across multiple applications that include the dataset type's code in their artifacts.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "share",
            "type",
            "include",
            "code"
        ],
        "Entity": [
            "share",
            "type",
            "multiple",
            "applications",
            "code",
            "artifacts"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that when I deploy a new version of an app that includes a shared dataset type that all dataset instances created by this app start using the new code but all dataset instances created by other apps remain unchanged.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "ensure",
            "deploy",
            "includes",
            "type",
            "instances",
            "created",
            "start",
            "using",
            "code",
            "instances",
            "created",
            "remain"
        ],
        "Entity": [
            "ensure",
            "version",
            "type",
            "all",
            "instances",
            "start",
            "using",
            "code",
            "but",
            "all",
            "instances"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that when I deploy a new version of an app that includes an older version of a dataset type deployed by another app and I expect that the dataset instances created by this app use the dataset type code included in this app.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "ensure",
            "deploy",
            "includes",
            "type",
            "expect",
            "instances",
            "created",
            "use",
            "type",
            "code"
        ],
        "Entity": [
            "ensure",
            "version",
            "version",
            "type",
            "instances",
            "use",
            "type",
            "code"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that when I deploy a new version of an app that includes a different version of a dataset type deployed by another app and this app shares a dataset instance of this type with the other app the deployment will fail with a version conflict error. ",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "ensure",
            "deploy",
            "includes",
            "type",
            "shares",
            "instance",
            "type",
            "will",
            "fail",
            "conflict"
        ],
        "Entity": [
            "ensure",
            "version",
            "version",
            "type",
            "shares",
            "instance",
            "type",
            "deployment",
            "will",
            "fail",
            "version",
            "conflict",
            "error"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to share a dataset type that I had previously deployed as part of an app.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "share",
            "type",
            "had",
            "part"
        ],
        "Entity": [
            "share",
            "type",
            "part"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to deploy a dataset type independent from any app and allow apps to create and use dataset instances of that type.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "deploy",
            "type",
            "allow",
            "create",
            "use",
            "instances",
            "type"
        ],
        "Entity": [
            "type",
            "independent",
            "use",
            "instances",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to have the option of forcing applications to have the dataset code injected at runtime.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "have",
            "forcing",
            "have",
            "code"
        ],
        "Entity": [
            "option",
            "applications",
            "code"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to have an archetype that helps me package my dataset type properly.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "have",
            "helps",
            "package",
            "type"
        ],
        "Entity": [
            "archetype",
            "helps",
            "package",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to separate the interface from the implementation of a dataset type.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "separate",
            "type"
        ],
        "Entity": [
            "separate",
            "interface",
            "implementation",
            "type"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to only depend on the interface of a dataset type in my app and have the system inject the implementation at runtime.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "depend",
            "type",
            "have",
            "inject"
        ],
        "Entity": [
            "interface",
            "type",
            "system",
            "implementation"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to write unit tests for an app that depends on the interface of a dataset type.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "write",
            "tests",
            "depends",
            "type"
        ],
        "Entity": [
            "unit",
            "tests",
            "interface",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to assign explicit versions to the code of a dataset type.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "assign",
            "code",
            "type"
        ],
        "Entity": [
            "assign",
            "versions",
            "code",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to deploy a new version of a dataset type without affecting the dataset instances of that type.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "deploy",
            "type",
            "instances",
            "type"
        ],
        "Entity": [
            "version",
            "type",
            "instances",
            "type"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to create a dataset instance with a specific version of a dataset type.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "create",
            "instance",
            "type"
        ],
        "Entity": [
            "instance",
            "specific",
            "version",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to explore a dataset instance created from a dataset type that was deployed by itself.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "explore",
            "instance",
            "created",
            "type",
            "was"
        ],
        "Entity": [
            "instance",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to delete outdated versions of a dataset type and I expect this to fail if there are any dataset instances with that version of the type.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "delete",
            "type",
            "expect",
            "fail",
            "are",
            "instances",
            "type"
        ],
        "Entity": [
            "versions",
            "type",
            "fail",
            "there",
            "instances",
            "version",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to list all dataset instances that use a dataset type or a specific version of a type.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "list",
            "instances",
            "use",
            "type",
            "type"
        ],
        "Entity": [
            "list",
            "all",
            "instances",
            "use",
            "type",
            "specific",
            "version",
            "type"
        ]
    },
    {
        "Text": "#G17# As a data scientist, I want to be able to create a dataset instance of an existing dataset type without writing code.",
        "Persona": [
            " data scientist"
        ],
        "Action": [
            "want",
            "create",
            "instance",
            "type",
            "code"
        ],
        "Entity": [
            "able",
            "instance",
            "type",
            "writing",
            "code"
        ]
    },
    {
        "Text": "#G17# As a data scientist, I want to be able to upgrade a dataset instance to a new version of its code.",
        "Persona": [
            " data scientist"
        ],
        "Action": [
            "want",
            "upgrade",
            "instance",
            "code"
        ],
        "Entity": [
            "able",
            "upgrade",
            "instance",
            "version",
            "code"
        ]
    },
    {
        "Text": "#G17# As a hydrator user, I want to create a pipeline that reads or writes an existing dataset instance.",
        "Persona": [
            " hydrator user"
        ],
        "Action": [
            "want",
            "create",
            "pipeline",
            "reads",
            "writes",
            "instance"
        ],
        "Entity": [
            "pipeline",
            "reads",
            "writes",
            "instance"
        ]
    },
    {
        "Text": "#G17# As a hydrator user, I want to create a pipeline that reads or writes a new dataset instance and I want to create that dataset instance as part of pipeline creation.",
        "Persona": [
            " hydrator user"
        ],
        "Action": [
            "want",
            "create",
            "pipeline",
            "reads",
            "writes",
            "instance",
            "want",
            "create",
            "instance",
            "part",
            "pipeline"
        ],
        "Entity": [
            "pipeline",
            "reads",
            "writes",
            "instance",
            "instance",
            "part",
            "pipeline",
            "creation"
        ]
    },
    {
        "Text": "#G17# As a hydrator user, I want to specify an explicit version of the dataset types of the dataset instances created by my pipeline and I expect pipeline creation to fail if that results in incompatible upgrade of an existing dataset instance that is shared with other apps or pipelines.",
        "Persona": [
            " hydrator user"
        ],
        "Action": [
            "want",
            "specify",
            "types",
            "instances",
            "created",
            "pipeline",
            "expect",
            "pipeline",
            "fail",
            "results",
            "upgrade",
            "instance",
            "pipelines"
        ],
        "Entity": [
            "version",
            "types",
            "instances",
            "pipeline",
            "pipeline",
            "creation",
            "fail",
            "results",
            "incompatible",
            "upgrade",
            "instance",
            "pipelines"
        ]
    },
    {
        "Text": "#G17# As a hydrator user, I want to explore the datasets created by my pipeline.",
        "Persona": [
            " hydrator user"
        ],
        "Action": [
            "want",
            "explore",
            "created",
            "pipeline"
        ],
        "Entity": [
            "pipeline"
        ]
    },
    {
        "Text": "#G17# As a hydrator user, I want to ensure that all dataset instances created by apps are available as sinks and sources for pipelines.",
        "Persona": [
            " hydrator user"
        ],
        "Action": [
            "want",
            "ensure",
            "instances",
            "created",
            "are",
            "sinks",
            "pipelines"
        ],
        "Entity": [
            "ensure",
            "all",
            "instances",
            "sinks",
            "sources",
            "pipelines"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that all dataset instances created by Hydrator pipelines are accessible to the app.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "ensure",
            "instances",
            "created",
            "pipelines",
            "are"
        ],
        "Entity": [
            "ensure",
            "all",
            "instances",
            "pipelines"
        ]
    },
    {
        "Text": "#G17# As a plugin developer, I want to include the code for a dataset type in the plugin artifact, so that when a pipeline using this plugin is created a dataset instance of that type is created and it is explorable and available to apps.",
        "Persona": [
            " plugin developer"
        ],
        "Action": [
            "want",
            "include",
            "code",
            "type",
            "pipeline",
            "using",
            "created",
            "instance",
            "type",
            "created"
        ],
        "Entity": [
            "code",
            "type",
            "artifact",
            "pipeline",
            "using",
            "instance",
            "type"
        ]
    },
    {
        "Text": "#G17# As a plugin developer, I want to use a custom dataset type that was deployed independently or as part of an app inside the plugin. ",
        "Persona": [
            " plugin developer"
        ],
        "Action": [
            "want",
            "use",
            "type",
            "was",
            "part"
        ],
        "Entity": [
            "use",
            "custom",
            "type",
            "part",
            "inside"
        ]
    },
    {
        "Text": "#G17# As a plugin developer, I want to upgrade the code of a dataset type used by a dataset instance created by that plugin when I deploy a new version of the plugin and update the pipeline to use that version.",
        "Persona": [
            " plugin developer"
        ],
        "Action": [
            "want",
            "upgrade",
            "code",
            "type",
            "instance",
            "created",
            "deploy",
            "update",
            "pipeline",
            "use"
        ],
        "Entity": [
            "upgrade",
            "code",
            "type",
            "instance",
            "version",
            "update",
            "pipeline",
            "use",
            "version"
        ]
    },
    {
        "Text": "#G17# As a pipeline developer, I want to upgrade a dataset instance to a newer version of the code after the pipeline was created.",
        "Persona": [
            " pipeline developer"
        ],
        "Action": [
            "want",
            "upgrade",
            "instance",
            "code",
            "pipeline",
            "was",
            "created"
        ],
        "Entity": [
            "upgrade",
            "instance",
            "version",
            "code",
            "pipeline"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to have the option of implementing an upgrade step for when a dataset instance is upgraded to a new version of the dataset type.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "have",
            "upgrade",
            "step",
            "instance",
            "upgraded",
            "type"
        ],
        "Entity": [
            "option",
            "upgrade",
            "step",
            "instance",
            "version",
            "type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to have a way to reject an upgrade of a dataset instance to a newer version of it type if the upgrade is not compatible.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "have",
            "reject",
            "upgrade",
            "instance",
            "type",
            "upgrade"
        ],
        "Entity": [
            "way",
            "reject",
            "upgrade",
            "instance",
            "version",
            "type",
            "upgrade"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to have the option of implementing a migration procedure that can be run after an upgrade of a dataset instance to a new version of it type. ",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "have",
            "can",
            "run",
            "upgrade",
            "instance",
            "type"
        ],
        "Entity": [
            "option",
            "migration",
            "procedure",
            "can",
            "run",
            "upgrade",
            "instance",
            "version",
            "type"
        ]
    },
    {
        "Text": "#G17# As a developer, I want to take a dataset offline, so that I can perform a long-running maintenance or migration procedure.",
        "Persona": [
            " developer"
        ],
        "Action": [
            "want",
            "take",
            "can",
            "perform"
        ],
        "Entity": [
            "take",
            "can",
            "maintenance",
            "migration",
            "procedure"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to implement custom administrative operations such as \"compaction\" or \"rebalance\" that are no common to all dataset types.",
        "Persona": [
            " dataset developer"
        ],
        "Action": [
            "want",
            "implement",
            "are",
            "types"
        ],
        "Entity": [
            "implement",
            "custom",
            "operations",
            "common",
            "all",
            "types"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to perform custom administrative operations on dataset instances from my app and the CLI and REST or the UI.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "perform",
            "instances",
            "rest"
        ],
        "Entity": [
            "custom",
            "operations",
            "instances",
            "rest"
        ]
    },
    {
        "Text": "#G17# As a user, I want to find out what properties are supported by the dataset type what values are allowed and what the defaults are when creating a dataset instance. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "find",
            "out",
            "are",
            "type",
            "values",
            "are",
            "defaults",
            "are",
            "creating",
            "instance"
        ],
        "Entity": [
            "find",
            "out",
            "properties",
            "type",
            "values",
            "defaults",
            "instance"
        ]
    },
    {
        "Text": "#G17# As a user, I want to specify the schema of a dataset in a uniform way across all dataset types.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "specify",
            "uniform",
            "types"
        ],
        "Entity": [
            "schema",
            "uniform",
            "way",
            "all",
            "types"
        ]
    },
    {
        "Text": "#G17# As a user, I want to specify schema as a JSON string.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "specify",
            "string"
        ],
        "Entity": [
            "schema",
            "string"
        ]
    },
    {
        "Text": "#G17# As a user, I want to specify schema as a SQL schema string.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "specify",
            "string"
        ],
        "Entity": [
            "schema",
            "schema",
            "string"
        ]
    },
    {
        "Text": "#G17# As a user, I want to configure time-to-live in a uniform way across all dataset types.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "configure",
            "uniform",
            "types"
        ],
        "Entity": [
            "uniform",
            "way",
            "all",
            "types"
        ]
    },
    {
        "Text": "#G17# As a user, I want to see the properties that were used to configure a dataset instance.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "see",
            "were",
            "configure",
            "instance"
        ],
        "Entity": [
            "see",
            "properties",
            "instance"
        ]
    },
    {
        "Text": "#G17# As a user, I want to find out what properties of a dataset can be updated.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "find",
            "out",
            "can",
            "updated"
        ],
        "Entity": [
            "find",
            "out",
            "properties",
            "can"
        ]
    },
    {
        "Text": "#G17# As a user, I want to update the properties of a dataset instance and I expect this to fail if the new properties are not compatible with a meaningful error message.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "update",
            "instance",
            "expect",
            "fail",
            "are",
            "message"
        ],
        "Entity": [
            "update",
            "properties",
            "instance",
            "fail",
            "properties",
            "error",
            "message"
        ]
    },
    {
        "Text": "#G17# As a user, I want to update a single property of a dataset instance without knowing all other properties. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "update",
            "single",
            "instance"
        ],
        "Entity": [
            "update",
            "single",
            "property",
            "instance",
            "knowing",
            "all",
            "properties"
        ]
    },
    {
        "Text": "#G17# As a user, I want to remove a single property of a dataset instance without knowing all other properties. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "remove",
            "single",
            "instance"
        ],
        "Entity": [
            "remove",
            "single",
            "property",
            "instance",
            "knowing",
            "all",
            "properties"
        ]
    },
    {
        "Text": "#G17# As a user, I want to trigger a migration process for a dataset if updating its properties requires that.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "trigger",
            "process",
            "updating",
            "requires"
        ],
        "Entity": [
            "trigger",
            "migration",
            "process",
            "updating",
            "properties"
        ]
    },
    {
        "Text": "#G17# As a user, I want to ensure that if reconfiguration of a dataset fails then no changes have taken effect, so that all steps required to reconfigure a dataset must be done as a single atomic action.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "ensure",
            "fails",
            "changes",
            "have",
            "taken",
            "effect",
            "steps",
            "required",
            "must",
            "done",
            "single"
        ],
        "Entity": [
            "ensure",
            "fails",
            "then",
            "changes",
            "effect",
            "all",
            "steps",
            "must",
            "single",
            "action"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that application creation fails if any of its datasets cannot be created.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "ensure",
            "fails",
            "cannot",
            "created"
        ],
        "Entity": [
            "ensure",
            "application",
            "creation",
            "fails"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that application redeployment fails if any of its datasets cannot be reconfigured.",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "ensure",
            "fails",
            "cannot"
        ],
        "Entity": [
            "ensure",
            "application",
            "redeployment",
            "fails"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to tolerate existing datasets if their properties are different but compatible when creating a dataset as part of app deployment. ",
        "Persona": [
            " app developer"
        ],
        "Action": [
            "want",
            "tolerate",
            "are",
            "creating",
            "part"
        ],
        "Entity": [
            "properties",
            "but",
            "part",
            "deployment"
        ]
    },
    {
        "Text": "#G17# As a pipeline designer, I want to get a meaningful error message when pipeline creation fails when I use an existing dataset as a sink or source, so that I know that the schema or any other property of the dataset is incompatible with what the pipeline requires. ",
        "Persona": [
            " pipeline designer"
        ],
        "Action": [
            "want",
            "get",
            "message",
            "pipeline",
            "fails",
            "use",
            "sink",
            "know",
            "pipeline",
            "requires"
        ],
        "Entity": [
            "error",
            "message",
            "pipeline",
            "creation",
            "fails",
            "use",
            "sink",
            "source",
            "know",
            "schema",
            "property",
            "incompatible",
            "pipeline"
        ]
    },
    {
        "Text": "#G17# As a user, I want to specify as part of dataset configuration whether it is explorable.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "specify",
            "part"
        ],
        "Entity": [
            "part",
            "configuration"
        ]
    },
    {
        "Text": "#G17# As a user, I want to specify the explore schema separately.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "specify",
            "explore"
        ],
        "Entity": [
            "schema"
        ]
    },
    {
        "Text": "#G17# As a user, I want to ensure that dataset creation fails if the dataset cannot be enabled for explore.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "ensure",
            "fails",
            "cannot",
            "enabled",
            "explore"
        ],
        "Entity": [
            "ensure",
            "creation",
            "fails"
        ]
    },
    {
        "Text": "#G17# As a user, I want to ensure that dataset reconfiguration fails if the corresponding update of the explore table fails.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "ensure",
            "fails",
            "update",
            "explore",
            "table",
            "fails"
        ],
        "Entity": [
            "ensure",
            "fails",
            "update",
            "table",
            "fails"
        ]
    },
    {
        "Text": "#G17# As a user, I want to ensure that a dataset operation fails if it fails to make its required changes to explore.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "ensure",
            "fails",
            "fails",
            "make",
            "required",
            "changes",
            "explore"
        ],
        "Entity": [
            "ensure",
            "operation",
            "fails",
            "fails",
            "make",
            "changes"
        ]
    },
    {
        "Text": "#G17# As a user, I want to ensure that an update of explore never leads to silent loss of data or data available for explore. ",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "ensure",
            "update",
            "explore",
            "leads",
            "explore"
        ],
        "Entity": [
            "ensure",
            "update",
            "leads",
            "silent",
            "loss",
            "data",
            "data"
        ]
    },
    {
        "Text": "#G17# As a user, I want to enable explore for a dataset that was not configured for explore initially.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "enable",
            "explore",
            "was",
            "explore"
        ],
        "Entity": []
    },
    {
        "Text": "#G17# As a user, I want to disable explore for a dataset that was configured for explore initially.",
        "Persona": [
            " user"
        ],
        "Action": [
            "want",
            "disable",
            "explore",
            "was",
            "explore"
        ],
        "Entity": []
    }
]