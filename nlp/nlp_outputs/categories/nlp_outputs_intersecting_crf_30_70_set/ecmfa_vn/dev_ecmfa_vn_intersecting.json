[
    {
        "Text": "#G08# As a Developer, I want to get a Data Package into Node, so that I can start using the data for doing analysis and visualizations.",
        "Persona": [
            "Developer"
        ],
        "Entity": [
            "Data Package",
            "Node"
        ],
        "Action": [
            "Get A Data Package Into Node"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get a Data Package into Julia in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            "Researcher"
        ],
        "Entity": [
            "Julia",
            "Second",
            "Data Package"
        ],
        "Action": [
            "Get A Data Package Into Julia In Seconds"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I want to be able to provide a visualization of data in the Data Package, so that I can provide my analysis and show my work to users of the data. ",
        "Persona": [
            "Publisher"
        ],
        "Entity": [
            "Datum",
            "Data Package"
        ],
        "Action": [
            "Provide A Visualization Of Data In The Data Package"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to be able to save new visualizations, so that I can share them with others or include them in the Data Package. ",
        "Persona": [
            "Researcher"
        ],
        "Entity": [
            "New Visualization"
        ],
        "Action": [
            "Save New Visualizations"
        ]
    },
    {
        "Text": "#G08# As a ResearcherPublisher, I want to know that my data conforms to its Data Package profile, so that I can feel trust in the validity and usefulness of the data. ",
        "Persona": [
            "Researcherpublisher"
        ],
        "Entity": [
            "Data Package Profile"
        ],
        "Action": [
            "Conforms To Data Package Profile",
            "Know"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get a Data Package into STATA in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            "Researcher"
        ],
        "Entity": [
            "Stata",
            "Data Package",
            "Second"
        ],
        "Action": [
            "Get A Data Package Into Stata In Seconds"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to get a Data Package into Python in seconds, so that I can start using the data for doing analysis and visualizations. ",
        "Persona": [
            "Developer"
        ],
        "Entity": [
            "Second",
            "Data Package",
            "Python"
        ],
        "Action": [
            "Get A Data Package Into Python In Seconds"
        ]
    },
    {
        "Text": "#G08# As a Researcher, I want to get my Excel spreadsheet into a Data Package, so that I can benefit from better tooling and standardization. ",
        "Persona": [
            "Researcher"
        ],
        "Entity": [
            "Excel Spreadsheet",
            "Data Package"
        ],
        "Action": [
            "Get Excel Spreadsheet Into A Data Package"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to do exploratory data analysis in R and operationalize that analysis in Python, so that I can use the best tool for the job.",
        "Persona": [
            "Developer"
        ],
        "Entity": [
            "R",
            "Analysis",
            "Python",
            "Data"
        ],
        "Action": [
            "Do Exploratory Data Analysis In R",
            "Operationalize That Analysis In Python"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to get a Data Package into Clojure in seconds, so that I can start using the data in doing analysis and visualizations. ",
        "Persona": [
            "Developer"
        ],
        "Entity": [
            "Data Package",
            "Clojure",
            "Second"
        ],
        "Action": [
            "Get A Data Package Into Clojure In Seconds"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to get a Data Package into Julia in seconds, so that I can start using the data in doing analysis and visualizations. ",
        "Persona": [
            "Developer"
        ],
        "Entity": [
            "Second",
            "Julia",
            "Data Package"
        ],
        "Action": [
            "Get A Data Package Into Julia In Seconds"
        ]
    },
    {
        "Text": "#G08# As a Developer, I want to get a Data Package into C++ in seconds, so that I can start using the data in doing analysis and visualizations. ",
        "Persona": [
            "Developer"
        ],
        "Entity": [
            "C++",
            "Second",
            "Data Package"
        ],
        "Action": [
            "Get A Data Package Into C++ In Seconds"
        ]
    },
    {
        "Text": "#G08# As a ResearcherGovernment Publisher, I want to add general reference data to my narrow dataset, so that my dataset is more useful. ",
        "Persona": [
            "Researchergovernment Publisher"
        ],
        "Entity": [
            "Narrow Dataset",
            "Reference Data"
        ],
        "Action": [
            "Add General Reference Data To Narrow Dataset"
        ]
    },
    {
        "Text": "#G08# As a ResearcherGovernment Publisher, I want to add general country names to my dataset that only contains country codes, so that my dataset is more readable. ",
        "Persona": [
            "Researchergovernment Publisher"
        ],
        "Entity": [
            "Country Codes",
            "Dataset",
            "Country Names"
        ],
        "Action": [
            "Add General Country Names To Dataset Only Contains Country Codes"
        ]
    },
    {
        "Text": "#G08# As a government Publisher, I want to make it easy to prove that our published data is valid, so that I can claim that we are living up to our transparency commitments. ",
        "Persona": [
            "Publisher"
        ],
        "Entity": [
            "Site",
            "Datum"
        ],
        "Action": [
            "Embed An Interactive Preview Of Data On Site"
        ]
    },
    {
        "Text": "#G08# As a Civic Tech Activist, I want to make it easy to assess the quality of data stored by the government, so that I can make sure that government is living up to its transparency commitments. ",
        "Persona": [
            "Publisher"
        ],
        "Entity": [
            "Site",
            "Preview Button"
        ],
        "Action": [
            "Embed A Preview Button On Site"
        ]
    },
    {
        "Text": "#G08# As a publisher, I want to embed an interactive preview of my data on my site, so that users can be encouraged that this is the correct data for them. ",
        "Persona": [
            "Publisher"
        ],
        "Entity": [
            "Dataset",
            "User"
        ],
        "Action": [
            "Know"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I want to know how many users have previewed a dataset, so that I know how interest in a dataset relates to its actual download numbers. ",
        "Persona": [
            "Publisher"
        ],
        "Entity": [
            "Useful Metadata",
            "Dataset",
            "Data Columns"
        ],
        "Action": [
            "Add Useful Metadata",
            "Add In New Data Columns",
            "Make The Dataset"
        ]
    },
    {
        "Text": "#G08# As a Publisher, I want to add useful metadata or add in new data columns to make the dataset more useful. ",
        "Persona": [
            "Developerdatawrangler"
        ],
        "Entity": [
            "Github",
            "Data Package",
            "Ckan"
        ],
        "Action": [
            "Store Data Package In Github",
            "Have"
        ]
    },
    {
        "Text": "#G08# As a publisher, I want to package reproducible steps to get a certain data state, so my methodology is transparent and can be rerun by others. ",
        "Persona": [
            "Researcher"
        ],
        "Entity": [
            "Tool",
            "Dataset",
            "Basic Statistic"
        ],
        "Action": [
            "Provided With A Tool Generate Basic Statistics About A Dataset"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to explore a dataset instance of a type that was deployed as part of an app.",
        "Persona": [
            "App Developer"
        ],
        "Entity": [
            "Type",
            "App",
            "Dataset Instance"
        ],
        "Action": [
            "Explore A Dataset Instance Of A Type Deployed As Part Of An App"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that when I deploy a new version of an app that includes an older version of a dataset type deployed by another app and I expect that the dataset instances created by this app use the dataset type code included in this app.",
        "Persona": [
            "App Developer"
        ],
        "Entity": [
            "Dataset Type",
            "App"
        ],
        "Action": [
            "Deploy A New Version Of An App Includes An Older Version Of A Dataset Type Another App",
            "Expect",
            "Ensure That"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that when I deploy a new version of an app that includes a different version of a dataset type deployed by another app and this app shares a dataset instance of this type with the other app the deployment will fail with a version conflict error. ",
        "Persona": [
            "App Developer"
        ],
        "Entity": [
            "App",
            "Version Conflict Error",
            "Type",
            "App",
            "Dataset Instance",
            "Dataset"
        ],
        "Action": [
            "Ensure",
            "Deploy A New Version Of An App Includes A Different Version Of A Dataset Type Another App Shares A Dataset Instance Of This Type With The Other App The Deployment Fail With A Version Conflict Error",
            "Deploy A New Version Of An App Includes A Different Version Of A Type This App Shares"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to share a dataset type that I had previously deployed as part of an app.",
        "Persona": [
            "App Developer"
        ],
        "Entity": [
            "App",
            "Dataset Type"
        ],
        "Action": [
            "That Deployed As Part Of An App",
            "Share A Dataset Type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to have an archetype that helps me package my dataset type properly.",
        "Persona": [
            "Dataset Developer"
        ],
        "Entity": [
            "Dataset Type",
            "Archetype"
        ],
        "Action": [
            "Have An Archetype Helps Properly Package Dataset Type"
        ]
    },
    {
        "Text": "#G17# As a dataset developer, I want to separate the interface from the implementation of a dataset type.",
        "Persona": [
            "Dataset Developer"
        ],
        "Entity": [
            "Dataset Type",
            "Interface"
        ],
        "Action": [
            "Separate The Interface From The Implementation Of A Dataset Type"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to only depend on the interface of a dataset type in my app and have the system inject the implementation at runtime.",
        "Persona": [
            "App Developer"
        ],
        "Entity": [
            "App",
            "Dataset Type",
            "Runtime",
            "System",
            "Implementation"
        ],
        "Action": [
            "Depend On The Interface Of A Dataset Type In App",
            "Have"
        ]
    },
    {
        "Text": "#G17# As a hydrator user, I want to specify an explicit version of the dataset types of the dataset instances created by my pipeline and I expect pipeline creation to fail if that results in incompatible upgrade of an existing dataset instance that is shared with other apps or pipelines.",
        "Persona": [
            "Hydrator User"
        ],
        "Entity": [
            "Dataset Types",
            "Exist Instance",
            "Dataset Instances",
            "Pipeline",
            "App",
            "Dataset Instance"
        ],
        "Action": [
            "Fail",
            "Specify An Explicit Version Of The Dataset Types Of The Dataset Instances Pipeline"
        ]
    },
    {
        "Text": "#G17# As a hydrator user, I want to ensure that all dataset instances created by apps are available as sinks and sources for pipelines.",
        "Persona": [
            "Hydrator User"
        ],
        "Entity": [
            "App",
            "Sink",
            "Source",
            "Instance",
            "Dataset Instances",
            "Pipeline"
        ],
        "Action": [
            "Ensure All Dataset Instances Apps Available As Sinks For Pipelines",
            "Ensure All Instances Apps Available As Source"
        ]
    },
    {
        "Text": "#G17# As a plugin developer, I want to include the code for a dataset type in the plugin artifact, so that when a pipeline using this plugin is created a dataset instance of that type is created and it is explorable and available to apps.",
        "Persona": [
            "Plugin Developer"
        ],
        "Entity": [
            "Code",
            "Plugin Artifact",
            "Dataset Type"
        ],
        "Action": [
            "Include The Code For A Dataset Type In The Plugin Artifact"
        ]
    },
    {
        "Text": "#G17# As a pipeline developer, I want to upgrade a dataset instance to a newer version of the code after the pipeline was created.",
        "Persona": [
            "Pipeline Developer"
        ],
        "Entity": [
            "Dataset Instance",
            "Code"
        ],
        "Action": [
            "Upgrade A Dataset Instance To A Newer Version Of The Code"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to perform custom administrative operations on dataset instances from my app and the CLI and REST or the UI.",
        "Persona": [
            "App Developer"
        ],
        "Entity": [
            "Instance",
            "Administrative , Custom Operation",
            "Rest",
            "Dataset Instances",
            "App",
            "Cli",
            "Ui"
        ],
        "Action": [
            "Perform Administrative, Custom Operations On Instances From Rest",
            "Perform Administrative, Custom Operations On Dataset Instances From App",
            "Perform Administrative, Custom Operations On Instances From The Cli",
            "Perform Administrative, Custom Operations On Instances From The Ui"
        ]
    },
    {
        "Text": "#G17# As a user, I want to specify schema as a JSON string.",
        "Persona": [
            "User"
        ],
        "Entity": [
            "Schema",
            "Json String"
        ],
        "Action": [
            "Specify Schema As A Json String"
        ]
    },
    {
        "Text": "#G17# As a user, I want to specify schema as a SQL schema string.",
        "Persona": [
            "User"
        ],
        "Entity": [
            "Schema",
            "Sql"
        ],
        "Action": [
            "Specify Schema As A Sql Schema String"
        ]
    },
    {
        "Text": "#G17# As a user, I want to configure time-to-live in a uniform way across all dataset types.",
        "Persona": [
            "User"
        ],
        "Entity": [
            "Uniform Way",
            "Dataset Types",
            "Time"
        ],
        "Action": [
            "Live",
            "Configure Time In A Uniform Way Across All Dataset Types"
        ]
    },
    {
        "Text": "#G17# As a user, I want to update the properties of a dataset instance and I expect this to fail if the new properties are not compatible with a meaningful error message.",
        "Persona": [
            "User"
        ],
        "Entity": [
            "Dataset Instance"
        ],
        "Action": [
            "Update The Properties Of A Dataset Instance"
        ]
    },
    {
        "Text": "#G17# As a user, I want to remove a single property of a dataset instance without knowing all other properties. ",
        "Persona": [
            "User"
        ],
        "Entity": [
            "Dataset Instance",
            "Property"
        ],
        "Action": [
            "Remove A Single Property Of A Dataset Instance Knowing All Other Properties"
        ]
    },
    {
        "Text": "#G17# As a user, I want to trigger a migration process for a dataset if updating its properties requires that.",
        "Persona": [
            "User"
        ],
        "Entity": [
            "Dataset",
            "Migration Process"
        ],
        "Action": [
            "Trigger A Migration Process For A Dataset"
        ]
    },
    {
        "Text": "#G17# As an app developer, I want to ensure that application redeployment fails if any of its datasets cannot be reconfigured.",
        "Persona": [
            "App Developer"
        ],
        "Entity": [
            "Dataset"
        ],
        "Action": [
            "Ensure"
        ]
    }
]