[
    {
        "PID": "#G02#",
        "Text": "#G02# As a Data user, I want to have the 12-19-2017 deletions processed.",
        "Persona": [
            "Data user"
        ],
        "Action": {
            "Primary Action": [
                "processed"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "12-19-2017 deletions"
            ],
            "Secondary Entity": [
                ""
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Data user",
                "processed"
            ]
        ],
        "Targets": [
            [
                "processed",
                "12-19-2017 deletions"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to redesign the Resources page, so that it matches the new Broker design styles.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "redesign"
            ],
            "Secondary Action": [
                "matches"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "Resources page"
            ],
            "Secondary Entity": [
                "new Broker design styles"
            ]
        },
        "Benefit": "it matches the new Broker design styles",
        "Triggers": [
            [
                "UI designer",
                "redesign"
            ]
        ],
        "Targets": [
            [
                "redesign",
                "Resources page"
            ],
            [
                "matches",
                "new Broker design styles"
            ]
        ],
        "Contains": [
            [
                "Resources page",
                "new Broker design styles"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to report to the Agencies about user testing, so that they are aware of their contributions to making Broker a better UX.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "report"
            ],
            "Secondary Action": [
                "aware"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "user testing"
            ],
            "Secondary Entity": [
                "Agencies",
                "contributions",
                "Broker",
                "better UX"
            ]
        },
        "Benefit": "they are aware of their contributions to making Broker a better UX",
        "Triggers": [
            [
                "UI designer",
                "report"
            ]
        ],
        "Targets": [
            [
                "report",
                "user testing"
            ],
            [
                "aware",
                "contributions"
            ]
        ],
        "Contains": [
            [
                "Broker",
                "better UX"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to move on to round 2 of DABS or FABS landing page edits, so that I can get approvals from leadership.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "move on"
            ],
            "Secondary Action": [
                "get"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "round 2"
            ],
            "Secondary Entity": [
                "FABS landing page edits",
                "DABS",
                "approvals",
                "leadership"
            ]
        },
        "Benefit": "I can get approvals from leadership",
        "Triggers": [
            [
                "UI designer",
                "move on"
            ]
        ],
        "Targets": [
            [
                "move on",
                "round 2"
            ],
            [
                "get",
                "approvals"
            ]
        ],
        "Contains": [
            [
                "DABS",
                "round 2"
            ],
            [
                "FABS landing page edits",
                "round 2"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to move on to round 3 of the Help page edits, so that I can get approvals from leadership.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "move on"
            ],
            "Secondary Action": [
                "get"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "round 3"
            ],
            "Secondary Entity": [
                "Help page edits",
                "approvals",
                "leadership"
            ]
        },
        "Benefit": "I can get approvals from leadership",
        "Triggers": [
            [
                "UI designer",
                "move on"
            ]
        ],
        "Targets": [
            [
                "move on",
                "round 3"
            ],
            [
                "get",
                "approvals"
            ]
        ],
        "Contains": [
            [
                "Help page edits",
                "round 3"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want to be able to log better, so that I can troubleshoot issues with particular submissions and functions.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "log better"
            ],
            "Secondary Action": [
                "troubleshoot"
            ]
        },
        "Entity": {
            "Primary Entity": [
                ""
            ],
            "Secondary Entity": [
                "particular submissions",
                "issues",
                "functions"
            ]
        },
        "Benefit": "I can troubleshoot issues with particular submissions and functions",
        "Triggers": [
            [
                "Developer",
                "log better"
            ]
        ],
        "Targets": [
            [
                "troubleshoot",
                "issues"
            ]
        ],
        "Contains": [
            [
                "functions",
                "issues"
            ],
            [
                "particular submissions",
                "issues"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer, I want to add the updates on a FABS submission to be modified when the publishStatus changes, so that I know when the status of the submission has changed.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "add"
            ],
            "Secondary Action": [
                "know"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "updates"
            ],
            "Secondary Entity": [
                "FABS submission",
                "publishStatus",
                "status",
                "submission"
            ]
        },
        "Benefit": "I know when the status of the submission has changed",
        "Triggers": [
            [
                "Developer",
                "add"
            ]
        ],
        "Targets": [
            [
                "add",
                "updates"
            ],
            [
                "know",
                "status"
            ]
        ],
        "Contains": [
            [
                "submission",
                "status"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a DevOps engineer, I want New Relic to provide useful data across all applications.",
        "Persona": [
            "DevOps engineer"
        ],
        "Action": {
            "Primary Action": [
                "provide"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "useful data"
            ],
            "Secondary Entity": [
                "New Relic",
                "all applications"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "DevOps engineer",
                "provide"
            ]
        ],
        "Targets": [
            [
                "provide",
                "useful data"
            ]
        ],
        "Contains": [
            [
                "New Relic",
                "useful data"
            ],
            [
                "all applications",
                "useful data"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer,  I want to move on to round 2 of the Help page edits, so that I can get approvals from leadership.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "move on"
            ],
            "Secondary Action": [
                "get"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "round 2"
            ],
            "Secondary Entity": [
                "approvals",
                "Help page edits",
                "leadership"
            ]
        },
        "Benefit": "I can get approvals from leadership",
        "Triggers": [
            [
                "UI designer",
                "move on"
            ]
        ],
        "Targets": [
            [
                "move on",
                "round 2"
            ],
            [
                "get",
                "approvals"
            ]
        ],
        "Contains": [
            [
                "Help page edits",
                "round 2"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to move on to round 2 of Homepage edits, so that I can get approvals from leadership.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "move"
            ],
            "Secondary Action": [
                "get"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "round 2"
            ],
            "Secondary Entity": [
                "Homepage edits",
                "approvals",
                "leadership"
            ]
        },
        "Benefit": "I can get approvals from leadership",
        "Triggers": [
            [
                "UI designer",
                "move"
            ]
        ],
        "Targets": [
            [
                "get",
                "approvals"
            ],
            [
                "move",
                "round 2"
            ]
        ],
        "Contains": [
            [
                "Homepage edits",
                "round 2"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Broker user, I want to Upload and Validate the error message to have accurate text.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "Upload",
                "Validate"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "error message"
            ],
            "Secondary Entity": [
                "accurate text"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Broker user",
                "Upload"
            ],
            [
                "Broker user",
                "Validate"
            ]
        ],
        "Targets": [
            [
                "Validate",
                "error message"
            ],
            [
                "Upload",
                "error message"
            ]
        ],
        "Contains": [
            [
                "error message",
                "accurate text"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Broker user, I want the D1 file generation to be synced with the FPDS data load, so that I don't have to regenerate a file if no data has been updated.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "be synced"
            ],
            "Secondary Action": [
                "don't have to regenerate"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FPDS data load",
                "D1 file generation"
            ],
            "Secondary Entity": [
                "file",
                "data"
            ]
        },
        "Benefit": "I don't have to regenerate a file if no data has been updated",
        "Triggers": [
            [
                "Broker user",
                "be synced"
            ]
        ],
        "Targets": [
            [
                "be synced",
                "FPDS data load"
            ],
            [
                "be synced",
                "D1 file generation"
            ],
            [
                "don't have to regenerate",
                "file"
            ]
        ],
        "Contains": [
            [
                "file",
                "data"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Website user, I want to access published FABS files, so that I can see the new files as they come in.",
        "Persona": [
            "Website user"
        ],
        "Action": {
            "Primary Action": [
                "access"
            ],
            "Secondary Action": [
                "see"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "published FABS files"
            ],
            "Secondary Entity": [
                "new files"
            ]
        },
        "Benefit": "I can see the new files as they come in",
        "Triggers": [
            [
                "Website user",
                "access"
            ]
        ],
        "Targets": [
            [
                "access",
                "published FABS files"
            ],
            [
                "see",
                "new files"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an owner, I want to be sure that USAspending only send grant records to my system.",
        "Persona": [
            "owner"
        ],
        "Action": {
            "Primary Action": [
                "be sure"
            ],
            "Secondary Action": [
                "only send"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "USAspending"
            ],
            "Secondary Entity": [
                "grant records",
                "system"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "owner",
                "be sure"
            ]
        ],
        "Targets": [
            [
                "only send",
                "grant records"
            ],
            [
                "be sure",
                "USAspending"
            ]
        ],
        "Contains": [
            [
                "system",
                "grant records"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer, I want to update the Broker validation rule table to account for the rule updates in DB-2213.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "update"
            ],
            "Secondary Action": [
                "account"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "Broker validation rule table"
            ],
            "Secondary Entity": [
                "rule updates",
                "DB-2213"
            ]
        },
        "Benefit": "account for the rule updates in DB-2213",
        "Triggers": [
            [
                "Developer",
                "update"
            ]
        ],
        "Targets": [
            [
                "update",
                "Broker validation rule table"
            ],
            [
                "account",
                "rule updates"
            ]
        ],
        "Contains": [
            [
                "DB-2213",
                "rule updates"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer, I want to add the GTAS window data to the database, so that I can ensure the site is locked down during the GTAS submission period.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "add"
            ],
            "Secondary Action": [
                "ensure"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "GTAS window data"
            ],
            "Secondary Entity": [
                "site",
                "GTAS submission period",
                "database"
            ]
        },
        "Benefit": "I can ensure the site is locked down during the GTAS submission period",
        "Triggers": [
            [
                "Developer",
                "add"
            ]
        ],
        "Targets": [
            [
                "add",
                "GTAS window data"
            ],
            [
                "ensure",
                "site"
            ]
        ],
        "Contains": [
            [
                "database",
                "GTAS window data"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer, I want D Files generation requests to be managed and cached, so that duplicate requests do not cause performance issues.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "managed",
                "cached"
            ],
            "Secondary Action": [
                "do not cause"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "D Files generation requests"
            ],
            "Secondary Entity": [
                "duplicate requests",
                "performance issues"
            ]
        },
        "Benefit": "duplicate requests do not cause performance issues",
        "Triggers": [
            [
                "Developer",
                "managed"
            ],
            [
                "Developer",
                "cached"
            ]
        ],
        "Targets": [
            [
                "do not cause",
                "performance issues"
            ],
            [
                "managed",
                "D Files generation requests"
            ],
            [
                "cached",
                "D Files generation requests"
            ]
        ],
        "Contains": [
            [
                "duplicate requests",
                "performance issues"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want to be able to include a large number of flexfields without performance impact.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "include"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "large number of flexfields"
            ],
            "Secondary Entity": [
                "performance impact"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Agency user",
                "include"
            ]
        ],
        "Targets": [
            [
                "include",
                "large number of flexfields"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Broker user, I want  to help create content mockups, so that I can submit my data efficiently.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "create"
            ],
            "Secondary Action": [
                "submit"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "content mockups"
            ],
            "Secondary Entity": [
                "data"
            ]
        },
        "Benefit": "I can submit my data efficiently",
        "Triggers": [
            [
                "Broker user",
                "create"
            ]
        ],
        "Targets": [
            [
                "create",
                "content mockups"
            ],
            [
                "submit",
                "data"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to track the issues that come up in Tech Thursday, so that I know what to test and what want s to be fixed.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "track"
            ],
            "Secondary Action": [
                "know",
                "test",
                "fixed"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "issues"
            ],
            "Secondary Entity": [
                "Tech Thursday"
            ]
        },
        "Benefit": "I know what to test and what want s to be fixed",
        "Triggers": [
            [
                "UI designer",
                "track"
            ]
        ],
        "Targets": [
            [
                "fixed",
                "issues"
            ],
            [
                "track",
                "issues"
            ],
            [
                "know",
                "issues"
            ],
            [
                "test",
                "issues"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Owner, I want to create a user testing summary from the UI SME, so that I can know what UI improvements we will follow through on.",
        "Persona": [
            "Owner"
        ],
        "Action": {
            "Primary Action": [
                "create"
            ],
            "Secondary Action": [
                "know",
                "follow through"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "user testing summary"
            ],
            "Secondary Entity": [
                "UI SME",
                "UI improvements"
            ]
        },
        "Benefit": "I can know what UI improvements we will follow through on",
        "Triggers": [
            [
                "Owner",
                "create"
            ]
        ],
        "Targets": [
            [
                "create",
                "user testing summary"
            ],
            [
                "know",
                "UI improvements"
            ],
            [
                "follow through",
                "UI improvements"
            ]
        ],
        "Contains": [
            [
                "UI SME",
                "user testing summary"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to begin user testing, so that I can validate stakeholder UI improvement requests.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "begin"
            ],
            "Secondary Action": [
                "validate"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "user testing"
            ],
            "Secondary Entity": [
                "stakeholder UI improvement requests"
            ]
        },
        "Benefit": "I can validate stakeholder UI improvement requests",
        "Triggers": [
            [
                "UI designer",
                "begin"
            ]
        ],
        "Targets": [
            [
                "begin",
                "user testing"
            ],
            [
                "validate",
                "stakeholder UI improvement requests"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a UI designer, I want to schedule user testing, so that I can give the testers advanced notice to ensure buy-in.",
        "Persona": [
            "UI designer"
        ],
        "Action": {
            "Primary Action": [
                "schedule"
            ],
            "Secondary Action": [
                "give",
                "ensure"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "user testing"
            ],
            "Secondary Entity": [
                "testers",
                "advanced notice",
                "buy-in"
            ]
        },
        "Benefit": "I can give the testers advanced notice to ensure buy-in",
        "Triggers": [
            [
                "UI designer",
                "schedule"
            ]
        ],
        "Targets": [
            [
                "schedule",
                "user testing"
            ],
            [
                "ensure",
                "buy-in"
            ],
            [
                "give",
                "advanced notice"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Owner, I want to design a schedule from the UI SME, so that I know the potential timeline of the UI improvements wanted.",
        "Persona": [
            "Owner"
        ],
        "Action": {
            "Primary Action": [
                "design"
            ],
            "Secondary Action": [
                "know"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "schedule"
            ],
            "Secondary Entity": [
                "potential timeline",
                "UI SME",
                "UI improvements"
            ]
        },
        "Benefit": "I know the potential timeline of the UI improvements wanted",
        "Triggers": [
            [
                "Owner",
                "design"
            ]
        ],
        "Targets": [
            [
                "design",
                "schedule"
            ],
            [
                "know",
                "potential timeline"
            ]
        ],
        "Contains": [
            [
                "UI SME",
                "schedule"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Owner, I want to design an audit from the UI SME, so that I know the potential scope of the UI improvements want ed.",
        "Persona": [
            "Owner"
        ],
        "Action": {
            "Primary Action": [
                "design"
            ],
            "Secondary Action": [
                "know"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "audit"
            ],
            "Secondary Entity": [
                "UI SME",
                "potential scope",
                "UI improvements"
            ]
        },
        "Benefit": "I know the potential scope of the UI improvements want ed",
        "Triggers": [
            [
                "Owner",
                "design"
            ]
        ],
        "Targets": [
            [
                "design",
                "audit"
            ],
            [
                "know",
                "potential scope"
            ]
        ],
        "Contains": [
            [
                "UI SME",
                "audit"
            ],
            [
                "potential scope",
                "UI improvements"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer, I want to prevent users from double publishing FABS submissions after refreshing, so that there are no duplicates.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "prevent"
            ],
            "Secondary Action": [
                "refreshing"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "double publishing FABS submissions"
            ],
            "Secondary Entity": [
                "users",
                "duplicates"
            ]
        },
        "Benefit": "there are no duplicates",
        "Triggers": [
            [
                "Developer",
                "prevent"
            ]
        ],
        "Targets": [
            [
                "prevent",
                "double publishing FABS submissions"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an data user, I want to receive updates to FABS records.",
        "Persona": [
            "data user"
        ],
        "Action": {
            "Primary Action": [
                "receive"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "updates"
            ],
            "Secondary Entity": [
                "FABS records"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "data user",
                "receive"
            ]
        ],
        "Targets": [
            [
                "receive",
                "updates"
            ]
        ],
        "Contains": [
            [
                "FABS records",
                "updates"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want to update the FABS sample file to remove FundingAgencyCode after FABS is updated to no longer require the header.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "update"
            ],
            "Secondary Action": [
                "remove",
                "no longer require"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FABS sample file"
            ],
            "Secondary Entity": [
                "FundingAgencyCode",
                "FABS",
                "header"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Developer",
                "update"
            ]
        ],
        "Targets": [
            [
                "update",
                "FABS sample file"
            ],
            [
                "remove",
                "FundingAgencyCode"
            ],
            [
                "no longer require",
                "header"
            ]
        ],
        "Contains": [
            [
                "FABS",
                "header"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to ensure that deleted FSRS records are not included in submissions.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "ensure"
            ],
            "Secondary Action": [
                "not included"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "deleted FSRS records"
            ],
            "Secondary Entity": [
                "submissions"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "ensure"
            ]
        ],
        "Targets": [
            [
                "ensure",
                "deleted FSRS records"
            ],
            [
                "not included",
                "submissions"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a website user, I want to see updated financial assistance data daily.",
        "Persona": [
            "website user"
        ],
        "Action": {
            "Primary Action": [
                "see"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "updated financial assistance data daily"
            ],
            "Secondary Entity": [
                ""
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "website user",
                "see"
            ]
        ],
        "Targets": [
            [
                "see",
                "updated financial assistance data daily"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want the publish button in FABS to deactivate after I click it while the derivations are happening, so that I cannot click it multiple times for the same submission.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "deactivate"
            ],
            "Secondary Action": [
                "click",
                "cannot click"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "publish button"
            ],
            "Secondary Entity": [
                "FABS",
                "derivations",
                "same submission"
            ]
        },
        "Benefit": "I cannot click it multiple times for the same submission",
        "Triggers": [
            [
                "user",
                "deactivate"
            ]
        ],
        "Targets": [
            [
                "deactivate",
                "publish button"
            ],
            [
                "click",
                "publish button"
            ],
            [
                "cannot click",
                "publish button"
            ]
        ],
        "Contains": [
            [
                "FABS",
                "publish button"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want to ensure that attempts to correct or delete non-existent records don't create new published data.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "ensure"
            ],
            "Secondary Action": [
                "don't create",
                "correct",
                "delete"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "attempts"
            ],
            "Secondary Entity": [
                "non-existent records",
                "new published data"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Developer",
                "ensure"
            ]
        ],
        "Targets": [
            [
                "don't create",
                "new published data"
            ],
            [
                "ensure",
                "attempts"
            ],
            [
                "correct",
                "non-existent records"
            ],
            [
                "delete",
                "non-existent records"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Owner, I want to reset the environment to only take Staging MAX permissions, so that I can ensure that the FABS testers no longer have access.",
        "Persona": [
            "Owner"
        ],
        "Action": {
            "Primary Action": [
                "reset"
            ],
            "Secondary Action": [
                "ensure",
                "only take",
                "no longer have"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "environment"
            ],
            "Secondary Entity": [
                "Staging MAX permissions",
                "FABS testers",
                "access"
            ]
        },
        "Benefit": "I can ensure that the FABS testers no longer have access",
        "Triggers": [
            [
                "Owner",
                "reset"
            ]
        ],
        "Targets": [
            [
                "reset",
                "environment"
            ],
            [
                "only take",
                "Staging MAX permissions"
            ],
            [
                "ensure",
                "FABS testers"
            ],
            [
                "no longer have",
                "access"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want the flexfields in my submission file to appear in the warning and error files when the only error is a missing required element.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "appear in"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "flexfields"
            ],
            "Secondary Entity": [
                "only error",
                "missing required element",
                "submission file",
                "warning and error files"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "flexfields"
            ],
            [
                "appear in",
                "warning and error files"
            ]
        ],
        "Contains": [
            [
                "submission file",
                "flexfields"
            ],
            [
                "only error",
                "missing required element"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want to have accurate and complete data related to PPoPCode and PPoPCongressionalDistrict.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "accurate and complete data"
            ],
            "Secondary Entity": [
                "PPoPCode",
                "PPoPCongressionalDistrict"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "accurate and complete data"
            ]
        ],
        "Contains": [
            [
                "PPoPCode",
                "accurate and complete data"
            ],
            [
                "PPoPCongressionalDistrict",
                "accurate and complete data"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want the FABS validation rules to accept zero and blank for loan records.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "zero",
                "blank"
            ],
            "Secondary Entity": [
                "FABS validation rules",
                "loan records"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "zero"
            ],
            [
                "want",
                "blank"
            ]
        ],
        "Contains": [
            [
                "loan records",
                "zero"
            ],
            [
                "loan records",
                "blank"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want FABS deployed into production, so I can submit my Financial Assistance data.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "submit",
                "deployed"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FABS"
            ],
            "Secondary Entity": [
                "production",
                "Financial Assistance data"
            ]
        },
        "Benefit": "I can submit my Financial Assistance data",
        "Triggers": [
            [
                "Agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "deployed",
                "production"
            ],
            [
                "submit",
                "Financial Assistance data"
            ],
            [
                "want",
                "FABS"
            ]
        ],
        "Contains": [
            [
                "FABS",
                "Financial Assistance data"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want to clarify to users what exactly is triggering the CFDA error code in each case.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "clarify"
            ],
            "Secondary Action": [
                "triggering"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "users"
            ],
            "Secondary Entity": [
                "CFDA error code",
                "case"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Developer",
                "clarify"
            ]
        ],
        "Targets": [
            [
                "clarify",
                "users"
            ],
            [
                "triggering",
                "CFDA error code"
            ]
        ],
        "Contains": [
            [
                "case",
                "CFDA error code"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to be confident that the data coming from SAM is complete.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "data"
            ],
            "Secondary Entity": [
                "SAM"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "data"
            ]
        ],
        "Contains": [
            [
                "SAM",
                "data"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want my domain models to be indexed properly, so that I can get validation results back in a reasonable amount of time.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "indexed properly"
            ],
            "Secondary Action": [
                "get"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "domain models"
            ],
            "Secondary Entity": [
                "validation results",
                "reasonable amount of time"
            ]
        },
        "Benefit": "I can get validation results back in a reasonable amount of time",
        "Triggers": [
            [
                "Developer",
                "indexed properly"
            ]
        ],
        "Targets": [
            [
                "indexed properly",
                "domain models"
            ],
            [
                "get",
                "validation results"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want the FABS validation rules to accept zero and blank for non-loan records.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "zero",
                "blank"
            ],
            "Secondary Entity": [
                "FABS validation rules",
                "non-loan records"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "zero"
            ],
            [
                "want",
                "blank"
            ]
        ],
        "Contains": [
            [
                "FABS validation rules",
                "non-loan records"
            ],
            [
                "non-loan records",
                "blank"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a broker team member, I want to make some updates to the SQL codes for clarity.",
        "Persona": [
            "broker team member"
        ],
        "Action": {
            "Primary Action": [
                "make"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "some updates"
            ],
            "Secondary Entity": [
                "SQL codes"
            ]
        },
        "Benefit": "for clarity",
        "Triggers": [
            [
                "broker team member",
                "make"
            ]
        ],
        "Targets": [
            [
                "make",
                "some updates"
            ]
        ],
        "Contains": [
            [
                "SQL codes",
                "some updates"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to have all derived data elements derived properly.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "derived properly"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "derived data elements"
            ],
            "Secondary Entity": [
                ""
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "derived data elements"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a broker team member, I want to add the 00***** and 00FORGN PPoPCode cases to the derivation logic.",
        "Persona": [
            "broker team member"
        ],
        "Action": {
            "Primary Action": [
                "add"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "00*****",
                "00FORGN PPoPCode cases"
            ],
            "Secondary Entity": [
                "derivation logic"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "broker team member",
                "add"
            ]
        ],
        "Targets": [
            [
                "add",
                "00*****"
            ],
            [
                "add",
                "00FORGN PPoPCode cases"
            ]
        ],
        "Contains": [
            [
                "derivation logic",
                "00FORGN PPoPCode cases"
            ],
            [
                "derivation logic",
                "00*****"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a data user, I want to see the office names derived from office codes, so that I can have appropriate context for understanding them.",
        "Persona": [
            "data user"
        ],
        "Action": {
            "Primary Action": [
                "see"
            ],
            "Secondary Action": [
                "have",
                "understanding"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "office names"
            ],
            "Secondary Entity": [
                "office codes",
                "appropriate context"
            ]
        },
        "Benefit": "I can have appropriate context for understanding them",
        "Triggers": [
            [
                "data user",
                "see"
            ]
        ],
        "Targets": [
            [
                "see",
                "office names"
            ],
            [
                "have",
                "appropriate context"
            ],
            [
                "understanding",
                "office codes"
            ]
        ],
        "Contains": [
            [
                "office codes",
                "office names"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a broker user, I want the historical FABS loader to derive fields, so that my agency codes are correct in the PublishedAwardFinancialAssistance table.",
        "Persona": [
            "broker user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "derive"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "historical FABS loader"
            ],
            "Secondary Entity": [
                "fields",
                "agency codes",
                "PublishedAwardFinancialAssistance table"
            ]
        },
        "Benefit": "my agency codes are correct in the PublishedAwardFinancialAssistance table",
        "Triggers": [
            [
                "broker user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "historical FABS loader"
            ],
            [
                "derive",
                "fields"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a broker team member, I want to ensure the Broker resources, validations, and P&P pages are updated appropriately for the launch of FABS and DAIMS v1.1.",
        "Persona": [
            "broker team member"
        ],
        "Action": {
            "Primary Action": [
                "ensure"
            ],
            "Secondary Action": [
                "updated appropriately"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "Broker resources",
                "validations",
                "P&P pages"
            ],
            "Secondary Entity": [
                "launch",
                "FABS",
                "DAIMS v1.1"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "broker team member",
                "ensure"
            ]
        ],
        "Targets": [
            [
                "ensure",
                "Broker resources"
            ],
            [
                "ensure",
                "validations"
            ],
            [
                "ensure",
                "P&P pages"
            ],
            [
                "updated appropriately",
                "Broker resources"
            ],
            [
                "updated appropriately",
                "validations"
            ],
            [
                "updated appropriately",
                "P&P pages"
            ]
        ],
        "Contains": [
            [
                "launch",
                "FABS"
            ],
            [
                "launch",
                "DAIMS v1.1"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer, I want the data loaded from historical FABS to include the FREC derivations, so that I can have consistent FREC data for USASpending.gov.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "include",
                "have"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "data loaded"
            ],
            "Secondary Entity": [
                "historical FABS",
                "FREC derivations",
                "consistent FREC data",
                "USASpending.gov"
            ]
        },
        "Benefit": "I can have consistent FREC data for USASpending.gov",
        "Triggers": [
            [
                "Developer",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "data loaded"
            ],
            [
                "include",
                "FREC derivations"
            ],
            [
                "have",
                "consistent FREC data"
            ]
        ],
        "Contains": [
            [
                "historical FABS",
                "data loaded"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I don't want to see NASA grants displayed as contracts.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "don't want to see"
            ],
            "Secondary Action": [
                "displayed"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "NASA grants"
            ],
            "Secondary Entity": [
                "contracts"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "don't want to see"
            ]
        ],
        "Targets": [
            [
                "don't want to see",
                "NASA grants"
            ],
            [
                "displayed",
                "contracts"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want the DUNS validations to accept records whose ActionTypes are B, C, or D and the DUNS is registered in SAM, even though it may have expired.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "records"
            ],
            "Secondary Entity": [
                "ActionTypes",
                "B",
                "C",
                "SAM",
                "DUNS validations",
                "D",
                "DUNS"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "records"
            ]
        ],
        "Contains": [
            [
                "ActionTypes",
                "C"
            ],
            [
                "SAM",
                "DUNS"
            ],
            [
                "DUNS validations",
                "records"
            ],
            [
                "records",
                "ActionTypes"
            ],
            [
                "ActionTypes",
                "B"
            ],
            [
                "ActionTypes",
                "D"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want the DUNS validations to accept records whose ActionDates are before the current registration date in SAM, but after the initial registration date.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "accept"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "DUNS validations"
            ],
            "Secondary Entity": [
                "ActionDates",
                "current registration date",
                "initial registration date",
                "records",
                "SAM"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "DUNS validations"
            ],
            [
                "accept",
                "records"
            ]
        ],
        "Contains": [
            [
                "SAM",
                "current registration date"
            ],
            [
                "records",
                "ActionDates"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a broker team member, I want to derive FundingAgencyCode, so that the data quality and completeness improves.",
        "Persona": [
            "broker team member"
        ],
        "Action": {
            "Primary Action": [
                "derive"
            ],
            "Secondary Action": [
                "improves"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FundingAgencyCode"
            ],
            "Secondary Entity": [
                "completeness",
                "data quality"
            ]
        },
        "Benefit": "the data quality and completeness improves",
        "Triggers": [
            [
                "broker team member",
                "derive"
            ]
        ],
        "Targets": [
            [
                "derive",
                "FundingAgencyCode"
            ],
            [
                "improves",
                "completeness"
            ],
            [
                "improves",
                "data quality"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want the maximum length allowed for LegalEntityAddressLine3 to match Schema v1.1.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "maximum length"
            ],
            "Secondary Entity": [
                "LegalEntityAddressLine3",
                "Schema v1.1"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "maximum length"
            ]
        ],
        "Contains": [
            [
                "LegalEntityAddressLine3",
                "maximum length"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to use the schema v1.1 headers in my FABS file.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "use"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "schema v1.1 headers"
            ],
            "Secondary Entity": [
                "FABS file"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "use"
            ]
        ],
        "Targets": [
            [
                "use",
                "schema v1.1 headers"
            ]
        ],
        "Contains": [
            [
                "FABS file",
                "schema v1.1 headers"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a agency user, I want to map the FederalActionObligation properly to the Atom Feed.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "map"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FederalActionObligation"
            ],
            "Secondary Entity": [
                "Atom Feed"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "map"
            ]
        ],
        "Targets": [
            [
                "map",
                "FederalActionObligation"
            ]
        ],
        "Contains": [
            [
                "Atom Feed",
                "FederalActionObligation"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Broker user, I want to have PPoPZIP+4 work the same as the Legal Entity ZIP validations.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "work"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "PPoPZIP+4",
                "Legal Entity ZIP validations"
            ],
            "Secondary Entity": [
                ""
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Broker user",
                "work"
            ]
        ],
        "Targets": [
            [
                "work",
                "PPoPZIP+4"
            ],
            [
                "work",
                "Legal Entity ZIP validations"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to link the SAMPLE FILE on the \"What you want  to submit\" dialog to point to the correct file, so that I have an accurate reference for my agency submissions.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "link"
            ],
            "Secondary Action": [
                "point",
                "have"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "SAMPLE FILE"
            ],
            "Secondary Entity": [
                "\"What you want  to submit\" dialog",
                "correct file",
                "accurate reference",
                "agency submissions"
            ]
        },
        "Benefit": "I have an accurate reference for my agency submissions",
        "Triggers": [
            [
                "FABS user",
                "link"
            ]
        ],
        "Targets": [
            [
                "link",
                "SAMPLE FILE"
            ],
            [
                "point",
                "correct file"
            ],
            [
                "have",
                "accurate reference"
            ]
        ],
        "Contains": [
            [
                "\"What you want  to submit\" dialog",
                "SAMPLE FILE"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want FPDS data to be up-to-date daily.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "be"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FPDS data"
            ],
            "Secondary Entity": [
                "up-to-date daily"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "FPDS data"
            ],
            [
                "be",
                "up-to-date daily"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want to access the raw agency published files from FABS via USAspending.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "access"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "raw agency published files"
            ],
            "Secondary Entity": [
                "FABS",
                "USAspending"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "access"
            ]
        ],
        "Targets": [
            [
                "access",
                "raw agency published files"
            ]
        ],
        "Contains": [
            [
                "USAspending",
                "FABS"
            ],
            [
                "FABS",
                "raw agency published files"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want to determine how agencies will generate and validate D Files from FABS and FPDS data.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "determine"
            ],
            "Secondary Action": [
                "validate",
                "generate"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "agencies"
            ],
            "Secondary Entity": [
                "D Files",
                "FABS",
                "FPDS data"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Developer",
                "determine"
            ]
        ],
        "Targets": [
            [
                "determine",
                "agencies"
            ],
            [
                "generate",
                "D Files"
            ],
            [
                "validate",
                "D Files"
            ]
        ],
        "Contains": [
            [
                "FABS",
                "D Files"
            ],
            [
                "FPDS data",
                "D Files"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want to generate and validate D Files from FABS and FPDS data.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "generate",
                "validate"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "D Files"
            ],
            "Secondary Entity": [
                "FABS",
                "FPDS data"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "generate"
            ],
            [
                "user",
                "validate"
            ]
        ],
        "Targets": [
            [
                "validate",
                "D Files"
            ],
            [
                "generate",
                "D Files"
            ]
        ],
        "Contains": [
            [
                "FABS",
                "D Files"
            ],
            [
                "FPDS data",
                "D Files"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want the header information box to show updated date AND time, so that I know when it was updated.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "show"
            ],
            "Secondary Action": [
                "know"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "updated date AND time"
            ],
            "Secondary Entity": [
                "header information box"
            ]
        },
        "Benefit": "I know when it was updated",
        "Triggers": [
            [
                "Agency user",
                "show"
            ]
        ],
        "Targets": [
            [
                "show",
                "updated date AND time"
            ],
            [
                "know",
                "header information box"
            ]
        ],
        "Contains": [
            [
                "header information box",
                "updated date AND time"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want to receive a more helpful file-level error when I upload a file with the wrong extension.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "receive"
            ],
            "Secondary Action": [
                "upload"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "helpful file-level error"
            ],
            "Secondary Entity": [
                "file",
                "wrong extension"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Agency user",
                "receive"
            ]
        ],
        "Targets": [
            [
                "receive",
                "helpful file-level error"
            ],
            [
                "upload",
                "file"
            ]
        ],
        "Contains": [
            [
                "file",
                "wrong extension"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a tester, I want to have access to test features in environments other than Staging, so that I can test any nonProd feature in any environment.",
        "Persona": [
            "tester"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "test"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "access"
            ],
            "Secondary Entity": [
                "test features",
                "environments",
                "Staging",
                "any environment",
                "any nonProd feature"
            ]
        },
        "Benefit": "I can test any nonProd feature in any environment",
        "Triggers": [
            [
                "tester",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "access"
            ],
            [
                "test",
                "any nonProd feature"
            ]
        ],
        "Contains": [
            [
                "test features",
                "access"
            ],
            [
                "environments",
                "test features"
            ],
            [
                "Staging",
                "test features"
            ],
            [
                "any environment",
                "any nonProd feature"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to submission errors to accurately represent FABS errors, so that I know why my submission didn't work.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "accurately represent",
                "know"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "submission errors"
            ],
            "Secondary Entity": [
                "FABS errors",
                "submission"
            ]
        },
        "Benefit": "I know why my submission didn't work",
        "Triggers": [
            [
                "FABS user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "submission errors"
            ],
            [
                "accurately represent",
                "FABS errors"
            ],
            [
                "know",
                "submission"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want the frontend URLs to more accurately reflect the page I'm accessing, so that I'm not confused.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "more accurately reflect",
                "not confused"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "frontend URLs"
            ],
            "Secondary Entity": [
                "page"
            ]
        },
        "Benefit": "I'm not confused",
        "Triggers": [
            [
                "FABS user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "frontend URLs"
            ],
            [
                "more accurately reflect",
                "page"
            ],
            [
                "not confused",
                "frontend URLs"
            ]
        ],
        "Contains": [
            [
                "page",
                "frontend URLs"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want all historical Financial Assistance data loaded for FABS go-live.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "loaded"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "historical Financial Assistance data"
            ],
            "Secondary Entity": [
                "FABS go-live"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Agency user",
                "loaded"
            ]
        ],
        "Targets": [
            [
                "loaded",
                "historical Financial Assistance data"
            ]
        ],
        "Contains": [
            [
                "FABS go-live",
                "historical Financial Assistance data"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want the historical FPDS data loader to include both extracted historical data and FPDS feed data.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "include"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "extracted historical data",
                "FPDS feed data"
            ],
            "Secondary Entity": [
                "historical FPDS data loader"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Developer",
                "include"
            ]
        ],
        "Targets": [
            [
                "include",
                "extracted historical data"
            ],
            [
                "include",
                "FPDS feed data"
            ]
        ],
        "Contains": [
            [
                "historical FPDS data loader",
                "extracted historical data"
            ],
            [
                "historical FPDS data loader",
                "FPDS feed data"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want historical FPDS data loaded.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "loaded"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "historical FPDS data"
            ],
            "Secondary Entity": [
                ""
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Agency user",
                "loaded"
            ]
        ],
        "Targets": [
            [
                "loaded",
                "historical FPDS data"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want to accurately see who created a submission, so that I'm not confused about who last updated a submission.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "accurately see"
            ],
            "Secondary Action": [
                "created",
                "last updated",
                "not confused"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "who"
            ],
            "Secondary Entity": [
                "submission",
                "who",
                "submission"
            ]
        },
        "Benefit": "I'm not confused about who last updated a submission",
        "Triggers": [
            [
                "Agency user",
                "accurately see"
            ]
        ],
        "Targets": [
            [
                "accurately see",
                "who"
            ],
            [
                "created",
                "submission"
            ],
            [
                "not confused",
                "who"
            ],
            [
                "last updated",
                "submission"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to get File F in the correct format.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "get"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "File F"
            ],
            "Secondary Entity": [
                "correct format"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "agency user",
                "get"
            ]
        ],
        "Targets": [
            [
                "get",
                "File F"
            ]
        ],
        "Contains": [
            [
                "File F",
                "correct format"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an Agency user, I want to better understand my file-level errors.",
        "Persona": [
            "Agency user"
        ],
        "Action": {
            "Primary Action": [
                "better understand"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "file-level errors"
            ],
            "Secondary Entity": [
                ""
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Agency user",
                "better understand"
            ]
        ],
        "Targets": [
            [
                "better understand",
                "file-level errors"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want to provide FABS groups that function under the FREC paradigm.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "provide"
            ],
            "Secondary Action": [
                "function under"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FABS groups"
            ],
            "Secondary Entity": [
                "FREC paradigm"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Developer",
                "provide"
            ]
        ],
        "Targets": [
            [
                "provide",
                "FABS groups"
            ],
            [
                "function under",
                "FREC paradigm"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a tester, I want to ensure that FABS is deriving fields properly through a robust test file plus a follow up check.",
        "Persona": [
            "tester"
        ],
        "Action": {
            "Primary Action": [
                "ensure"
            ],
            "Secondary Action": [
                "deriving"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "FABS"
            ],
            "Secondary Entity": [
                "fields",
                "robust test file",
                "follow up check"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "tester",
                "ensure"
            ]
        ],
        "Targets": [
            [
                "ensure",
                "FABS"
            ],
            [
                "deriving",
                "fields"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an owner, I only want zero-padded fields, so that I can justify padding.",
        "Persona": [
            "owner"
        ],
        "Action": {
            "Primary Action": [
                "only want"
            ],
            "Secondary Action": [
                "justify"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "zero-padded fields"
            ],
            "Secondary Entity": [
                "padding"
            ]
        },
        "Benefit": "I can justify padding",
        "Triggers": [
            [
                "owner",
                "only want"
            ]
        ],
        "Targets": [
            [
                "only want",
                "zero-padded fields"
            ],
            [
                "justify",
                "padding"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Broker user, I want to submit records for individual recipients without receiving a DUNS error.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "submit"
            ],
            "Secondary Action": [
                "without receiving"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "records"
            ],
            "Secondary Entity": [
                "individual recipients",
                "DUNS error"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Broker user",
                "submit"
            ]
        ],
        "Targets": [
            [
                "submit",
                "records"
            ],
            [
                "without receiving",
                "DUNS error"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a user, I want more information about how many rows will be published prior to deciding whether to publish.",
        "Persona": [
            "user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "publish",
                "deciding"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "more information"
            ],
            "Secondary Entity": [
                "rows"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "more information"
            ],
            [
                "publish",
                "rows"
            ]
        ],
        "Contains": [
            [
                "more information",
                "rows"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer, I want to prevent duplicate transactions from being published and deal with the time gap between validation and the publishing decision.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "prevent",
                "deal"
            ],
            "Secondary Action": [
                "published"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "duplicate transactions",
                "time gap"
            ],
            "Secondary Entity": [
                "publishing decision",
                "validation"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "Developer",
                "prevent"
            ],
            [
                "Developer",
                "deal"
            ]
        ],
        "Targets": [
            [
                "prevent",
                "duplicate transactions"
            ],
            [
                "deal",
                "time gap"
            ]
        ],
        "Contains": [
            [
                "validation",
                "time gap"
            ],
            [
                "publishing decision",
                "time gap"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to submit a citywide as a PPoPZIP and pass validations.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "submit",
                "pass"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "citywide",
                "validations"
            ],
            "Secondary Entity": [
                "PPoPZIP"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "FABS user",
                "submit"
            ],
            [
                "FABS user",
                "pass"
            ]
        ],
        "Targets": [
            [
                "submit",
                "citywide"
            ],
            [
                "pass",
                "validations"
            ]
        ],
        "Contains": [
            [
                "citywide",
                "PPoPZIP"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Broker user, I want to have updated error codes that accurately reflect the logic and provide enough information, so that I can fix my submission.",
        "Persona": [
            "Broker user"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "fix"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "updated error codes"
            ],
            "Secondary Entity": [
                "logic",
                "enough information",
                "submission"
            ]
        },
        "Benefit": "I can fix my submission",
        "Triggers": [
            [
                "Broker user",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "updated error codes"
            ],
            [
                "fix",
                "submission"
            ]
        ],
        "Contains": [
            [
                "updated error codes",
                "logic"
            ],
            [
                "updated error codes",
                "enough information"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to leave off the last 4 digits of the ZIP without an error, so that I can complete my submissions.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "leave off"
            ],
            "Secondary Action": [
                "complete"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "last 4 digits"
            ],
            "Secondary Entity": [
                "ZIP",
                "error",
                "submissions"
            ]
        },
        "Benefit": "I can complete my submissions",
        "Triggers": [
            [
                "agency user",
                "leave off"
            ]
        ],
        "Targets": [
            [
                "leave off",
                "last 4 digits"
            ],
            [
                "complete",
                "submissions"
            ]
        ],
        "Contains": [
            [
                "ZIP",
                "last 4 digits"
            ],
            [
                "submissions",
                "ZIP"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to make sure the historical data includes all necessary columns, so that the information in the database is correct.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "necessary columns"
            ],
            "Secondary Entity": [
                "historical data",
                "database",
                "information"
            ]
        },
        "Benefit": "the information in the database is correct",
        "Triggers": [
            [
                "FABS user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "necessary columns"
            ]
        ],
        "Contains": [
            [
                "historical data",
                "necessary columns"
            ],
            [
                "database",
                "information"
            ],
            [
                "information",
                "historical data"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a data user, I want to access two additional fields from the FPDS data pull.",
        "Persona": [
            "data user"
        ],
        "Action": {
            "Primary Action": [
                "access"
            ],
            "Secondary Action": [
                ""
            ]
        },
        "Entity": {
            "Primary Entity": [
                "two additional fields"
            ],
            "Secondary Entity": [
                "FPDS data pull"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "data user",
                "access"
            ]
        ],
        "Targets": [
            [
                "access",
                "two additional fields"
            ]
        ],
        "Contains": [
            [
                "FPDS data pull",
                "two additional fields"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want additional helpful info in the submission dashboard, so that I can better manage submissions and IG requests.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "better manage"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "additional helpful info"
            ],
            "Secondary Entity": [
                "submission dashboard",
                "submissions",
                "IG requests"
            ]
        },
        "Benefit": "I can better manage submissions and IG requests",
        "Triggers": [
            [
                "FABS user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "additional helpful info"
            ],
            [
                "better manage",
                "submissions"
            ],
            [
                "better manage",
                "IG requests"
            ]
        ],
        "Contains": [
            [
                "submission dashboard",
                "additional helpful info"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to download the uploaded FABS file, so that I can get the uploaded file.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "download"
            ],
            "Secondary Action": [
                "get"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "uploaded FABS file"
            ],
            "Secondary Entity": [
                "uploaded file"
            ]
        },
        "Benefit": "I can get the uploaded file",
        "Triggers": [
            [
                "FABS user",
                "download"
            ]
        ],
        "Targets": [
            [
                "download",
                "uploaded FABS file"
            ],
            [
                "get",
                "uploaded file"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer I want to quickly access Broker application data, so that I can investigate issues.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "quickly access"
            ],
            "Secondary Action": [
                "investigate"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "Broker application data"
            ],
            "Secondary Entity": [
                "issues"
            ]
        },
        "Benefit": "I can investigate issues",
        "Triggers": [
            [
                "Developer",
                "quickly access"
            ]
        ],
        "Targets": [
            [
                "quickly access",
                "Broker application data"
            ],
            [
                "investigate",
                "issues"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a Developer , I want to determine the best way to load historical FPDS data, so that I can load all FPDS data since 2007.",
        "Persona": [
            "Developer"
        ],
        "Action": {
            "Primary Action": [
                "determine"
            ],
            "Secondary Action": [
                "load",
                "load"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "best way"
            ],
            "Secondary Entity": [
                "historical FPDS data",
                "FPDS data since 2007"
            ]
        },
        "Benefit": "I can load all FPDS data since 2007",
        "Triggers": [
            [
                "Developer",
                "determine"
            ]
        ],
        "Targets": [
            [
                "determine",
                "best way"
            ],
            [
                "load",
                "historical FPDS data"
            ],
            [
                "load",
                "FPDS data since 2007"
            ]
        ],
        "Contains": [
            [
                "historical FPDS data",
                "FPDS data since 2007"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want the language on FABS pages to be appropriate for me, so that I am not confused.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "not confused"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "language"
            ],
            "Secondary Entity": [
                "FABS pages"
            ]
        },
        "Benefit": "I am not confused",
        "Triggers": [
            [
                "FABS user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "language"
            ],
            [
                "not confused",
                "language"
            ]
        ],
        "Contains": [
            [
                "FABS pages",
                "language"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I do not want  DABS banner messages and vice versa, so that I have the appropriate information for my application.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "do not want",
                "want"
            ],
            "Secondary Action": [
                "have"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "DABS banner messages"
            ],
            "Secondary Entity": [
                "appropriate information",
                "application"
            ]
        },
        "Benefit": "I have the appropriate information for my application",
        "Triggers": [
            [
                "FABS user",
                "do not want"
            ],
            [
                "FABS user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "DABS banner messages"
            ],
            [
                "do not want",
                "DABS banner messages"
            ],
            [
                "have",
                "appropriate information"
            ]
        ],
        "Contains": [
            [
                "application",
                "appropriate information"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to have read-only access to DABS, so that I can view DABS pages without wanting two sets of permissions.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "view"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "read-only access"
            ],
            "Secondary Entity": [
                "DABS",
                "two sets of permissions",
                "DABS pages"
            ]
        },
        "Benefit": "I can view DABS pages without wanting two sets of permissions",
        "Triggers": [
            [
                "FABS user",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "read-only access"
            ],
            [
                "view",
                "DABS pages"
            ]
        ],
        "Contains": [
            [
                "DABS",
                "read-only access"
            ],
            [
                "DABS pages",
                "two sets of permissions"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to have my validations run in a reasonable amount of time.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "have"
            ],
            "Secondary Action": [
                "run"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "validations"
            ],
            "Secondary Entity": [
                "reasonable amount of time"
            ]
        },
        "Benefit": "",
        "Triggers": [
            [
                "FABS user",
                "have"
            ]
        ],
        "Targets": [
            [
                "have",
                "validations"
            ],
            [
                "run",
                "reasonable amount of time"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As a FABS user, I want to see correct status labels on the Submission Dashboard, so that I can quickly see my submission history.",
        "Persona": [
            "FABS user"
        ],
        "Action": {
            "Primary Action": [
                "see"
            ],
            "Secondary Action": [
                "quickly see"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "correct status labels"
            ],
            "Secondary Entity": [
                "Submission Dashboard",
                "submission history"
            ]
        },
        "Benefit": "I can quickly see my submission history",
        "Triggers": [
            [
                "FABS user",
                "see"
            ]
        ],
        "Targets": [
            [
                "see",
                "correct status labels"
            ],
            [
                "quickly see",
                "submission history"
            ]
        ],
        "Contains": [
            [
                "Submission Dashboard",
                "correct status labels"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to know when the submission periods start and end, so that I know when the submission starts and ends.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "know"
            ],
            "Secondary Action": [
                "know"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "submission periods start and end"
            ],
            "Secondary Entity": [
                "submission starts and ends"
            ]
        },
        "Benefit": "I know when the submission starts and ends",
        "Triggers": [
            [
                "agency user",
                "know"
            ]
        ],
        "Targets": [
            [
                "know",
                "submission periods start and end"
            ],
            [
                "know",
                "submission starts and ends"
            ]
        ],
        "Contains": []
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want a landing page to navigate to either FABS or DABS pages, so that I can access both sides of the site.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "want"
            ],
            "Secondary Action": [
                "navigate",
                "access"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "landing page"
            ],
            "Secondary Entity": [
                "FABS",
                "DABS pages",
                "both sides of the site"
            ]
        },
        "Benefit": "I can access both sides of the site",
        "Triggers": [
            [
                "agency user",
                "want"
            ]
        ],
        "Targets": [
            [
                "want",
                "landing page"
            ],
            [
                "navigate",
                "FABS"
            ],
            [
                "navigate",
                "DABS pages"
            ],
            [
                "access",
                "both sides of the site"
            ]
        ],
        "Contains": [
            [
                "landing page",
                "FABS"
            ],
            [
                "landing page",
                "DABS pages"
            ]
        ]
    },
    {
        "PID": "#G02#",
        "Text": "#G02# As an agency user, I want to submit my data elements surrounded by quotation marks, so that Excel won't strip off leading and trailing zeroes.",
        "Persona": [
            "agency user"
        ],
        "Action": {
            "Primary Action": [
                "submit"
            ],
            "Secondary Action": [
                "won't strip off"
            ]
        },
        "Entity": {
            "Primary Entity": [
                "data elements"
            ],
            "Secondary Entity": [
                "quotation marks",
                "leading and trailing zeroes",
                "Excel"
            ]
        },
        "Benefit": "Excel won't strip off leading and trailing zeroes",
        "Triggers": [
            [
                "agency user",
                "submit"
            ]
        ],
        "Targets": [
            [
                "submit",
                "data elements"
            ],
            [
                "won't strip off",
                "leading and trailing zeroes"
            ]
        ],
        "Contains": [
            [
                "data elements",
                "quotation marks"
            ],
            [
                "Excel",
                "data elements"
            ]
        ]
    }
]